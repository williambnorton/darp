{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4","program":"/Users/wbn/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","bytes","--edition=2018","/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"std\"","-C","metadata=2e324c467535e528","-C","extra-filename=-2e324c467535e528","--out-dir","/Users/wbn/Dropbox/Development/darp_rust/tokio_udp_rate_test-master/client/target/rls/debug/deps","-L","dependency=/Users/wbn/Dropbox/Development/darp_rust/tokio_udp_rate_test-master/client/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/Users/wbn/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/wbn/Dropbox/Development/darp_rust/tokio_udp_rate_test-master/client/target/rls/debug/deps/libbytes-2e324c467535e528.rmeta"},"prelude":{"crate_id":{"name":"bytes","disambiguator":[2391901473293149128,14626317132410063048]},"crate_root":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src","external_crates":[{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[16348493018826829365,4805211970644213659]}},{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[8279628881989909837,14733107812838978533]}},{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[17646096667663791084,12272231044852301253]}},{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/lib.rs","num":4,"id":{"name":"alloc","disambiguator":[4565760717972533866,4473905522437311200]}},{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/lib.rs","num":5,"id":{"name":"std","disambiguator":[16125995874279485955,8748768413821387129]}},{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[7551666766599439458,2782226154556471377]}},{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[11632633256475535999,13776501019579249840]}},{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[4897607742433192731,640426136460610934]}},{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[15534826887064733014,5612939005974764181]}},{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[1175232612468424282,18163295741730709113]}},{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[15721596154046543409,2249662874474360977]}},{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[7768511099061914688,4128344505014859734]}},{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[15048206832849992118,3387758009953732431]}},{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[13751153714556823430,9887373550715096268]}},{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[13432701172845674020,17161827416142858739]}}],"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/lib.rs","byte_start":0,"byte_end":3440,"line_start":1,"line_end":117,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":944},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":60720,"byte_end":60725,"line_start":13,"line_end":13,"column_start":22,"column_end":27},"alias_span":null,"name":"Limit","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":957},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":60747,"byte_end":60751,"line_start":14,"line_end":14,"column_start":21,"column_end":25},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":935},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":60774,"byte_end":60779,"line_start":15,"line_end":15,"column_start":22,"column_end":27},"alias_span":null,"name":"Chain","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":951},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":60829,"byte_end":60835,"line_start":18,"line_end":18,"column_start":24,"column_end":30},"alias_span":null,"name":"Reader","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":964},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":60845,"byte_end":60851,"line_start":18,"line_end":18,"column_start":40,"column_end":46},"alias_span":null,"name":"Writer","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":16},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/mod.rs","byte_start":4268,"byte_end":4271,"line_start":25,"line_end":25,"column_start":25,"column_end":28},"alias_span":null,"name":"Buf","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":84},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/mod.rs","byte_start":4296,"byte_end":4302,"line_start":26,"line_end":26,"column_start":24,"column_end":30},"alias_span":null,"name":"BufMut","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":272},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/mod.rs","byte_start":4324,"byte_end":4330,"line_start":27,"line_end":27,"column_start":21,"column_end":27},"alias_span":null,"name":"BufExt","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":279},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/mod.rs","byte_start":4332,"byte_end":4341,"line_start":27,"line_end":27,"column_start":29,"column_end":38},"alias_span":null,"name":"BufMutExt","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":138},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/mod.rs","byte_start":4391,"byte_end":4401,"line_start":29,"line_end":29,"column_start":24,"column_end":34},"alias_span":null,"name":"IoSliceMut","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":970},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/mod.rs","byte_start":4423,"byte_end":4431,"line_start":30,"line_end":30,"column_start":21,"column_end":29},"alias_span":null,"name":"IntoIter","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":16},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/lib.rs","byte_start":2899,"byte_end":2902,"line_start":83,"line_end":83,"column_start":5,"column_end":8},"alias_span":null,"name":"Buf","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":84},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/lib.rs","byte_start":2908,"byte_end":2914,"line_start":84,"line_end":84,"column_start":5,"column_end":11},"alias_span":null,"name":"BufMut","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":356},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/lib.rs","byte_start":2991,"byte_end":2999,"line_start":91,"line_end":91,"column_start":27,"column_end":35},"alias_span":null,"name":"BytesMut","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":577},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/lib.rs","byte_start":3023,"byte_end":3028,"line_start":92,"line_end":92,"column_start":23,"column_end":28},"alias_span":null,"name":"Bytes","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/lib.rs","byte_start":0,"byte_end":3440,"line_start":1,"line_end":117,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":315},{"krate":0,"index":316},{"krate":0,"index":317},{"krate":0,"index":318},{"krate":0,"index":551},{"krate":0,"index":729},{"krate":0,"index":764},{"krate":0,"index":772},{"krate":0,"index":773},{"krate":0,"index":774}],"decl_id":null,"docs":" Provides abstractions for working with bytes.","sig":null,"attributes":[{"value":"deny(warnings, missing_docs, missing_debug_implementations,\n       rust_2018_idioms)","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/lib.rs","byte_start":0,"byte_end":81,"line_start":1,"line_end":1,"column_start":1,"column_end":82}},{"value":"no_std","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/lib.rs","byte_start":137,"byte_end":147,"line_start":3,"line_end":3,"column_start":1,"column_end":11}},{"value":"/ Provides abstractions for working with bytes.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/lib.rs","byte_start":149,"byte_end":198,"line_start":5,"line_end":5,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/lib.rs","byte_start":199,"byte_end":202,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ The `bytes` crate provides an efficient byte buffer structure","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/lib.rs","byte_start":203,"byte_end":268,"line_start":7,"line_end":7,"column_start":1,"column_end":66}},{"value":"/ ([`Bytes`](struct.Bytes.html)) and traits for working with buffer","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/lib.rs","byte_start":269,"byte_end":338,"line_start":8,"line_end":8,"column_start":1,"column_end":70}},{"value":"/ implementations ([`Buf`], [`BufMut`]).","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/lib.rs","byte_start":339,"byte_end":381,"line_start":9,"line_end":9,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/lib.rs","byte_start":382,"byte_end":385,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`Buf`]: trait.Buf.html","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/lib.rs","byte_start":386,"byte_end":413,"line_start":11,"line_end":11,"column_start":1,"column_end":28}},{"value":"/ [`BufMut`]: trait.BufMut.html","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/lib.rs","byte_start":414,"byte_end":447,"line_start":12,"line_end":12,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/lib.rs","byte_start":448,"byte_end":451,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # `Bytes`","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/lib.rs","byte_start":452,"byte_end":465,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/lib.rs","byte_start":466,"byte_end":469,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ `Bytes` is an efficient container for storing and operating on contiguous","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/lib.rs","byte_start":470,"byte_end":547,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ slices of memory. It is intended for use primarily in networking code, but","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/lib.rs","byte_start":548,"byte_end":626,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/ could have applications elsewhere as well.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/lib.rs","byte_start":627,"byte_end":673,"line_start":18,"line_end":18,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/lib.rs","byte_start":674,"byte_end":677,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ `Bytes` values facilitate zero-copy network programming by allowing multiple","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/lib.rs","byte_start":678,"byte_end":758,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ `Bytes` objects to point to the same underlying memory. This is managed by","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/lib.rs","byte_start":759,"byte_end":837,"line_start":21,"line_end":21,"column_start":1,"column_end":79}},{"value":"/ using a reference count to track when the memory is no longer needed and can","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/lib.rs","byte_start":838,"byte_end":918,"line_start":22,"line_end":22,"column_start":1,"column_end":81}},{"value":"/ be freed.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/lib.rs","byte_start":919,"byte_end":932,"line_start":23,"line_end":23,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/lib.rs","byte_start":933,"byte_end":936,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ A `Bytes` handle can be created directly from an existing byte store (such as `&[u8]`","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/lib.rs","byte_start":937,"byte_end":1026,"line_start":25,"line_end":25,"column_start":1,"column_end":90}},{"value":"/ or `Vec<u8>`), but usually a `BytesMut` is used first and written to. For","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/lib.rs","byte_start":1027,"byte_end":1104,"line_start":26,"line_end":26,"column_start":1,"column_end":78}},{"value":"/ example:","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/lib.rs","byte_start":1105,"byte_end":1117,"line_start":27,"line_end":27,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/lib.rs","byte_start":1118,"byte_end":1121,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/lib.rs","byte_start":1122,"byte_end":1133,"line_start":29,"line_end":29,"column_start":1,"column_end":12}},{"value":"/ use bytes::{BytesMut, BufMut};","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/lib.rs","byte_start":1134,"byte_end":1168,"line_start":30,"line_end":30,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/lib.rs","byte_start":1169,"byte_end":1172,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ let mut buf = BytesMut::with_capacity(1024);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/lib.rs","byte_start":1173,"byte_end":1221,"line_start":32,"line_end":32,"column_start":1,"column_end":49}},{"value":"/ buf.put(&b\"hello world\"[..]);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/lib.rs","byte_start":1222,"byte_end":1255,"line_start":33,"line_end":33,"column_start":1,"column_end":34}},{"value":"/ buf.put_u16(1234);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/lib.rs","byte_start":1256,"byte_end":1278,"line_start":34,"line_end":34,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/lib.rs","byte_start":1279,"byte_end":1282,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ let a = buf.split();","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/lib.rs","byte_start":1283,"byte_end":1307,"line_start":36,"line_end":36,"column_start":1,"column_end":25}},{"value":"/ assert_eq!(a, b\"hello world\\x04\\xD2\"[..]);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/lib.rs","byte_start":1308,"byte_end":1354,"line_start":37,"line_end":37,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/lib.rs","byte_start":1355,"byte_end":1358,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ buf.put(&b\"goodbye world\"[..]);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/lib.rs","byte_start":1359,"byte_end":1394,"line_start":39,"line_end":39,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/lib.rs","byte_start":1395,"byte_end":1398,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ let b = buf.split();","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/lib.rs","byte_start":1399,"byte_end":1423,"line_start":41,"line_end":41,"column_start":1,"column_end":25}},{"value":"/ assert_eq!(b, b\"goodbye world\"[..]);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/lib.rs","byte_start":1424,"byte_end":1464,"line_start":42,"line_end":42,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/lib.rs","byte_start":1465,"byte_end":1468,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(buf.capacity(), 998);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/lib.rs","byte_start":1469,"byte_end":1505,"line_start":44,"line_end":44,"column_start":1,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/lib.rs","byte_start":1506,"byte_end":1513,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/lib.rs","byte_start":1514,"byte_end":1517,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ In the above example, only a single buffer of 1024 is allocated. The handles","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/lib.rs","byte_start":1518,"byte_end":1598,"line_start":47,"line_end":47,"column_start":1,"column_end":81}},{"value":"/ `a` and `b` will share the underlying buffer and maintain indices tracking","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/lib.rs","byte_start":1599,"byte_end":1677,"line_start":48,"line_end":48,"column_start":1,"column_end":79}},{"value":"/ the view into the buffer represented by the handle.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/lib.rs","byte_start":1678,"byte_end":1733,"line_start":49,"line_end":49,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/lib.rs","byte_start":1734,"byte_end":1737,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ See the [struct docs] for more details.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/lib.rs","byte_start":1738,"byte_end":1781,"line_start":51,"line_end":51,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/lib.rs","byte_start":1782,"byte_end":1785,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ [struct docs]: struct.Bytes.html","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/lib.rs","byte_start":1786,"byte_end":1822,"line_start":53,"line_end":53,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/lib.rs","byte_start":1823,"byte_end":1826,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ # `Buf`, `BufMut`","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/lib.rs","byte_start":1827,"byte_end":1848,"line_start":55,"line_end":55,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/lib.rs","byte_start":1849,"byte_end":1852,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ These two traits provide read and write access to buffers. The underlying","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/lib.rs","byte_start":1853,"byte_end":1930,"line_start":57,"line_end":57,"column_start":1,"column_end":78}},{"value":"/ storage may or may not be in contiguous memory. For example, `Bytes` is a","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/lib.rs","byte_start":1931,"byte_end":2008,"line_start":58,"line_end":58,"column_start":1,"column_end":78}},{"value":"/ buffer that guarantees contiguous memory, but a [rope] stores the bytes in","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/lib.rs","byte_start":2009,"byte_end":2087,"line_start":59,"line_end":59,"column_start":1,"column_end":79}},{"value":"/ disjoint chunks. `Buf` and `BufMut` maintain cursors tracking the current","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/lib.rs","byte_start":2088,"byte_end":2165,"line_start":60,"line_end":60,"column_start":1,"column_end":78}},{"value":"/ position in the underlying byte storage. When bytes are read or written, the","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/lib.rs","byte_start":2166,"byte_end":2246,"line_start":61,"line_end":61,"column_start":1,"column_end":81}},{"value":"/ cursor is advanced.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/lib.rs","byte_start":2247,"byte_end":2270,"line_start":62,"line_end":62,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/lib.rs","byte_start":2271,"byte_end":2274,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ [rope]: https://en.wikipedia.org/wiki/Rope_(data_structure)","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/lib.rs","byte_start":2275,"byte_end":2338,"line_start":64,"line_end":64,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/lib.rs","byte_start":2339,"byte_end":2342,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ ## Relation with `Read` and `Write`","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/lib.rs","byte_start":2343,"byte_end":2382,"line_start":66,"line_end":66,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/lib.rs","byte_start":2383,"byte_end":2386,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ At first glance, it may seem that `Buf` and `BufMut` overlap in","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/lib.rs","byte_start":2387,"byte_end":2454,"line_start":68,"line_end":68,"column_start":1,"column_end":68}},{"value":"/ functionality with `std::io::Read` and `std::io::Write`. However, they","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/lib.rs","byte_start":2455,"byte_end":2529,"line_start":69,"line_end":69,"column_start":1,"column_end":75}},{"value":"/ serve different purposes. A buffer is the value that is provided as an","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/lib.rs","byte_start":2530,"byte_end":2604,"line_start":70,"line_end":70,"column_start":1,"column_end":75}},{"value":"/ argument to `Read::read` and `Write::write`. `Read` and `Write` may then","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/lib.rs","byte_start":2605,"byte_end":2681,"line_start":71,"line_end":71,"column_start":1,"column_end":77}},{"value":"/ perform a syscall, which has the potential of failing. Operations on `Buf`","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/lib.rs","byte_start":2682,"byte_end":2760,"line_start":72,"line_end":72,"column_start":1,"column_end":79}},{"value":"/ and `BufMut` are infallible.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/lib.rs","byte_start":2761,"byte_end":2793,"line_start":73,"line_end":73,"column_start":1,"column_end":33}}]},{"kind":"Mod","id":{"krate":0,"index":6},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"buf","qualname":"::buf","value":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/mod.rs","parent":null,"children":[{"krate":0,"index":7},{"krate":0,"index":72},{"krate":0,"index":150},{"krate":0,"index":286},{"krate":0,"index":301},{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":312},{"krate":0,"index":313},{"krate":0,"index":314}],"decl_id":null,"docs":" Utilities for working with buffers.","sig":null,"attributes":[{"value":"/ Utilities for working with buffers.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/mod.rs","byte_start":3442,"byte_end":3481,"line_start":1,"line_end":1,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/mod.rs","byte_start":3482,"byte_end":3485,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ A buffer is any structure that contains a sequence of bytes. The bytes may","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/mod.rs","byte_start":3486,"byte_end":3564,"line_start":3,"line_end":3,"column_start":1,"column_end":79}},{"value":"/ or may not be stored in contiguous memory. This module contains traits used","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/mod.rs","byte_start":3565,"byte_end":3644,"line_start":4,"line_end":4,"column_start":1,"column_end":80}},{"value":"/ to abstract over buffers as well as utilities for working with buffer types.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/mod.rs","byte_start":3645,"byte_end":3725,"line_start":5,"line_end":5,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/mod.rs","byte_start":3726,"byte_end":3729,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ # `Buf`, `BufMut`","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/mod.rs","byte_start":3730,"byte_end":3751,"line_start":7,"line_end":7,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/mod.rs","byte_start":3752,"byte_end":3755,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ These are the two foundational traits for abstractly working with buffers.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/mod.rs","byte_start":3756,"byte_end":3834,"line_start":9,"line_end":9,"column_start":1,"column_end":79}},{"value":"/ They can be thought as iterators for byte structures. They offer additional","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/mod.rs","byte_start":3835,"byte_end":3914,"line_start":10,"line_end":10,"column_start":1,"column_end":80}},{"value":"/ performance over `Iterator` by providing an API optimized for byte slices.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/mod.rs","byte_start":3915,"byte_end":3993,"line_start":11,"line_end":11,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/mod.rs","byte_start":3994,"byte_end":3997,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ See [`Buf`] and [`BufMut`] for more details.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/mod.rs","byte_start":3998,"byte_end":4046,"line_start":13,"line_end":13,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/mod.rs","byte_start":4047,"byte_end":4050,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [rope]: https://en.wikipedia.org/wiki/Rope_(data_structure)","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/mod.rs","byte_start":4051,"byte_end":4114,"line_start":15,"line_end":15,"column_start":1,"column_end":64}},{"value":"/ [`Buf`]: trait.Buf.html","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/mod.rs","byte_start":4115,"byte_end":4142,"line_start":16,"line_end":16,"column_start":1,"column_end":28}},{"value":"/ [`BufMut`]: trait.BufMut.html","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/mod.rs","byte_start":4143,"byte_end":4176,"line_start":17,"line_end":17,"column_start":1,"column_end":34}}]},{"kind":"Trait","id":{"krate":0,"index":16},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":6871,"byte_end":6874,"line_start":71,"line_end":71,"column_start":11,"column_end":14},"name":"Buf","qualname":"::buf::buf_impl::Buf","value":"Buf","parent":null,"children":[{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":50}],"decl_id":null,"docs":" Read bytes from a buffer.","sig":null,"attributes":[{"value":"/ Read bytes from a buffer.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":6154,"byte_end":6183,"line_start":47,"line_end":47,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":6184,"byte_end":6187,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ A buffer stores bytes in memory such that read operations are infallible.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":6188,"byte_end":6265,"line_start":49,"line_end":49,"column_start":1,"column_end":78}},{"value":"/ The underlying storage may or may not be in contiguous memory. A `Buf` value","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":6266,"byte_end":6346,"line_start":50,"line_end":50,"column_start":1,"column_end":81}},{"value":"/ is a cursor into the buffer. Reading from `Buf` advances the cursor","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":6347,"byte_end":6418,"line_start":51,"line_end":51,"column_start":1,"column_end":72}},{"value":"/ position. It can be thought of as an efficient `Iterator` for collections of","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":6419,"byte_end":6499,"line_start":52,"line_end":52,"column_start":1,"column_end":81}},{"value":"/ bytes.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":6500,"byte_end":6510,"line_start":53,"line_end":53,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":6511,"byte_end":6514,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ The simplest `Buf` is a `&[u8]`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":6515,"byte_end":6551,"line_start":55,"line_end":55,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":6552,"byte_end":6555,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":6556,"byte_end":6563,"line_start":57,"line_end":57,"column_start":1,"column_end":8}},{"value":"/ use bytes::Buf;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":6564,"byte_end":6583,"line_start":58,"line_end":58,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":6584,"byte_end":6587,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ let mut buf = &b\"hello world\"[..];","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":6588,"byte_end":6626,"line_start":60,"line_end":60,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":6627,"byte_end":6630,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(b'h', buf.get_u8());","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":6631,"byte_end":6666,"line_start":62,"line_end":62,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(b'e', buf.get_u8());","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":6667,"byte_end":6702,"line_start":63,"line_end":63,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(b'l', buf.get_u8());","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":6703,"byte_end":6738,"line_start":64,"line_end":64,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":6739,"byte_end":6742,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ let mut rest = [0; 8];","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":6743,"byte_end":6769,"line_start":66,"line_end":66,"column_start":1,"column_end":27}},{"value":"/ buf.copy_to_slice(&mut rest);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":6770,"byte_end":6803,"line_start":67,"line_end":67,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":6804,"byte_end":6807,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(&rest[..], &b\"lo world\"[..]);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":6808,"byte_end":6852,"line_start":69,"line_end":69,"column_start":1,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":6853,"byte_end":6860,"line_start":70,"line_end":70,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":17},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":7621,"byte_end":7630,"line_start":97,"line_end":97,"column_start":8,"column_end":17},"name":"remaining","qualname":"::buf::buf_impl::Buf::remaining","value":"pub fn remaining(&Self) -> usize","parent":{"krate":0,"index":16},"children":[],"decl_id":null,"docs":" Returns the number of bytes between the current position and the end of\n the buffer.","sig":null,"attributes":[{"value":"/ Returns the number of bytes between the current position and the end of","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":6881,"byte_end":6956,"line_start":72,"line_end":72,"column_start":5,"column_end":80}},{"value":"/ the buffer.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":6961,"byte_end":6976,"line_start":73,"line_end":73,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":6981,"byte_end":6984,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ This value is greater than or equal to the length of the slice returned","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":6989,"byte_end":7064,"line_start":75,"line_end":75,"column_start":5,"column_end":80}},{"value":"/ by `bytes`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":7069,"byte_end":7084,"line_start":76,"line_end":76,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":7089,"byte_end":7092,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":7097,"byte_end":7111,"line_start":78,"line_end":78,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":7116,"byte_end":7119,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":7124,"byte_end":7131,"line_start":80,"line_end":80,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":7136,"byte_end":7155,"line_start":81,"line_end":81,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":7160,"byte_end":7163,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"hello world\"[..];","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":7168,"byte_end":7206,"line_start":83,"line_end":83,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":7211,"byte_end":7214,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buf.remaining(), 11);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":7219,"byte_end":7255,"line_start":85,"line_end":85,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":7260,"byte_end":7263,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ buf.get_u8();","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":7268,"byte_end":7285,"line_start":87,"line_end":87,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":7290,"byte_end":7293,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buf.remaining(), 10);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":7298,"byte_end":7334,"line_start":89,"line_end":89,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":7339,"byte_end":7346,"line_start":90,"line_end":90,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":7351,"byte_end":7354,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ # Implementer notes","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":7359,"byte_end":7382,"line_start":92,"line_end":92,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":7387,"byte_end":7390,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ Implementations of `remaining` should ensure that the return value does","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":7395,"byte_end":7470,"line_start":94,"line_end":94,"column_start":5,"column_end":80}},{"value":"/ not change unless a call is made to `advance` or any other function that","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":7475,"byte_end":7551,"line_start":95,"line_end":95,"column_start":5,"column_end":81}},{"value":"/ is documented to change the `Buf`'s current position.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":7556,"byte_end":7613,"line_start":96,"line_end":96,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":18},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":8482,"byte_end":8487,"line_start":125,"line_end":125,"column_start":8,"column_end":13},"name":"bytes","qualname":"::buf::buf_impl::Buf::bytes","value":"pub fn bytes(&Self) -> &[u8]","parent":{"krate":0,"index":16},"children":[],"decl_id":null,"docs":" Returns a slice starting at the current position and of length between 0\n and `Buf::remaining()`. Note that this *can* return shorter slice (this allows\n non-continuous internal representation).","sig":null,"attributes":[{"value":"/ Returns a slice starting at the current position and of length between 0","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":7653,"byte_end":7729,"line_start":99,"line_end":99,"column_start":5,"column_end":81}},{"value":"/ and `Buf::remaining()`. Note that this *can* return shorter slice (this allows","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":7734,"byte_end":7816,"line_start":100,"line_end":100,"column_start":5,"column_end":87}},{"value":"/ non-continuous internal representation).","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":7821,"byte_end":7865,"line_start":101,"line_end":101,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":7870,"byte_end":7873,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ This is a lower level function. Most operations are done with other","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":7878,"byte_end":7949,"line_start":103,"line_end":103,"column_start":5,"column_end":76}},{"value":"/ functions.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":7954,"byte_end":7968,"line_start":104,"line_end":104,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":7973,"byte_end":7976,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":7981,"byte_end":7995,"line_start":106,"line_end":106,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":8000,"byte_end":8003,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":8008,"byte_end":8015,"line_start":108,"line_end":108,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":8020,"byte_end":8039,"line_start":109,"line_end":109,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":8044,"byte_end":8047,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"hello world\"[..];","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":8052,"byte_end":8090,"line_start":111,"line_end":111,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":8095,"byte_end":8098,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buf.bytes(), &b\"hello world\"[..]);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":8103,"byte_end":8152,"line_start":113,"line_end":113,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":8157,"byte_end":8160,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ buf.advance(6);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":8165,"byte_end":8184,"line_start":115,"line_end":115,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":8189,"byte_end":8192,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buf.bytes(), &b\"world\"[..]);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":8197,"byte_end":8240,"line_start":117,"line_end":117,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":8245,"byte_end":8252,"line_start":118,"line_end":118,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":8257,"byte_end":8260,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ # Implementer notes","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":8265,"byte_end":8288,"line_start":120,"line_end":120,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":8293,"byte_end":8296,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ This function should never panic. Once the end of the buffer is reached,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":8301,"byte_end":8377,"line_start":122,"line_end":122,"column_start":5,"column_end":81}},{"value":"/ i.e., `Buf::remaining` returns 0, calls to `bytes` should return an","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":8382,"byte_end":8453,"line_start":123,"line_end":123,"column_start":5,"column_end":76}},{"value":"/ empty slice.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":8458,"byte_end":8474,"line_start":124,"line_end":124,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":19},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":9858,"byte_end":9872,"line_start":155,"line_end":155,"column_start":8,"column_end":22},"name":"bytes_vectored","qualname":"::buf::buf_impl::Buf::bytes_vectored","value":"pub fn bytes_vectored<'a>(&'a Self, &mut [IoSlice]) -> usize","parent":{"krate":0,"index":16},"children":[],"decl_id":null,"docs":" Fills `dst` with potentially multiple slices starting at `self`'s\n current position.","sig":null,"attributes":[{"value":"/ Fills `dst` with potentially multiple slices starting at `self`'s","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":8510,"byte_end":8579,"line_start":127,"line_end":127,"column_start":5,"column_end":74}},{"value":"/ current position.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":8584,"byte_end":8605,"line_start":128,"line_end":128,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":8610,"byte_end":8613,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ If the `Buf` is backed by disjoint slices of bytes, `bytes_vectored` enables","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":8618,"byte_end":8698,"line_start":130,"line_end":130,"column_start":5,"column_end":85}},{"value":"/ fetching more than one slice at once. `dst` is a slice of `IoSlice`","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":8703,"byte_end":8774,"line_start":131,"line_end":131,"column_start":5,"column_end":76}},{"value":"/ references, enabling the slice to be directly used with [`writev`]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":8779,"byte_end":8849,"line_start":132,"line_end":132,"column_start":5,"column_end":75}},{"value":"/ without any further conversion. The sum of the lengths of all the","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":8854,"byte_end":8923,"line_start":133,"line_end":133,"column_start":5,"column_end":74}},{"value":"/ buffers in `dst` will be less than or equal to `Buf::remaining()`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":8928,"byte_end":8998,"line_start":134,"line_end":134,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":9003,"byte_end":9006,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ The entries in `dst` will be overwritten, but the data **contained** by","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":9011,"byte_end":9086,"line_start":136,"line_end":136,"column_start":5,"column_end":80}},{"value":"/ the slices **will not** be modified. If `bytes_vectored` does not fill every","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":9091,"byte_end":9171,"line_start":137,"line_end":137,"column_start":5,"column_end":85}},{"value":"/ entry in `dst`, then `dst` is guaranteed to contain all remaining slices","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":9176,"byte_end":9252,"line_start":138,"line_end":138,"column_start":5,"column_end":81}},{"value":"/ in `self.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":9257,"byte_end":9270,"line_start":139,"line_end":139,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":9275,"byte_end":9278,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ This is a lower level function. Most operations are done with other","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":9283,"byte_end":9354,"line_start":141,"line_end":141,"column_start":5,"column_end":76}},{"value":"/ functions.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":9359,"byte_end":9373,"line_start":142,"line_end":142,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":9378,"byte_end":9381,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ # Implementer notes","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":9386,"byte_end":9409,"line_start":144,"line_end":144,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":9414,"byte_end":9417,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ This function should never panic. Once the end of the buffer is reached,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":9422,"byte_end":9498,"line_start":146,"line_end":146,"column_start":5,"column_end":81}},{"value":"/ i.e., `Buf::remaining` returns 0, calls to `bytes_vectored` must return 0","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":9503,"byte_end":9580,"line_start":147,"line_end":147,"column_start":5,"column_end":82}},{"value":"/ without mutating `dst`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":9585,"byte_end":9612,"line_start":148,"line_end":148,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":9617,"byte_end":9620,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ Implementations should also take care to properly handle being called","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":9625,"byte_end":9698,"line_start":150,"line_end":150,"column_start":5,"column_end":78}},{"value":"/ with `dst` being a zero length slice.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":9703,"byte_end":9744,"line_start":151,"line_end":151,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":9749,"byte_end":9752,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ [`writev`]: http://man7.org/linux/man-pages/man2/readv.2.html","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":9757,"byte_end":9822,"line_start":153,"line_end":153,"column_start":5,"column_end":70}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":9827,"byte_end":9850,"line_start":154,"line_end":154,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":21},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":11014,"byte_end":11021,"line_start":198,"line_end":198,"column_start":8,"column_end":15},"name":"advance","qualname":"::buf::buf_impl::Buf::advance","value":"pub fn advance(&mut Self, usize)","parent":{"krate":0,"index":16},"children":[],"decl_id":null,"docs":" Advance the internal cursor of the Buf","sig":null,"attributes":[{"value":"/ Advance the internal cursor of the Buf","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":10133,"byte_end":10175,"line_start":168,"line_end":168,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":10180,"byte_end":10183,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ The next call to `bytes` will return a slice starting `cnt` bytes","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":10188,"byte_end":10257,"line_start":170,"line_end":170,"column_start":5,"column_end":74}},{"value":"/ further into the underlying buffer.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":10262,"byte_end":10301,"line_start":171,"line_end":171,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":10306,"byte_end":10309,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":10314,"byte_end":10328,"line_start":173,"line_end":173,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":10333,"byte_end":10336,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":10341,"byte_end":10348,"line_start":175,"line_end":175,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":10353,"byte_end":10372,"line_start":176,"line_end":176,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":10377,"byte_end":10380,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"hello world\"[..];","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":10385,"byte_end":10423,"line_start":178,"line_end":178,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":10428,"byte_end":10431,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buf.bytes(), &b\"hello world\"[..]);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":10436,"byte_end":10485,"line_start":180,"line_end":180,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":10490,"byte_end":10493,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ buf.advance(6);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":10498,"byte_end":10517,"line_start":182,"line_end":182,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":10522,"byte_end":10525,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buf.bytes(), &b\"world\"[..]);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":10530,"byte_end":10573,"line_start":184,"line_end":184,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":10578,"byte_end":10585,"line_start":185,"line_end":185,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":10590,"byte_end":10593,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":10598,"byte_end":10610,"line_start":187,"line_end":187,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":10615,"byte_end":10618,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ This function **may** panic if `cnt > self.remaining()`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":10623,"byte_end":10683,"line_start":189,"line_end":189,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":10688,"byte_end":10691,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ # Implementer notes","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":10696,"byte_end":10719,"line_start":191,"line_end":191,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":10724,"byte_end":10727,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ It is recommended for implementations of `advance` to panic if `cnt >","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":10732,"byte_end":10805,"line_start":193,"line_end":193,"column_start":5,"column_end":78}},{"value":"/ self.remaining()`. If the implementation does not panic, the call must","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":10810,"byte_end":10884,"line_start":194,"line_end":194,"column_start":5,"column_end":79}},{"value":"/ behave as if `cnt == self.remaining()`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":10889,"byte_end":10932,"line_start":195,"line_end":195,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":10937,"byte_end":10940,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ A call with `cnt == 0` should never panic and be a no-op.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":10945,"byte_end":11006,"line_start":197,"line_end":197,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":22},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":11424,"byte_end":11437,"line_start":217,"line_end":217,"column_start":8,"column_end":21},"name":"has_remaining","qualname":"::buf::buf_impl::Buf::has_remaining","value":"pub fn has_remaining(&Self) -> bool","parent":{"krate":0,"index":16},"children":[],"decl_id":null,"docs":" Returns true if there are any more bytes to consume","sig":null,"attributes":[{"value":"/ Returns true if there are any more bytes to consume","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":11051,"byte_end":11106,"line_start":200,"line_end":200,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":11111,"byte_end":11114,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to `self.remaining() != 0`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":11119,"byte_end":11169,"line_start":202,"line_end":202,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":11174,"byte_end":11177,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":11182,"byte_end":11196,"line_start":204,"line_end":204,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":11201,"byte_end":11204,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":11209,"byte_end":11216,"line_start":206,"line_end":206,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":11221,"byte_end":11240,"line_start":207,"line_end":207,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":11245,"byte_end":11248,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"a\"[..];","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":11253,"byte_end":11281,"line_start":209,"line_end":209,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":11286,"byte_end":11289,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ assert!(buf.has_remaining());","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":11294,"byte_end":11327,"line_start":211,"line_end":211,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":11332,"byte_end":11335,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ buf.get_u8();","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":11340,"byte_end":11357,"line_start":213,"line_end":213,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":11362,"byte_end":11365,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ assert!(!buf.has_remaining());","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":11370,"byte_end":11404,"line_start":215,"line_end":215,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":11409,"byte_end":11416,"line_start":216,"line_end":216,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":23},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":12062,"byte_end":12075,"line_start":242,"line_end":242,"column_start":8,"column_end":21},"name":"copy_to_slice","qualname":"::buf::buf_impl::Buf::copy_to_slice","value":"pub fn copy_to_slice(&mut Self, &mut [u8])","parent":{"krate":0,"index":16},"children":[],"decl_id":null,"docs":" Copies bytes from `self` into `dst`.","sig":null,"attributes":[{"value":"/ Copies bytes from `self` into `dst`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":11495,"byte_end":11535,"line_start":221,"line_end":221,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":11540,"byte_end":11543,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ The cursor is advanced by the number of bytes copied. `self` must have","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":11548,"byte_end":11622,"line_start":223,"line_end":223,"column_start":5,"column_end":79}},{"value":"/ enough remaining bytes to fill `dst`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":11627,"byte_end":11668,"line_start":224,"line_end":224,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":11673,"byte_end":11676,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":11681,"byte_end":11695,"line_start":226,"line_end":226,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":11700,"byte_end":11703,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":11708,"byte_end":11715,"line_start":228,"line_end":228,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":11720,"byte_end":11739,"line_start":229,"line_end":229,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":11744,"byte_end":11747,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"hello world\"[..];","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":11752,"byte_end":11790,"line_start":231,"line_end":231,"column_start":5,"column_end":43}},{"value":"/ let mut dst = [0; 5];","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":11795,"byte_end":11820,"line_start":232,"line_end":232,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":11825,"byte_end":11828,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ buf.copy_to_slice(&mut dst);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":11833,"byte_end":11865,"line_start":234,"line_end":234,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(&b\"hello\"[..], &dst);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":11870,"byte_end":11906,"line_start":235,"line_end":235,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(6, buf.remaining());","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":11911,"byte_end":11946,"line_start":236,"line_end":236,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":11951,"byte_end":11958,"line_start":237,"line_end":237,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":11963,"byte_end":11966,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":11971,"byte_end":11983,"line_start":239,"line_end":239,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":11988,"byte_end":11991,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ This function panics if `self.remaining() < dst.len()`","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":11996,"byte_end":12054,"line_start":241,"line_end":241,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":24},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":12947,"byte_end":12953,"line_start":280,"line_end":280,"column_start":8,"column_end":14},"name":"get_u8","qualname":"::buf::buf_impl::Buf::get_u8","value":"pub fn get_u8(&mut Self) -> u8","parent":{"krate":0,"index":16},"children":[],"decl_id":null,"docs":" Gets an unsigned 8 bit integer from `self`.","sig":null,"attributes":[{"value":"/ Gets an unsigned 8 bit integer from `self`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":12559,"byte_end":12606,"line_start":264,"line_end":264,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":12611,"byte_end":12614,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 1.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":12619,"byte_end":12661,"line_start":266,"line_end":266,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":12666,"byte_end":12669,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":12674,"byte_end":12688,"line_start":268,"line_end":268,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":12693,"byte_end":12696,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":12701,"byte_end":12708,"line_start":270,"line_end":270,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":12713,"byte_end":12732,"line_start":271,"line_end":271,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":12737,"byte_end":12740,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x08 hello\"[..];","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":12745,"byte_end":12782,"line_start":273,"line_end":273,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(8, buf.get_u8());","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":12787,"byte_end":12819,"line_start":274,"line_end":274,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":12824,"byte_end":12831,"line_start":275,"line_end":275,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":12836,"byte_end":12839,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":12844,"byte_end":12856,"line_start":277,"line_end":277,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":12861,"byte_end":12864,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is no more remaining data in `self`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":12869,"byte_end":12939,"line_start":279,"line_end":279,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":25},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":13481,"byte_end":13487,"line_start":303,"line_end":303,"column_start":8,"column_end":14},"name":"get_i8","qualname":"::buf::buf_impl::Buf::get_i8","value":"pub fn get_i8(&mut Self) -> i8","parent":{"krate":0,"index":16},"children":[],"decl_id":null,"docs":" Gets a signed 8 bit integer from `self`.","sig":null,"attributes":[{"value":"/ Gets a signed 8 bit integer from `self`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":13096,"byte_end":13140,"line_start":287,"line_end":287,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":13145,"byte_end":13148,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 1.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":13153,"byte_end":13195,"line_start":289,"line_end":289,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":13200,"byte_end":13203,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":13208,"byte_end":13222,"line_start":291,"line_end":291,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":13227,"byte_end":13230,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":13235,"byte_end":13242,"line_start":293,"line_end":293,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":13247,"byte_end":13266,"line_start":294,"line_end":294,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":13271,"byte_end":13274,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x08 hello\"[..];","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":13279,"byte_end":13316,"line_start":296,"line_end":296,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(8, buf.get_i8());","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":13321,"byte_end":13353,"line_start":297,"line_end":297,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":13358,"byte_end":13365,"line_start":298,"line_end":298,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":13370,"byte_end":13373,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":13378,"byte_end":13390,"line_start":300,"line_end":300,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":13395,"byte_end":13398,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is no more remaining data in `self`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":13403,"byte_end":13473,"line_start":302,"line_end":302,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":26},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":14063,"byte_end":14070,"line_start":326,"line_end":326,"column_start":8,"column_end":15},"name":"get_u16","qualname":"::buf::buf_impl::Buf::get_u16","value":"pub fn get_u16(&mut Self) -> u16","parent":{"krate":0,"index":16},"children":[],"decl_id":null,"docs":" Gets an unsigned 16 bit integer from `self` in big-endian byte order.","sig":null,"attributes":[{"value":"/ Gets an unsigned 16 bit integer from `self` in big-endian byte order.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":13636,"byte_end":13709,"line_start":310,"line_end":310,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":13714,"byte_end":13717,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 2.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":13722,"byte_end":13764,"line_start":312,"line_end":312,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":13769,"byte_end":13772,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":13777,"byte_end":13791,"line_start":314,"line_end":314,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":13796,"byte_end":13799,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":13804,"byte_end":13811,"line_start":316,"line_end":316,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":13816,"byte_end":13835,"line_start":317,"line_end":317,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":13840,"byte_end":13843,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x08\\x09 hello\"[..];","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":13848,"byte_end":13889,"line_start":319,"line_end":319,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(0x0809, buf.get_u16());","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":13894,"byte_end":13932,"line_start":320,"line_end":320,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":13937,"byte_end":13944,"line_start":321,"line_end":321,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":13949,"byte_end":13952,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":13957,"byte_end":13969,"line_start":323,"line_end":323,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":13974,"byte_end":13977,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":13982,"byte_end":14055,"line_start":325,"line_end":325,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":27},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":14584,"byte_end":14594,"line_start":346,"line_end":346,"column_start":8,"column_end":18},"name":"get_u16_le","qualname":"::buf::buf_impl::Buf::get_u16_le","value":"pub fn get_u16_le(&mut Self) -> u16","parent":{"krate":0,"index":16},"children":[],"decl_id":null,"docs":" Gets an unsigned 16 bit integer from `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Gets an unsigned 16 bit integer from `self` in little-endian byte order.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":14151,"byte_end":14227,"line_start":330,"line_end":330,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":14232,"byte_end":14235,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 2.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":14240,"byte_end":14282,"line_start":332,"line_end":332,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":14287,"byte_end":14290,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":14295,"byte_end":14309,"line_start":334,"line_end":334,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":14314,"byte_end":14317,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":14322,"byte_end":14329,"line_start":336,"line_end":336,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":14334,"byte_end":14353,"line_start":337,"line_end":337,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":14358,"byte_end":14361,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x09\\x08 hello\"[..];","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":14366,"byte_end":14407,"line_start":339,"line_end":339,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(0x0809, buf.get_u16_le());","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":14412,"byte_end":14453,"line_start":340,"line_end":340,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":14458,"byte_end":14465,"line_start":341,"line_end":341,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":14470,"byte_end":14473,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":14478,"byte_end":14490,"line_start":343,"line_end":343,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":14495,"byte_end":14498,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":14503,"byte_end":14576,"line_start":345,"line_end":345,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":28},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":15099,"byte_end":15106,"line_start":366,"line_end":366,"column_start":8,"column_end":15},"name":"get_i16","qualname":"::buf::buf_impl::Buf::get_i16","value":"pub fn get_i16(&mut Self) -> i16","parent":{"krate":0,"index":16},"children":[],"decl_id":null,"docs":" Gets a signed 16 bit integer from `self` in big-endian byte order.","sig":null,"attributes":[{"value":"/ Gets a signed 16 bit integer from `self` in big-endian byte order.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":14675,"byte_end":14745,"line_start":350,"line_end":350,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":14750,"byte_end":14753,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 2.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":14758,"byte_end":14800,"line_start":352,"line_end":352,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":14805,"byte_end":14808,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":14813,"byte_end":14827,"line_start":354,"line_end":354,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":14832,"byte_end":14835,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":14840,"byte_end":14847,"line_start":356,"line_end":356,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":14852,"byte_end":14871,"line_start":357,"line_end":357,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":14876,"byte_end":14879,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x08\\x09 hello\"[..];","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":14884,"byte_end":14925,"line_start":359,"line_end":359,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(0x0809, buf.get_i16());","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":14930,"byte_end":14968,"line_start":360,"line_end":360,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":14973,"byte_end":14980,"line_start":361,"line_end":361,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":14985,"byte_end":14988,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":14993,"byte_end":15005,"line_start":363,"line_end":363,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":15010,"byte_end":15013,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":15018,"byte_end":15091,"line_start":365,"line_end":365,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":29},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":15617,"byte_end":15627,"line_start":386,"line_end":386,"column_start":8,"column_end":18},"name":"get_i16_le","qualname":"::buf::buf_impl::Buf::get_i16_le","value":"pub fn get_i16_le(&mut Self) -> i16","parent":{"krate":0,"index":16},"children":[],"decl_id":null,"docs":" Gets a signed 16 bit integer from `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Gets a signed 16 bit integer from `self` in little-endian byte order.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":15187,"byte_end":15260,"line_start":370,"line_end":370,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":15265,"byte_end":15268,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 2.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":15273,"byte_end":15315,"line_start":372,"line_end":372,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":15320,"byte_end":15323,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":15328,"byte_end":15342,"line_start":374,"line_end":374,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":15347,"byte_end":15350,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":15355,"byte_end":15362,"line_start":376,"line_end":376,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":15367,"byte_end":15386,"line_start":377,"line_end":377,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":15391,"byte_end":15394,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x09\\x08 hello\"[..];","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":15399,"byte_end":15440,"line_start":379,"line_end":379,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(0x0809, buf.get_i16_le());","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":15445,"byte_end":15486,"line_start":380,"line_end":380,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":15491,"byte_end":15498,"line_start":381,"line_end":381,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":15503,"byte_end":15506,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":15511,"byte_end":15523,"line_start":383,"line_end":383,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":15528,"byte_end":15531,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":15536,"byte_end":15609,"line_start":385,"line_end":385,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":30},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":16151,"byte_end":16158,"line_start":406,"line_end":406,"column_start":8,"column_end":15},"name":"get_u32","qualname":"::buf::buf_impl::Buf::get_u32","value":"pub fn get_u32(&mut Self) -> u32","parent":{"krate":0,"index":16},"children":[],"decl_id":null,"docs":" Gets an unsigned 32 bit integer from `self` in the big-endian byte order.","sig":null,"attributes":[{"value":"/ Gets an unsigned 32 bit integer from `self` in the big-endian byte order.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":15708,"byte_end":15785,"line_start":390,"line_end":390,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":15790,"byte_end":15793,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 4.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":15798,"byte_end":15840,"line_start":392,"line_end":392,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":15845,"byte_end":15848,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":15853,"byte_end":15867,"line_start":394,"line_end":394,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":15872,"byte_end":15875,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":15880,"byte_end":15887,"line_start":396,"line_end":396,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":15892,"byte_end":15911,"line_start":397,"line_end":397,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":15916,"byte_end":15919,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x08\\x09\\xA0\\xA1 hello\"[..];","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":15924,"byte_end":15973,"line_start":399,"line_end":399,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(0x0809A0A1, buf.get_u32());","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":15978,"byte_end":16020,"line_start":400,"line_end":400,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":16025,"byte_end":16032,"line_start":401,"line_end":401,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":16037,"byte_end":16040,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":16045,"byte_end":16057,"line_start":403,"line_end":403,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":16062,"byte_end":16065,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":16070,"byte_end":16143,"line_start":405,"line_end":405,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":31},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":16688,"byte_end":16698,"line_start":426,"line_end":426,"column_start":8,"column_end":18},"name":"get_u32_le","qualname":"::buf::buf_impl::Buf::get_u32_le","value":"pub fn get_u32_le(&mut Self) -> u32","parent":{"krate":0,"index":16},"children":[],"decl_id":null,"docs":" Gets an unsigned 32 bit integer from `self` in the little-endian byte order.","sig":null,"attributes":[{"value":"/ Gets an unsigned 32 bit integer from `self` in the little-endian byte order.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":16239,"byte_end":16319,"line_start":410,"line_end":410,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":16324,"byte_end":16327,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 4.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":16332,"byte_end":16374,"line_start":412,"line_end":412,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":16379,"byte_end":16382,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":16387,"byte_end":16401,"line_start":414,"line_end":414,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":16406,"byte_end":16409,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":16414,"byte_end":16421,"line_start":416,"line_end":416,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":16426,"byte_end":16445,"line_start":417,"line_end":417,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":16450,"byte_end":16453,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\xA1\\xA0\\x09\\x08 hello\"[..];","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":16458,"byte_end":16507,"line_start":419,"line_end":419,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(0x0809A0A1, buf.get_u32_le());","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":16512,"byte_end":16557,"line_start":420,"line_end":420,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":16562,"byte_end":16569,"line_start":421,"line_end":421,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":16574,"byte_end":16577,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":16582,"byte_end":16594,"line_start":423,"line_end":423,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":16599,"byte_end":16602,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":16607,"byte_end":16680,"line_start":425,"line_end":425,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":17215,"byte_end":17222,"line_start":446,"line_end":446,"column_start":8,"column_end":15},"name":"get_i32","qualname":"::buf::buf_impl::Buf::get_i32","value":"pub fn get_i32(&mut Self) -> i32","parent":{"krate":0,"index":16},"children":[],"decl_id":null,"docs":" Gets a signed 32 bit integer from `self` in big-endian byte order.","sig":null,"attributes":[{"value":"/ Gets a signed 32 bit integer from `self` in big-endian byte order.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":16779,"byte_end":16849,"line_start":430,"line_end":430,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":16854,"byte_end":16857,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 4.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":16862,"byte_end":16904,"line_start":432,"line_end":432,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":16909,"byte_end":16912,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":16917,"byte_end":16931,"line_start":434,"line_end":434,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":16936,"byte_end":16939,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":16944,"byte_end":16951,"line_start":436,"line_end":436,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":16956,"byte_end":16975,"line_start":437,"line_end":437,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":16980,"byte_end":16983,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x08\\x09\\xA0\\xA1 hello\"[..];","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":16988,"byte_end":17037,"line_start":439,"line_end":439,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(0x0809A0A1, buf.get_i32());","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":17042,"byte_end":17084,"line_start":440,"line_end":440,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":17089,"byte_end":17096,"line_start":441,"line_end":441,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":17101,"byte_end":17104,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":17109,"byte_end":17121,"line_start":443,"line_end":443,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":17126,"byte_end":17129,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":17134,"byte_end":17207,"line_start":445,"line_end":445,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":33},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":17745,"byte_end":17755,"line_start":466,"line_end":466,"column_start":8,"column_end":18},"name":"get_i32_le","qualname":"::buf::buf_impl::Buf::get_i32_le","value":"pub fn get_i32_le(&mut Self) -> i32","parent":{"krate":0,"index":16},"children":[],"decl_id":null,"docs":" Gets a signed 32 bit integer from `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Gets a signed 32 bit integer from `self` in little-endian byte order.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":17303,"byte_end":17376,"line_start":450,"line_end":450,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":17381,"byte_end":17384,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 4.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":17389,"byte_end":17431,"line_start":452,"line_end":452,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":17436,"byte_end":17439,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":17444,"byte_end":17458,"line_start":454,"line_end":454,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":17463,"byte_end":17466,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":17471,"byte_end":17478,"line_start":456,"line_end":456,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":17483,"byte_end":17502,"line_start":457,"line_end":457,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":17507,"byte_end":17510,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\xA1\\xA0\\x09\\x08 hello\"[..];","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":17515,"byte_end":17564,"line_start":459,"line_end":459,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(0x0809A0A1, buf.get_i32_le());","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":17569,"byte_end":17614,"line_start":460,"line_end":460,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":17619,"byte_end":17626,"line_start":461,"line_end":461,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":17631,"byte_end":17634,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":17639,"byte_end":17651,"line_start":463,"line_end":463,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":17656,"byte_end":17659,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":17664,"byte_end":17737,"line_start":465,"line_end":465,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":34},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":18299,"byte_end":18306,"line_start":486,"line_end":486,"column_start":8,"column_end":15},"name":"get_u64","qualname":"::buf::buf_impl::Buf::get_u64","value":"pub fn get_u64(&mut Self) -> u64","parent":{"krate":0,"index":16},"children":[],"decl_id":null,"docs":" Gets an unsigned 64 bit integer from `self` in big-endian byte order.","sig":null,"attributes":[{"value":"/ Gets an unsigned 64 bit integer from `self` in big-endian byte order.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":17836,"byte_end":17909,"line_start":470,"line_end":470,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":17914,"byte_end":17917,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 8.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":17922,"byte_end":17964,"line_start":472,"line_end":472,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":17969,"byte_end":17972,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":17977,"byte_end":17991,"line_start":474,"line_end":474,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":17996,"byte_end":17999,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":18004,"byte_end":18011,"line_start":476,"line_end":476,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":18016,"byte_end":18035,"line_start":477,"line_end":477,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":18040,"byte_end":18043,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08 hello\"[..];","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":18048,"byte_end":18113,"line_start":479,"line_end":479,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(0x0102030405060708, buf.get_u64());","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":18118,"byte_end":18168,"line_start":480,"line_end":480,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":18173,"byte_end":18180,"line_start":481,"line_end":481,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":18185,"byte_end":18188,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":18193,"byte_end":18205,"line_start":483,"line_end":483,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":18210,"byte_end":18213,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":18218,"byte_end":18291,"line_start":485,"line_end":485,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":35},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":18856,"byte_end":18866,"line_start":506,"line_end":506,"column_start":8,"column_end":18},"name":"get_u64_le","qualname":"::buf::buf_impl::Buf::get_u64_le","value":"pub fn get_u64_le(&mut Self) -> u64","parent":{"krate":0,"index":16},"children":[],"decl_id":null,"docs":" Gets an unsigned 64 bit integer from `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Gets an unsigned 64 bit integer from `self` in little-endian byte order.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":18387,"byte_end":18463,"line_start":490,"line_end":490,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":18468,"byte_end":18471,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 8.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":18476,"byte_end":18518,"line_start":492,"line_end":492,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":18523,"byte_end":18526,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":18531,"byte_end":18545,"line_start":494,"line_end":494,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":18550,"byte_end":18553,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":18558,"byte_end":18565,"line_start":496,"line_end":496,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":18570,"byte_end":18589,"line_start":497,"line_end":497,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":18594,"byte_end":18597,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01 hello\"[..];","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":18602,"byte_end":18667,"line_start":499,"line_end":499,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(0x0102030405060708, buf.get_u64_le());","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":18672,"byte_end":18725,"line_start":500,"line_end":500,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":18730,"byte_end":18737,"line_start":501,"line_end":501,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":18742,"byte_end":18745,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":18750,"byte_end":18762,"line_start":503,"line_end":503,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":18767,"byte_end":18770,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":18775,"byte_end":18848,"line_start":505,"line_end":505,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":36},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":19407,"byte_end":19414,"line_start":526,"line_end":526,"column_start":8,"column_end":15},"name":"get_i64","qualname":"::buf::buf_impl::Buf::get_i64","value":"pub fn get_i64(&mut Self) -> i64","parent":{"krate":0,"index":16},"children":[],"decl_id":null,"docs":" Gets a signed 64 bit integer from `self` in big-endian byte order.","sig":null,"attributes":[{"value":"/ Gets a signed 64 bit integer from `self` in big-endian byte order.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":18947,"byte_end":19017,"line_start":510,"line_end":510,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":19022,"byte_end":19025,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 8.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":19030,"byte_end":19072,"line_start":512,"line_end":512,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":19077,"byte_end":19080,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":19085,"byte_end":19099,"line_start":514,"line_end":514,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":19104,"byte_end":19107,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":19112,"byte_end":19119,"line_start":516,"line_end":516,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":19124,"byte_end":19143,"line_start":517,"line_end":517,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":19148,"byte_end":19151,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08 hello\"[..];","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":19156,"byte_end":19221,"line_start":519,"line_end":519,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(0x0102030405060708, buf.get_i64());","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":19226,"byte_end":19276,"line_start":520,"line_end":520,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":19281,"byte_end":19288,"line_start":521,"line_end":521,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":19293,"byte_end":19296,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":19301,"byte_end":19313,"line_start":523,"line_end":523,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":19318,"byte_end":19321,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":19326,"byte_end":19399,"line_start":525,"line_end":525,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":37},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":19961,"byte_end":19971,"line_start":546,"line_end":546,"column_start":8,"column_end":18},"name":"get_i64_le","qualname":"::buf::buf_impl::Buf::get_i64_le","value":"pub fn get_i64_le(&mut Self) -> i64","parent":{"krate":0,"index":16},"children":[],"decl_id":null,"docs":" Gets a signed 64 bit integer from `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Gets a signed 64 bit integer from `self` in little-endian byte order.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":19495,"byte_end":19568,"line_start":530,"line_end":530,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":19573,"byte_end":19576,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 8.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":19581,"byte_end":19623,"line_start":532,"line_end":532,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":19628,"byte_end":19631,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":19636,"byte_end":19650,"line_start":534,"line_end":534,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":19655,"byte_end":19658,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":19663,"byte_end":19670,"line_start":536,"line_end":536,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":19675,"byte_end":19694,"line_start":537,"line_end":537,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":19699,"byte_end":19702,"line_start":538,"line_end":538,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01 hello\"[..];","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":19707,"byte_end":19772,"line_start":539,"line_end":539,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(0x0102030405060708, buf.get_i64_le());","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":19777,"byte_end":19830,"line_start":540,"line_end":540,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":19835,"byte_end":19842,"line_start":541,"line_end":541,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":19847,"byte_end":19850,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":19855,"byte_end":19867,"line_start":543,"line_end":543,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":19872,"byte_end":19875,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":19880,"byte_end":19953,"line_start":545,"line_end":545,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":20566,"byte_end":20574,"line_start":566,"line_end":566,"column_start":8,"column_end":16},"name":"get_u128","qualname":"::buf::buf_impl::Buf::get_u128","value":"pub fn get_u128(&mut Self) -> u128","parent":{"krate":0,"index":16},"children":[],"decl_id":null,"docs":" Gets an unsigned 128 bit integer from `self` in big-endian byte order.","sig":null,"attributes":[{"value":"/ Gets an unsigned 128 bit integer from `self` in big-endian byte order.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":20052,"byte_end":20126,"line_start":550,"line_end":550,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":20131,"byte_end":20134,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 16.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":20139,"byte_end":20182,"line_start":552,"line_end":552,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":20187,"byte_end":20190,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":20195,"byte_end":20209,"line_start":554,"line_end":554,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":20214,"byte_end":20217,"line_start":555,"line_end":555,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":20222,"byte_end":20229,"line_start":556,"line_end":556,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":20234,"byte_end":20253,"line_start":557,"line_end":557,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":20258,"byte_end":20261,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x09\\x10\\x11\\x12\\x13\\x14\\x15\\x16 hello\"[..];","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":20266,"byte_end":20363,"line_start":559,"line_end":559,"column_start":5,"column_end":102}},{"value":"/ assert_eq!(0x01020304050607080910111213141516, buf.get_u128());","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":20368,"byte_end":20435,"line_start":560,"line_end":560,"column_start":5,"column_end":72}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":20440,"byte_end":20447,"line_start":561,"line_end":561,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":20452,"byte_end":20455,"line_start":562,"line_end":562,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":20460,"byte_end":20472,"line_start":563,"line_end":563,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":20477,"byte_end":20480,"line_start":564,"line_end":564,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":20485,"byte_end":20558,"line_start":565,"line_end":565,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":39},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":21177,"byte_end":21188,"line_start":586,"line_end":586,"column_start":8,"column_end":19},"name":"get_u128_le","qualname":"::buf::buf_impl::Buf::get_u128_le","value":"pub fn get_u128_le(&mut Self) -> u128","parent":{"krate":0,"index":16},"children":[],"decl_id":null,"docs":" Gets an unsigned 128 bit integer from `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Gets an unsigned 128 bit integer from `self` in little-endian byte order.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":20657,"byte_end":20734,"line_start":570,"line_end":570,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":20739,"byte_end":20742,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 16.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":20747,"byte_end":20790,"line_start":572,"line_end":572,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":20795,"byte_end":20798,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":20803,"byte_end":20817,"line_start":574,"line_end":574,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":20822,"byte_end":20825,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":20830,"byte_end":20837,"line_start":576,"line_end":576,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":20842,"byte_end":20861,"line_start":577,"line_end":577,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":20866,"byte_end":20869,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x16\\x15\\x14\\x13\\x12\\x11\\x10\\x09\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01 hello\"[..];","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":20874,"byte_end":20971,"line_start":579,"line_end":579,"column_start":5,"column_end":102}},{"value":"/ assert_eq!(0x01020304050607080910111213141516, buf.get_u128_le());","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":20976,"byte_end":21046,"line_start":580,"line_end":580,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":21051,"byte_end":21058,"line_start":581,"line_end":581,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":21063,"byte_end":21066,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":21071,"byte_end":21083,"line_start":583,"line_end":583,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":21088,"byte_end":21091,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":21096,"byte_end":21169,"line_start":585,"line_end":585,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":40},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":21782,"byte_end":21790,"line_start":606,"line_end":606,"column_start":8,"column_end":16},"name":"get_i128","qualname":"::buf::buf_impl::Buf::get_i128","value":"pub fn get_i128(&mut Self) -> i128","parent":{"krate":0,"index":16},"children":[],"decl_id":null,"docs":" Gets a signed 128 bit integer from `self` in big-endian byte order.","sig":null,"attributes":[{"value":"/ Gets a signed 128 bit integer from `self` in big-endian byte order.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":21271,"byte_end":21342,"line_start":590,"line_end":590,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":21347,"byte_end":21350,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 16.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":21355,"byte_end":21398,"line_start":592,"line_end":592,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":21403,"byte_end":21406,"line_start":593,"line_end":593,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":21411,"byte_end":21425,"line_start":594,"line_end":594,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":21430,"byte_end":21433,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":21438,"byte_end":21445,"line_start":596,"line_end":596,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":21450,"byte_end":21469,"line_start":597,"line_end":597,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":21474,"byte_end":21477,"line_start":598,"line_end":598,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x09\\x10\\x11\\x12\\x13\\x14\\x15\\x16 hello\"[..];","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":21482,"byte_end":21579,"line_start":599,"line_end":599,"column_start":5,"column_end":102}},{"value":"/ assert_eq!(0x01020304050607080910111213141516, buf.get_i128());","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":21584,"byte_end":21651,"line_start":600,"line_end":600,"column_start":5,"column_end":72}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":21656,"byte_end":21663,"line_start":601,"line_end":601,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":21668,"byte_end":21671,"line_start":602,"line_end":602,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":21676,"byte_end":21688,"line_start":603,"line_end":603,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":21693,"byte_end":21696,"line_start":604,"line_end":604,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":21701,"byte_end":21774,"line_start":605,"line_end":605,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":41},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":22390,"byte_end":22401,"line_start":626,"line_end":626,"column_start":8,"column_end":19},"name":"get_i128_le","qualname":"::buf::buf_impl::Buf::get_i128_le","value":"pub fn get_i128_le(&mut Self) -> i128","parent":{"krate":0,"index":16},"children":[],"decl_id":null,"docs":" Gets a signed 128 bit integer from `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Gets a signed 128 bit integer from `self` in little-endian byte order.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":21873,"byte_end":21947,"line_start":610,"line_end":610,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":21952,"byte_end":21955,"line_start":611,"line_end":611,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 16.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":21960,"byte_end":22003,"line_start":612,"line_end":612,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":22008,"byte_end":22011,"line_start":613,"line_end":613,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":22016,"byte_end":22030,"line_start":614,"line_end":614,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":22035,"byte_end":22038,"line_start":615,"line_end":615,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":22043,"byte_end":22050,"line_start":616,"line_end":616,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":22055,"byte_end":22074,"line_start":617,"line_end":617,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":22079,"byte_end":22082,"line_start":618,"line_end":618,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x16\\x15\\x14\\x13\\x12\\x11\\x10\\x09\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01 hello\"[..];","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":22087,"byte_end":22184,"line_start":619,"line_end":619,"column_start":5,"column_end":102}},{"value":"/ assert_eq!(0x01020304050607080910111213141516, buf.get_i128_le());","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":22189,"byte_end":22259,"line_start":620,"line_end":620,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":22264,"byte_end":22271,"line_start":621,"line_end":621,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":22276,"byte_end":22279,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":22284,"byte_end":22296,"line_start":623,"line_end":623,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":22301,"byte_end":22304,"line_start":624,"line_end":624,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":22309,"byte_end":22382,"line_start":625,"line_end":625,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":22926,"byte_end":22934,"line_start":646,"line_end":646,"column_start":8,"column_end":16},"name":"get_uint","qualname":"::buf::buf_impl::Buf::get_uint","value":"pub fn get_uint(&mut Self, usize) -> u64","parent":{"krate":0,"index":16},"children":[],"decl_id":null,"docs":" Gets an unsigned n-byte integer from `self` in big-endian byte order.","sig":null,"attributes":[{"value":"/ Gets an unsigned n-byte integer from `self` in big-endian byte order.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":22484,"byte_end":22557,"line_start":630,"line_end":630,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":22562,"byte_end":22565,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by `nbytes`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":22570,"byte_end":22619,"line_start":632,"line_end":632,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":22624,"byte_end":22627,"line_start":633,"line_end":633,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":22632,"byte_end":22646,"line_start":634,"line_end":634,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":22651,"byte_end":22654,"line_start":635,"line_end":635,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":22659,"byte_end":22666,"line_start":636,"line_end":636,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":22671,"byte_end":22690,"line_start":637,"line_end":637,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":22695,"byte_end":22698,"line_start":638,"line_end":638,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x01\\x02\\x03 hello\"[..];","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":22703,"byte_end":22748,"line_start":639,"line_end":639,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(0x010203, buf.get_uint(3));","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":22753,"byte_end":22795,"line_start":640,"line_end":640,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":22800,"byte_end":22807,"line_start":641,"line_end":641,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":22812,"byte_end":22815,"line_start":642,"line_end":642,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":22820,"byte_end":22832,"line_start":643,"line_end":643,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":22837,"byte_end":22840,"line_start":644,"line_end":644,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":22845,"byte_end":22918,"line_start":645,"line_end":645,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":43},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":23477,"byte_end":23488,"line_start":666,"line_end":666,"column_start":8,"column_end":19},"name":"get_uint_le","qualname":"::buf::buf_impl::Buf::get_uint_le","value":"pub fn get_uint_le(&mut Self, usize) -> u64","parent":{"krate":0,"index":16},"children":[],"decl_id":null,"docs":" Gets an unsigned n-byte integer from `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Gets an unsigned n-byte integer from `self` in little-endian byte order.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":23029,"byte_end":23105,"line_start":650,"line_end":650,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":23110,"byte_end":23113,"line_start":651,"line_end":651,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by `nbytes`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":23118,"byte_end":23167,"line_start":652,"line_end":652,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":23172,"byte_end":23175,"line_start":653,"line_end":653,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":23180,"byte_end":23194,"line_start":654,"line_end":654,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":23199,"byte_end":23202,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":23207,"byte_end":23214,"line_start":656,"line_end":656,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":23219,"byte_end":23238,"line_start":657,"line_end":657,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":23243,"byte_end":23246,"line_start":658,"line_end":658,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x03\\x02\\x01 hello\"[..];","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":23251,"byte_end":23296,"line_start":659,"line_end":659,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(0x010203, buf.get_uint_le(3));","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":23301,"byte_end":23346,"line_start":660,"line_end":660,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":23351,"byte_end":23358,"line_start":661,"line_end":661,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":23363,"byte_end":23366,"line_start":662,"line_end":662,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":23371,"byte_end":23383,"line_start":663,"line_end":663,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":23388,"byte_end":23391,"line_start":664,"line_end":664,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":23396,"byte_end":23469,"line_start":665,"line_end":665,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":24021,"byte_end":24028,"line_start":686,"line_end":686,"column_start":8,"column_end":15},"name":"get_int","qualname":"::buf::buf_impl::Buf::get_int","value":"pub fn get_int(&mut Self, usize) -> i64","parent":{"krate":0,"index":16},"children":[],"decl_id":null,"docs":" Gets a signed n-byte integer from `self` in big-endian byte order.","sig":null,"attributes":[{"value":"/ Gets a signed n-byte integer from `self` in big-endian byte order.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":23583,"byte_end":23653,"line_start":670,"line_end":670,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":23658,"byte_end":23661,"line_start":671,"line_end":671,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by `nbytes`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":23666,"byte_end":23715,"line_start":672,"line_end":672,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":23720,"byte_end":23723,"line_start":673,"line_end":673,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":23728,"byte_end":23742,"line_start":674,"line_end":674,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":23747,"byte_end":23750,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":23755,"byte_end":23762,"line_start":676,"line_end":676,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":23767,"byte_end":23786,"line_start":677,"line_end":677,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":23791,"byte_end":23794,"line_start":678,"line_end":678,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x01\\x02\\x03 hello\"[..];","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":23799,"byte_end":23844,"line_start":679,"line_end":679,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(0x010203, buf.get_int(3));","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":23849,"byte_end":23890,"line_start":680,"line_end":680,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":23895,"byte_end":23902,"line_start":681,"line_end":681,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":23907,"byte_end":23910,"line_start":682,"line_end":682,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":23915,"byte_end":23927,"line_start":683,"line_end":683,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":23932,"byte_end":23935,"line_start":684,"line_end":684,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":23940,"byte_end":24013,"line_start":685,"line_end":685,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":45},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":24567,"byte_end":24577,"line_start":706,"line_end":706,"column_start":8,"column_end":18},"name":"get_int_le","qualname":"::buf::buf_impl::Buf::get_int_le","value":"pub fn get_int_le(&mut Self, usize) -> i64","parent":{"krate":0,"index":16},"children":[],"decl_id":null,"docs":" Gets a signed n-byte integer from `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Gets a signed n-byte integer from `self` in little-endian byte order.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":24123,"byte_end":24196,"line_start":690,"line_end":690,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":24201,"byte_end":24204,"line_start":691,"line_end":691,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by `nbytes`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":24209,"byte_end":24258,"line_start":692,"line_end":692,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":24263,"byte_end":24266,"line_start":693,"line_end":693,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":24271,"byte_end":24285,"line_start":694,"line_end":694,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":24290,"byte_end":24293,"line_start":695,"line_end":695,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":24298,"byte_end":24305,"line_start":696,"line_end":696,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":24310,"byte_end":24329,"line_start":697,"line_end":697,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":24334,"byte_end":24337,"line_start":698,"line_end":698,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x03\\x02\\x01 hello\"[..];","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":24342,"byte_end":24387,"line_start":699,"line_end":699,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(0x010203, buf.get_int_le(3));","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":24392,"byte_end":24436,"line_start":700,"line_end":700,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":24441,"byte_end":24448,"line_start":701,"line_end":701,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":24453,"byte_end":24456,"line_start":702,"line_end":702,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":24461,"byte_end":24473,"line_start":703,"line_end":703,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":24478,"byte_end":24481,"line_start":704,"line_end":704,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":24486,"byte_end":24559,"line_start":705,"line_end":705,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":25148,"byte_end":25155,"line_start":727,"line_end":727,"column_start":8,"column_end":15},"name":"get_f32","qualname":"::buf::buf_impl::Buf::get_f32","value":"pub fn get_f32(&mut Self) -> f32","parent":{"krate":0,"index":16},"children":[],"decl_id":null,"docs":" Gets an IEEE754 single-precision (4 bytes) floating point number from\n `self` in big-endian byte order.","sig":null,"attributes":[{"value":"/ Gets an IEEE754 single-precision (4 bytes) floating point number from","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":24672,"byte_end":24745,"line_start":710,"line_end":710,"column_start":5,"column_end":78}},{"value":"/ `self` in big-endian byte order.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":24750,"byte_end":24786,"line_start":711,"line_end":711,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":24791,"byte_end":24794,"line_start":712,"line_end":712,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 4.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":24799,"byte_end":24841,"line_start":713,"line_end":713,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":24846,"byte_end":24849,"line_start":714,"line_end":714,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":24854,"byte_end":24868,"line_start":715,"line_end":715,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":24873,"byte_end":24876,"line_start":716,"line_end":716,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":24881,"byte_end":24888,"line_start":717,"line_end":717,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":24893,"byte_end":24912,"line_start":718,"line_end":718,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":24917,"byte_end":24920,"line_start":719,"line_end":719,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x3F\\x99\\x99\\x9A hello\"[..];","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":24925,"byte_end":24974,"line_start":720,"line_end":720,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(1.2f32, buf.get_f32());","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":24979,"byte_end":25017,"line_start":721,"line_end":721,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":25022,"byte_end":25029,"line_start":722,"line_end":722,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":25034,"byte_end":25037,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":25042,"byte_end":25054,"line_start":724,"line_end":724,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":25059,"byte_end":25062,"line_start":725,"line_end":725,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":25067,"byte_end":25140,"line_start":726,"line_end":726,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":25713,"byte_end":25723,"line_start":748,"line_end":748,"column_start":8,"column_end":18},"name":"get_f32_le","qualname":"::buf::buf_impl::Buf::get_f32_le","value":"pub fn get_f32_le(&mut Self) -> f32","parent":{"krate":0,"index":16},"children":[],"decl_id":null,"docs":" Gets an IEEE754 single-precision (4 bytes) floating point number from\n `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Gets an IEEE754 single-precision (4 bytes) floating point number from","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":25231,"byte_end":25304,"line_start":731,"line_end":731,"column_start":5,"column_end":78}},{"value":"/ `self` in little-endian byte order.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":25309,"byte_end":25348,"line_start":732,"line_end":732,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":25353,"byte_end":25356,"line_start":733,"line_end":733,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 4.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":25361,"byte_end":25403,"line_start":734,"line_end":734,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":25408,"byte_end":25411,"line_start":735,"line_end":735,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":25416,"byte_end":25430,"line_start":736,"line_end":736,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":25435,"byte_end":25438,"line_start":737,"line_end":737,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":25443,"byte_end":25450,"line_start":738,"line_end":738,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":25455,"byte_end":25474,"line_start":739,"line_end":739,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":25479,"byte_end":25482,"line_start":740,"line_end":740,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x9A\\x99\\x99\\x3F hello\"[..];","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":25487,"byte_end":25536,"line_start":741,"line_end":741,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(1.2f32, buf.get_f32_le());","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":25541,"byte_end":25582,"line_start":742,"line_end":742,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":25587,"byte_end":25594,"line_start":743,"line_end":743,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":25599,"byte_end":25602,"line_start":744,"line_end":744,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":25607,"byte_end":25619,"line_start":745,"line_end":745,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":25624,"byte_end":25627,"line_start":746,"line_end":746,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":25632,"byte_end":25705,"line_start":747,"line_end":747,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":26294,"byte_end":26301,"line_start":769,"line_end":769,"column_start":8,"column_end":15},"name":"get_f64","qualname":"::buf::buf_impl::Buf::get_f64","value":"pub fn get_f64(&mut Self) -> f64","parent":{"krate":0,"index":16},"children":[],"decl_id":null,"docs":" Gets an IEEE754 double-precision (8 bytes) floating point number from\n `self` in big-endian byte order.","sig":null,"attributes":[{"value":"/ Gets an IEEE754 double-precision (8 bytes) floating point number from","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":25802,"byte_end":25875,"line_start":752,"line_end":752,"column_start":5,"column_end":78}},{"value":"/ `self` in big-endian byte order.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":25880,"byte_end":25916,"line_start":753,"line_end":753,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":25921,"byte_end":25924,"line_start":754,"line_end":754,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 8.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":25929,"byte_end":25971,"line_start":755,"line_end":755,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":25976,"byte_end":25979,"line_start":756,"line_end":756,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":25984,"byte_end":25998,"line_start":757,"line_end":757,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":26003,"byte_end":26006,"line_start":758,"line_end":758,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":26011,"byte_end":26018,"line_start":759,"line_end":759,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":26023,"byte_end":26042,"line_start":760,"line_end":760,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":26047,"byte_end":26050,"line_start":761,"line_end":761,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x3F\\xF3\\x33\\x33\\x33\\x33\\x33\\x33 hello\"[..];","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":26055,"byte_end":26120,"line_start":762,"line_end":762,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(1.2f64, buf.get_f64());","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":26125,"byte_end":26163,"line_start":763,"line_end":763,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":26168,"byte_end":26175,"line_start":764,"line_end":764,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":26180,"byte_end":26183,"line_start":765,"line_end":765,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":26188,"byte_end":26200,"line_start":766,"line_end":766,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":26205,"byte_end":26208,"line_start":767,"line_end":767,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":26213,"byte_end":26286,"line_start":768,"line_end":768,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":49},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":26875,"byte_end":26885,"line_start":790,"line_end":790,"column_start":8,"column_end":18},"name":"get_f64_le","qualname":"::buf::buf_impl::Buf::get_f64_le","value":"pub fn get_f64_le(&mut Self) -> f64","parent":{"krate":0,"index":16},"children":[],"decl_id":null,"docs":" Gets an IEEE754 double-precision (8 bytes) floating point number from\n `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Gets an IEEE754 double-precision (8 bytes) floating point number from","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":26377,"byte_end":26450,"line_start":773,"line_end":773,"column_start":5,"column_end":78}},{"value":"/ `self` in little-endian byte order.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":26455,"byte_end":26494,"line_start":774,"line_end":774,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":26499,"byte_end":26502,"line_start":775,"line_end":775,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 8.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":26507,"byte_end":26549,"line_start":776,"line_end":776,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":26554,"byte_end":26557,"line_start":777,"line_end":777,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":26562,"byte_end":26576,"line_start":778,"line_end":778,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":26581,"byte_end":26584,"line_start":779,"line_end":779,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":26589,"byte_end":26596,"line_start":780,"line_end":780,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":26601,"byte_end":26620,"line_start":781,"line_end":781,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":26625,"byte_end":26628,"line_start":782,"line_end":782,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x33\\x33\\x33\\x33\\x33\\x33\\xF3\\x3F hello\"[..];","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":26633,"byte_end":26698,"line_start":783,"line_end":783,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(1.2f64, buf.get_f64_le());","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":26703,"byte_end":26744,"line_start":784,"line_end":784,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":26749,"byte_end":26756,"line_start":785,"line_end":785,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":26761,"byte_end":26764,"line_start":786,"line_end":786,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":26769,"byte_end":26781,"line_start":787,"line_end":787,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":26786,"byte_end":26789,"line_start":788,"line_end":788,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":26794,"byte_end":26867,"line_start":789,"line_end":789,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":27246,"byte_end":27254,"line_start":804,"line_end":804,"column_start":8,"column_end":16},"name":"to_bytes","qualname":"::buf::buf_impl::Buf::to_bytes","value":"pub fn to_bytes(&mut Self) -> crate::Bytes","parent":{"krate":0,"index":16},"children":[],"decl_id":null,"docs":" Consumes remaining bytes inside self and returns new instance of `Bytes`","sig":null,"attributes":[{"value":"/ Consumes remaining bytes inside self and returns new instance of `Bytes`","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":26964,"byte_end":27040,"line_start":794,"line_end":794,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":27045,"byte_end":27048,"line_start":795,"line_end":795,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":27053,"byte_end":27067,"line_start":796,"line_end":796,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":27072,"byte_end":27075,"line_start":797,"line_end":797,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":27080,"byte_end":27087,"line_start":798,"line_end":798,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":27092,"byte_end":27111,"line_start":799,"line_end":799,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":27116,"byte_end":27119,"line_start":800,"line_end":800,"column_start":5,"column_end":8}},{"value":"/ let bytes = (&b\"hello world\"[..]).to_bytes();","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":27124,"byte_end":27173,"line_start":801,"line_end":801,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(&bytes[..], &b\"hello world\"[..]);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":27178,"byte_end":27226,"line_start":802,"line_end":802,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":27231,"byte_end":27238,"line_start":803,"line_end":803,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":84},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":31993,"byte_end":31999,"line_start":28,"line_end":28,"column_start":11,"column_end":17},"name":"BufMut","qualname":"::buf::buf_mut::BufMut","value":"BufMut","parent":null,"children":[{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":91},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":119}],"decl_id":null,"docs":" A trait for values that provide sequential write access to bytes.","sig":null,"attributes":[{"value":"/ A trait for values that provide sequential write access to bytes.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":31429,"byte_end":31498,"line_start":8,"line_end":8,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":31499,"byte_end":31502,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Write bytes to a buffer","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":31503,"byte_end":31530,"line_start":10,"line_end":10,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":31531,"byte_end":31534,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ A buffer stores bytes in memory such that write operations are infallible.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":31535,"byte_end":31613,"line_start":12,"line_end":12,"column_start":1,"column_end":79}},{"value":"/ The underlying storage may or may not be in contiguous memory. A `BufMut`","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":31614,"byte_end":31691,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/ value is a cursor into the buffer. Writing to `BufMut` advances the cursor","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":31692,"byte_end":31770,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"/ position.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":31771,"byte_end":31784,"line_start":15,"line_end":15,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":31785,"byte_end":31788,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ The simplest `BufMut` is a `Vec<u8>`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":31789,"byte_end":31830,"line_start":17,"line_end":17,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":31831,"byte_end":31834,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":31835,"byte_end":31842,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":31843,"byte_end":31865,"line_start":20,"line_end":20,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":31866,"byte_end":31869,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":31870,"byte_end":31895,"line_start":22,"line_end":22,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":31896,"byte_end":31899,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ buf.put(&b\"hello world\"[..]);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":31900,"byte_end":31933,"line_start":24,"line_end":24,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":31934,"byte_end":31937,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(buf, b\"hello world\");","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":31938,"byte_end":31974,"line_start":26,"line_end":26,"column_start":1,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":31975,"byte_end":31982,"line_start":27,"line_end":27,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":32857,"byte_end":32870,"line_start":54,"line_end":54,"column_start":8,"column_end":21},"name":"remaining_mut","qualname":"::buf::buf_mut::BufMut::remaining_mut","value":"pub fn remaining_mut(&Self) -> usize","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":" Returns the number of bytes that can be written from the current\n position until the end of the buffer is reached.","sig":null,"attributes":[{"value":"/ Returns the number of bytes that can be written from the current","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":32006,"byte_end":32074,"line_start":29,"line_end":29,"column_start":5,"column_end":73}},{"value":"/ position until the end of the buffer is reached.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":32079,"byte_end":32131,"line_start":30,"line_end":30,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":32136,"byte_end":32139,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ This value is greater than or equal to the length of the slice returned","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":32144,"byte_end":32219,"line_start":32,"line_end":32,"column_start":5,"column_end":80}},{"value":"/ by `bytes_mut`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":32224,"byte_end":32243,"line_start":33,"line_end":33,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":32248,"byte_end":32251,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":32256,"byte_end":32270,"line_start":35,"line_end":35,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":32275,"byte_end":32278,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":32283,"byte_end":32290,"line_start":37,"line_end":37,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":32295,"byte_end":32317,"line_start":38,"line_end":38,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":32322,"byte_end":32325,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ let mut dst = [0; 10];","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":32330,"byte_end":32356,"line_start":40,"line_end":40,"column_start":5,"column_end":31}},{"value":"/ let mut buf = &mut dst[..];","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":32361,"byte_end":32392,"line_start":41,"line_end":41,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":32397,"byte_end":32400,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ let original_remaining = buf.remaining_mut();","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":32405,"byte_end":32454,"line_start":43,"line_end":43,"column_start":5,"column_end":54}},{"value":"/ buf.put(&b\"hello\"[..]);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":32459,"byte_end":32486,"line_start":44,"line_end":44,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":32491,"byte_end":32494,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(original_remaining - 5, buf.remaining_mut());","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":32499,"byte_end":32559,"line_start":46,"line_end":46,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":32564,"byte_end":32571,"line_start":47,"line_end":47,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":32576,"byte_end":32579,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ # Implementer notes","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":32584,"byte_end":32607,"line_start":49,"line_end":49,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":32612,"byte_end":32615,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ Implementations of `remaining_mut` should ensure that the return value","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":32620,"byte_end":32694,"line_start":51,"line_end":51,"column_start":5,"column_end":79}},{"value":"/ does not change unless a call is made to `advance_mut` or any other","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":32699,"byte_end":32770,"line_start":52,"line_end":52,"column_start":5,"column_end":76}},{"value":"/ function that is documented to change the `BufMut`'s current position.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":32775,"byte_end":32849,"line_start":53,"line_end":53,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":34320,"byte_end":34331,"line_start":100,"line_end":100,"column_start":15,"column_end":26},"name":"advance_mut","qualname":"::buf::buf_mut::BufMut::advance_mut","value":"pub unsafe fn advance_mut(&mut Self, usize)","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":" Advance the internal cursor of the BufMut","sig":null,"attributes":[{"value":"/ Advance the internal cursor of the BufMut","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":32893,"byte_end":32938,"line_start":56,"line_end":56,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":32943,"byte_end":32946,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ The next call to `bytes_mut` will return a slice starting `cnt` bytes","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":32951,"byte_end":33024,"line_start":58,"line_end":58,"column_start":5,"column_end":78}},{"value":"/ further into the underlying buffer.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":33029,"byte_end":33068,"line_start":59,"line_end":59,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":33073,"byte_end":33076,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe because there is no guarantee that the bytes","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":33081,"byte_end":33153,"line_start":61,"line_end":61,"column_start":5,"column_end":77}},{"value":"/ being advanced past have been initialized.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":33158,"byte_end":33204,"line_start":62,"line_end":62,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":33209,"byte_end":33212,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":33217,"byte_end":33231,"line_start":64,"line_end":64,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":33236,"byte_end":33239,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":33244,"byte_end":33251,"line_start":66,"line_end":66,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":33256,"byte_end":33278,"line_start":67,"line_end":67,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":33283,"byte_end":33286,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ let mut buf = Vec::with_capacity(16);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":33291,"byte_end":33332,"line_start":69,"line_end":69,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":33337,"byte_end":33340,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ unsafe {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":33345,"byte_end":33357,"line_start":71,"line_end":71,"column_start":5,"column_end":17}},{"value":"/     // MaybeUninit::as_mut_ptr","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":33362,"byte_end":33396,"line_start":72,"line_end":72,"column_start":5,"column_end":39}},{"value":"/     buf.bytes_mut()[0].as_mut_ptr().write(b'h');","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":33401,"byte_end":33453,"line_start":73,"line_end":73,"column_start":5,"column_end":57}},{"value":"/     buf.bytes_mut()[1].as_mut_ptr().write(b'e');","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":33458,"byte_end":33510,"line_start":74,"line_end":74,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":33515,"byte_end":33518,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/     buf.advance_mut(2);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":33523,"byte_end":33550,"line_start":76,"line_end":76,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":33555,"byte_end":33558,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/     buf.bytes_mut()[0].as_mut_ptr().write(b'l');","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":33563,"byte_end":33615,"line_start":78,"line_end":78,"column_start":5,"column_end":57}},{"value":"/     buf.bytes_mut()[1].as_mut_ptr().write(b'l');","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":33620,"byte_end":33672,"line_start":79,"line_end":79,"column_start":5,"column_end":57}},{"value":"/     buf.bytes_mut()[2].as_mut_ptr().write(b'o');","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":33677,"byte_end":33729,"line_start":80,"line_end":80,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":33734,"byte_end":33737,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/     buf.advance_mut(3);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":33742,"byte_end":33769,"line_start":82,"line_end":82,"column_start":5,"column_end":32}},{"value":"/ }","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":33774,"byte_end":33779,"line_start":83,"line_end":83,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":33784,"byte_end":33787,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(5, buf.len());","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":33792,"byte_end":33821,"line_start":85,"line_end":85,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, b\"hello\");","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":33826,"byte_end":33856,"line_start":86,"line_end":86,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":33861,"byte_end":33868,"line_start":87,"line_end":87,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":33873,"byte_end":33876,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":33881,"byte_end":33893,"line_start":89,"line_end":89,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":33898,"byte_end":33901,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ This function **may** panic if `cnt > self.remaining_mut()`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":33906,"byte_end":33970,"line_start":91,"line_end":91,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":33975,"byte_end":33978,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ # Implementer notes","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":33983,"byte_end":34006,"line_start":93,"line_end":93,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":34011,"byte_end":34014,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ It is recommended for implementations of `advance_mut` to panic if","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":34019,"byte_end":34089,"line_start":95,"line_end":95,"column_start":5,"column_end":75}},{"value":"/ `cnt > self.remaining_mut()`. If the implementation does not panic,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":34094,"byte_end":34165,"line_start":96,"line_end":96,"column_start":5,"column_end":76}},{"value":"/ the call must behave as if `cnt == self.remaining_mut()`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":34170,"byte_end":34231,"line_start":97,"line_end":97,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":34236,"byte_end":34239,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ A call with `cnt == 0` should never panic and be a no-op.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":34244,"byte_end":34305,"line_start":99,"line_end":99,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":34797,"byte_end":34814,"line_start":120,"line_end":120,"column_start":8,"column_end":25},"name":"has_remaining_mut","qualname":"::buf::buf_mut::BufMut::has_remaining_mut","value":"pub fn has_remaining_mut(&Self) -> bool","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":" Returns true if there is space in `self` for more bytes.","sig":null,"attributes":[{"value":"/ Returns true if there is space in `self` for more bytes.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":34361,"byte_end":34421,"line_start":102,"line_end":102,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":34426,"byte_end":34429,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to `self.remaining_mut() != 0`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":34434,"byte_end":34488,"line_start":104,"line_end":104,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":34493,"byte_end":34496,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":34501,"byte_end":34515,"line_start":106,"line_end":106,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":34520,"byte_end":34523,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":34528,"byte_end":34535,"line_start":108,"line_end":108,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":34540,"byte_end":34562,"line_start":109,"line_end":109,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":34567,"byte_end":34570,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ let mut dst = [0; 5];","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":34575,"byte_end":34600,"line_start":111,"line_end":111,"column_start":5,"column_end":30}},{"value":"/ let mut buf = &mut dst[..];","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":34605,"byte_end":34636,"line_start":112,"line_end":112,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":34641,"byte_end":34644,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ assert!(buf.has_remaining_mut());","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":34649,"byte_end":34686,"line_start":114,"line_end":114,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":34691,"byte_end":34694,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ buf.put(&b\"hello\"[..]);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":34699,"byte_end":34726,"line_start":116,"line_end":116,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":34731,"byte_end":34734,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ assert!(!buf.has_remaining_mut());","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":34739,"byte_end":34777,"line_start":118,"line_end":118,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":34782,"byte_end":34789,"line_start":119,"line_end":119,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":36367,"byte_end":36376,"line_start":165,"line_end":165,"column_start":8,"column_end":17},"name":"bytes_mut","qualname":"::buf::buf_mut::BufMut::bytes_mut","value":"pub fn bytes_mut(&mut Self) -> &mut [MaybeUninit<u8>]","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":" Returns a mutable slice starting at the current BufMut position and of\n length between 0 and `BufMut::remaining_mut()`. Note that this *can* be shorter than the\n whole remainder of the buffer (this allows non-continuous implementation).","sig":null,"attributes":[{"value":"/ Returns a mutable slice starting at the current BufMut position and of","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":34876,"byte_end":34950,"line_start":124,"line_end":124,"column_start":5,"column_end":79}},{"value":"/ length between 0 and `BufMut::remaining_mut()`. Note that this *can* be shorter than the","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":34955,"byte_end":35047,"line_start":125,"line_end":125,"column_start":5,"column_end":97}},{"value":"/ whole remainder of the buffer (this allows non-continuous implementation).","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":35052,"byte_end":35130,"line_start":126,"line_end":126,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":35135,"byte_end":35138,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ This is a lower level function. Most operations are done with other","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":35143,"byte_end":35214,"line_start":128,"line_end":128,"column_start":5,"column_end":76}},{"value":"/ functions.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":35219,"byte_end":35233,"line_start":129,"line_end":129,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":35238,"byte_end":35241,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ The returned byte slice may represent uninitialized memory.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":35246,"byte_end":35309,"line_start":131,"line_end":131,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":35314,"byte_end":35317,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":35322,"byte_end":35336,"line_start":133,"line_end":133,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":35341,"byte_end":35344,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":35349,"byte_end":35356,"line_start":135,"line_end":135,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":35361,"byte_end":35383,"line_start":136,"line_end":136,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":35388,"byte_end":35391,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ let mut buf = Vec::with_capacity(16);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":35396,"byte_end":35437,"line_start":138,"line_end":138,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":35442,"byte_end":35445,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ unsafe {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":35450,"byte_end":35462,"line_start":140,"line_end":140,"column_start":5,"column_end":17}},{"value":"/     // MaybeUninit::as_mut_ptr","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":35467,"byte_end":35501,"line_start":141,"line_end":141,"column_start":5,"column_end":39}},{"value":"/     buf.bytes_mut()[0].as_mut_ptr().write(b'h');","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":35506,"byte_end":35558,"line_start":142,"line_end":142,"column_start":5,"column_end":57}},{"value":"/     buf.bytes_mut()[1].as_mut_ptr().write(b'e');","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":35563,"byte_end":35615,"line_start":143,"line_end":143,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":35620,"byte_end":35623,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/     buf.advance_mut(2);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":35628,"byte_end":35655,"line_start":145,"line_end":145,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":35660,"byte_end":35663,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/     buf.bytes_mut()[0].as_mut_ptr().write(b'l');","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":35668,"byte_end":35720,"line_start":147,"line_end":147,"column_start":5,"column_end":57}},{"value":"/     buf.bytes_mut()[1].as_mut_ptr().write(b'l');","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":35725,"byte_end":35777,"line_start":148,"line_end":148,"column_start":5,"column_end":57}},{"value":"/     buf.bytes_mut()[2].as_mut_ptr().write(b'o');","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":35782,"byte_end":35834,"line_start":149,"line_end":149,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":35839,"byte_end":35842,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/     buf.advance_mut(3);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":35847,"byte_end":35874,"line_start":151,"line_end":151,"column_start":5,"column_end":32}},{"value":"/ }","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":35879,"byte_end":35884,"line_start":152,"line_end":152,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":35889,"byte_end":35892,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(5, buf.len());","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":35897,"byte_end":35926,"line_start":154,"line_end":154,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, b\"hello\");","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":35931,"byte_end":35961,"line_start":155,"line_end":155,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":35966,"byte_end":35973,"line_start":156,"line_end":156,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":35978,"byte_end":35981,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ # Implementer notes","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":35986,"byte_end":36009,"line_start":158,"line_end":158,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":36014,"byte_end":36017,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ This function should never panic. `bytes_mut` should return an empty","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":36022,"byte_end":36094,"line_start":160,"line_end":160,"column_start":5,"column_end":77}},{"value":"/ slice **if and only if** `remaining_mut` returns 0. In other words,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":36099,"byte_end":36170,"line_start":161,"line_end":161,"column_start":5,"column_end":76}},{"value":"/ `bytes_mut` returning an empty slice implies that `remaining_mut` will","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":36175,"byte_end":36249,"line_start":162,"line_end":162,"column_start":5,"column_end":79}},{"value":"/ return 0 and `remaining_mut` returning 0 implies that `bytes_mut` will","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":36254,"byte_end":36328,"line_start":163,"line_end":163,"column_start":5,"column_end":79}},{"value":"/ return an empty slice.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":36333,"byte_end":36359,"line_start":164,"line_end":164,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":89},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":37819,"byte_end":37837,"line_start":196,"line_end":196,"column_start":8,"column_end":26},"name":"bytes_vectored_mut","qualname":"::buf::buf_mut::BufMut::bytes_vectored_mut","value":"pub fn bytes_vectored_mut<'a>(&'a mut Self, &mut [IoSliceMut]) -> usize","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":" Fills `dst` with potentially multiple mutable slices starting at `self`'s\n current position.","sig":null,"attributes":[{"value":"/ Fills `dst` with potentially multiple mutable slices starting at `self`'s","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":36420,"byte_end":36497,"line_start":167,"line_end":167,"column_start":5,"column_end":82}},{"value":"/ current position.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":36502,"byte_end":36523,"line_start":168,"line_end":168,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":36528,"byte_end":36531,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ If the `BufMut` is backed by disjoint slices of bytes, `bytes_vectored_mut`","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":36536,"byte_end":36615,"line_start":170,"line_end":170,"column_start":5,"column_end":84}},{"value":"/ enables fetching more than one slice at once. `dst` is a slice of","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":36620,"byte_end":36689,"line_start":171,"line_end":171,"column_start":5,"column_end":74}},{"value":"/ mutable `IoSliceMut` references, enabling the slice to be directly used with","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":36694,"byte_end":36774,"line_start":172,"line_end":172,"column_start":5,"column_end":85}},{"value":"/ [`readv`] without any further conversion. The sum of the lengths of all","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":36779,"byte_end":36854,"line_start":173,"line_end":173,"column_start":5,"column_end":80}},{"value":"/ the buffers in `dst` will be less than or equal to","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":36859,"byte_end":36913,"line_start":174,"line_end":174,"column_start":5,"column_end":59}},{"value":"/ `Buf::remaining_mut()`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":36918,"byte_end":36945,"line_start":175,"line_end":175,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":36950,"byte_end":36953,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ The entries in `dst` will be overwritten, but the data **contained** by","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":36958,"byte_end":37033,"line_start":177,"line_end":177,"column_start":5,"column_end":80}},{"value":"/ the slices **will not** be modified. If `bytes_vectored_mut` does not fill every","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":37038,"byte_end":37122,"line_start":178,"line_end":178,"column_start":5,"column_end":89}},{"value":"/ entry in `dst`, then `dst` is guaranteed to contain all remaining slices","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":37127,"byte_end":37203,"line_start":179,"line_end":179,"column_start":5,"column_end":81}},{"value":"/ in `self.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":37208,"byte_end":37221,"line_start":180,"line_end":180,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":37226,"byte_end":37229,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ This is a lower level function. Most operations are done with other","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":37234,"byte_end":37305,"line_start":182,"line_end":182,"column_start":5,"column_end":76}},{"value":"/ functions.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":37310,"byte_end":37324,"line_start":183,"line_end":183,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":37329,"byte_end":37332,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ # Implementer notes","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":37337,"byte_end":37360,"line_start":185,"line_end":185,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":37365,"byte_end":37368,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ This function should never panic. Once the end of the buffer is reached,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":37373,"byte_end":37449,"line_start":187,"line_end":187,"column_start":5,"column_end":81}},{"value":"/ i.e., `BufMut::remaining_mut` returns 0, calls to `bytes_vectored_mut` must","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":37454,"byte_end":37533,"line_start":188,"line_end":188,"column_start":5,"column_end":84}},{"value":"/ return 0 without mutating `dst`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":37538,"byte_end":37574,"line_start":189,"line_end":189,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":37579,"byte_end":37582,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ Implementations should also take care to properly handle being called","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":37587,"byte_end":37660,"line_start":191,"line_end":191,"column_start":5,"column_end":78}},{"value":"/ with `dst` being a zero length slice.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":37665,"byte_end":37706,"line_start":192,"line_end":192,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":37711,"byte_end":37714,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ [`readv`]: http://man7.org/linux/man-pages/man2/readv.2.html","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":37719,"byte_end":37783,"line_start":194,"line_end":194,"column_start":5,"column_end":69}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":37788,"byte_end":37811,"line_start":195,"line_end":195,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":38606,"byte_end":38609,"line_start":229,"line_end":229,"column_start":8,"column_end":11},"name":"put","qualname":"::buf::buf_mut::BufMut::put","value":"pub fn put<T: super::Buf>(&mut Self, T) where Self: Sized","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":" Transfer bytes into `self` from `src` and advance the cursor by the\n number of bytes written.","sig":null,"attributes":[{"value":"/ Transfer bytes into `self` from `src` and advance the cursor by the","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":38117,"byte_end":38188,"line_start":209,"line_end":209,"column_start":5,"column_end":76}},{"value":"/ number of bytes written.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":38193,"byte_end":38221,"line_start":210,"line_end":210,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":38226,"byte_end":38229,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":38234,"byte_end":38248,"line_start":212,"line_end":212,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":38253,"byte_end":38256,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":38261,"byte_end":38268,"line_start":214,"line_end":214,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":38273,"byte_end":38295,"line_start":215,"line_end":215,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":38300,"byte_end":38303,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":38308,"byte_end":38333,"line_start":217,"line_end":217,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":38338,"byte_end":38341,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ buf.put_u8(b'h');","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":38346,"byte_end":38367,"line_start":219,"line_end":219,"column_start":5,"column_end":26}},{"value":"/ buf.put(&b\"ello\"[..]);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":38372,"byte_end":38398,"line_start":220,"line_end":220,"column_start":5,"column_end":31}},{"value":"/ buf.put(&b\" world\"[..]);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":38403,"byte_end":38431,"line_start":221,"line_end":221,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":38436,"byte_end":38439,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buf, b\"hello world\");","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":38444,"byte_end":38480,"line_start":223,"line_end":223,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":38485,"byte_end":38492,"line_start":224,"line_end":224,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":38497,"byte_end":38500,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":38505,"byte_end":38517,"line_start":226,"line_end":226,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":38522,"byte_end":38525,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ Panics if `self` does not have enough capacity to contain `src`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":38530,"byte_end":38598,"line_start":228,"line_end":228,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":39685,"byte_end":39694,"line_start":270,"line_end":270,"column_start":8,"column_end":17},"name":"put_slice","qualname":"::buf::buf_mut::BufMut::put_slice","value":"pub fn put_slice(&mut Self, &[u8])","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":" Transfer bytes into `self` from `src` and advance the cursor by the\n number of bytes written.","sig":null,"attributes":[{"value":"/ Transfer bytes into `self` from `src` and advance the cursor by the","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":39185,"byte_end":39256,"line_start":251,"line_end":251,"column_start":5,"column_end":76}},{"value":"/ number of bytes written.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":39261,"byte_end":39289,"line_start":252,"line_end":252,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":39294,"byte_end":39297,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ `self` must have enough remaining capacity to contain all of `src`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":39302,"byte_end":39373,"line_start":254,"line_end":254,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":39378,"byte_end":39381,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":39386,"byte_end":39393,"line_start":256,"line_end":256,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":39398,"byte_end":39420,"line_start":257,"line_end":257,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":39425,"byte_end":39428,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ let mut dst = [0; 6];","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":39433,"byte_end":39458,"line_start":259,"line_end":259,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":39463,"byte_end":39466,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":39471,"byte_end":39476,"line_start":261,"line_end":261,"column_start":5,"column_end":10}},{"value":"/     let mut buf = &mut dst[..];","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":39481,"byte_end":39516,"line_start":262,"line_end":262,"column_start":5,"column_end":40}},{"value":"/     buf.put_slice(b\"hello\");","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":39521,"byte_end":39553,"line_start":263,"line_end":263,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":39558,"byte_end":39561,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(1, buf.remaining_mut());","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":39566,"byte_end":39609,"line_start":265,"line_end":265,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":39614,"byte_end":39619,"line_start":266,"line_end":266,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":39624,"byte_end":39627,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(b\"hello\\0\", &dst);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":39632,"byte_end":39665,"line_start":268,"line_end":268,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":39670,"byte_end":39677,"line_start":269,"line_end":269,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":40744,"byte_end":40750,"line_start":313,"line_end":313,"column_start":8,"column_end":14},"name":"put_u8","qualname":"::buf::buf_mut::BufMut::put_u8","value":"pub fn put_u8(&mut Self, u8)","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":" Writes an unsigned 8 bit integer to `self`.","sig":null,"attributes":[{"value":"/ Writes an unsigned 8 bit integer to `self`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":40327,"byte_end":40374,"line_start":295,"line_end":295,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":40379,"byte_end":40382,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 1.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":40387,"byte_end":40429,"line_start":297,"line_end":297,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":40434,"byte_end":40437,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":40442,"byte_end":40456,"line_start":299,"line_end":299,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":40461,"byte_end":40464,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":40469,"byte_end":40476,"line_start":301,"line_end":301,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":40481,"byte_end":40503,"line_start":302,"line_end":302,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":40508,"byte_end":40511,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":40516,"byte_end":40541,"line_start":304,"line_end":304,"column_start":5,"column_end":30}},{"value":"/ buf.put_u8(0x01);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":40546,"byte_end":40567,"line_start":305,"line_end":305,"column_start":5,"column_end":26}},{"value":"/ assert_eq!(buf, b\"\\x01\");","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":40572,"byte_end":40601,"line_start":306,"line_end":306,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":40606,"byte_end":40613,"line_start":307,"line_end":307,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":40618,"byte_end":40621,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":40626,"byte_end":40638,"line_start":309,"line_end":309,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":40643,"byte_end":40646,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":40651,"byte_end":40720,"line_start":311,"line_end":311,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":40725,"byte_end":40736,"line_start":312,"line_end":312,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":41249,"byte_end":41255,"line_start":336,"line_end":336,"column_start":8,"column_end":14},"name":"put_i8","qualname":"::buf::buf_mut::BufMut::put_i8","value":"pub fn put_i8(&mut Self, i8)","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":" Writes a signed 8 bit integer to `self`.","sig":null,"attributes":[{"value":"/ Writes a signed 8 bit integer to `self`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":40835,"byte_end":40879,"line_start":318,"line_end":318,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":40884,"byte_end":40887,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 1.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":40892,"byte_end":40934,"line_start":320,"line_end":320,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":40939,"byte_end":40942,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":40947,"byte_end":40961,"line_start":322,"line_end":322,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":40966,"byte_end":40969,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":40974,"byte_end":40981,"line_start":324,"line_end":324,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":40986,"byte_end":41008,"line_start":325,"line_end":325,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":41013,"byte_end":41016,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":41021,"byte_end":41046,"line_start":327,"line_end":327,"column_start":5,"column_end":30}},{"value":"/ buf.put_i8(0x01);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":41051,"byte_end":41072,"line_start":328,"line_end":328,"column_start":5,"column_end":26}},{"value":"/ assert_eq!(buf, b\"\\x01\");","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":41077,"byte_end":41106,"line_start":329,"line_end":329,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":41111,"byte_end":41118,"line_start":330,"line_end":330,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":41123,"byte_end":41126,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":41131,"byte_end":41143,"line_start":332,"line_end":332,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":41148,"byte_end":41151,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":41156,"byte_end":41225,"line_start":334,"line_end":334,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":41230,"byte_end":41241,"line_start":335,"line_end":335,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":41795,"byte_end":41802,"line_start":359,"line_end":359,"column_start":8,"column_end":15},"name":"put_u16","qualname":"::buf::buf_mut::BufMut::put_u16","value":"pub fn put_u16(&mut Self, u16)","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":" Writes an unsigned 16 bit integer to `self` in big-endian byte order.","sig":null,"attributes":[{"value":"/ Writes an unsigned 16 bit integer to `self` in big-endian byte order.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":41345,"byte_end":41418,"line_start":341,"line_end":341,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":41423,"byte_end":41426,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 2.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":41431,"byte_end":41473,"line_start":343,"line_end":343,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":41478,"byte_end":41481,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":41486,"byte_end":41500,"line_start":345,"line_end":345,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":41505,"byte_end":41508,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":41513,"byte_end":41520,"line_start":347,"line_end":347,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":41525,"byte_end":41547,"line_start":348,"line_end":348,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":41552,"byte_end":41555,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":41560,"byte_end":41585,"line_start":350,"line_end":350,"column_start":5,"column_end":30}},{"value":"/ buf.put_u16(0x0809);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":41590,"byte_end":41614,"line_start":351,"line_end":351,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(buf, b\"\\x08\\x09\");","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":41619,"byte_end":41652,"line_start":352,"line_end":352,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":41657,"byte_end":41664,"line_start":353,"line_end":353,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":41669,"byte_end":41672,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":41677,"byte_end":41689,"line_start":355,"line_end":355,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":41694,"byte_end":41697,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":41702,"byte_end":41771,"line_start":357,"line_end":357,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":41776,"byte_end":41787,"line_start":358,"line_end":358,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":42332,"byte_end":42342,"line_start":381,"line_end":381,"column_start":8,"column_end":18},"name":"put_u16_le","qualname":"::buf::buf_mut::BufMut::put_u16_le","value":"pub fn put_u16_le(&mut Self, u16)","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":" Writes an unsigned 16 bit integer to `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Writes an unsigned 16 bit integer to `self` in little-endian byte order.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":41876,"byte_end":41952,"line_start":363,"line_end":363,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":41957,"byte_end":41960,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 2.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":41965,"byte_end":42007,"line_start":365,"line_end":365,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":42012,"byte_end":42015,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":42020,"byte_end":42034,"line_start":367,"line_end":367,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":42039,"byte_end":42042,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":42047,"byte_end":42054,"line_start":369,"line_end":369,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":42059,"byte_end":42081,"line_start":370,"line_end":370,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":42086,"byte_end":42089,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":42094,"byte_end":42119,"line_start":372,"line_end":372,"column_start":5,"column_end":30}},{"value":"/ buf.put_u16_le(0x0809);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":42124,"byte_end":42151,"line_start":373,"line_end":373,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(buf, b\"\\x09\\x08\");","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":42156,"byte_end":42189,"line_start":374,"line_end":374,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":42194,"byte_end":42201,"line_start":375,"line_end":375,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":42206,"byte_end":42209,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":42214,"byte_end":42226,"line_start":377,"line_end":377,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":42231,"byte_end":42234,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":42239,"byte_end":42308,"line_start":379,"line_end":379,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":42313,"byte_end":42324,"line_start":380,"line_end":380,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":42863,"byte_end":42870,"line_start":403,"line_end":403,"column_start":8,"column_end":15},"name":"put_i16","qualname":"::buf::buf_mut::BufMut::put_i16","value":"pub fn put_i16(&mut Self, i16)","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":" Writes a signed 16 bit integer to `self` in big-endian byte order.","sig":null,"attributes":[{"value":"/ Writes a signed 16 bit integer to `self` in big-endian byte order.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":42416,"byte_end":42486,"line_start":385,"line_end":385,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":42491,"byte_end":42494,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 2.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":42499,"byte_end":42541,"line_start":387,"line_end":387,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":42546,"byte_end":42549,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":42554,"byte_end":42568,"line_start":389,"line_end":389,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":42573,"byte_end":42576,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":42581,"byte_end":42588,"line_start":391,"line_end":391,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":42593,"byte_end":42615,"line_start":392,"line_end":392,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":42620,"byte_end":42623,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":42628,"byte_end":42653,"line_start":394,"line_end":394,"column_start":5,"column_end":30}},{"value":"/ buf.put_i16(0x0809);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":42658,"byte_end":42682,"line_start":395,"line_end":395,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(buf, b\"\\x08\\x09\");","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":42687,"byte_end":42720,"line_start":396,"line_end":396,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":42725,"byte_end":42732,"line_start":397,"line_end":397,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":42737,"byte_end":42740,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":42745,"byte_end":42757,"line_start":399,"line_end":399,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":42762,"byte_end":42765,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":42770,"byte_end":42839,"line_start":401,"line_end":401,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":42844,"byte_end":42855,"line_start":402,"line_end":402,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":43397,"byte_end":43407,"line_start":425,"line_end":425,"column_start":8,"column_end":18},"name":"put_i16_le","qualname":"::buf::buf_mut::BufMut::put_i16_le","value":"pub fn put_i16_le(&mut Self, i16)","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":" Writes a signed 16 bit integer to `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Writes a signed 16 bit integer to `self` in little-endian byte order.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":42944,"byte_end":43017,"line_start":407,"line_end":407,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":43022,"byte_end":43025,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 2.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":43030,"byte_end":43072,"line_start":409,"line_end":409,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":43077,"byte_end":43080,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":43085,"byte_end":43099,"line_start":411,"line_end":411,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":43104,"byte_end":43107,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":43112,"byte_end":43119,"line_start":413,"line_end":413,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":43124,"byte_end":43146,"line_start":414,"line_end":414,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":43151,"byte_end":43154,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":43159,"byte_end":43184,"line_start":416,"line_end":416,"column_start":5,"column_end":30}},{"value":"/ buf.put_i16_le(0x0809);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":43189,"byte_end":43216,"line_start":417,"line_end":417,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(buf, b\"\\x09\\x08\");","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":43221,"byte_end":43254,"line_start":418,"line_end":418,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":43259,"byte_end":43266,"line_start":419,"line_end":419,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":43271,"byte_end":43274,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":43279,"byte_end":43291,"line_start":421,"line_end":421,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":43296,"byte_end":43299,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":43304,"byte_end":43373,"line_start":423,"line_end":423,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":43378,"byte_end":43389,"line_start":424,"line_end":424,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":43943,"byte_end":43950,"line_start":447,"line_end":447,"column_start":8,"column_end":15},"name":"put_u32","qualname":"::buf::buf_mut::BufMut::put_u32","value":"pub fn put_u32(&mut Self, u32)","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":" Writes an unsigned 32 bit integer to `self` in big-endian byte order.","sig":null,"attributes":[{"value":"/ Writes an unsigned 32 bit integer to `self` in big-endian byte order.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":43481,"byte_end":43554,"line_start":429,"line_end":429,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":43559,"byte_end":43562,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 4.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":43567,"byte_end":43609,"line_start":431,"line_end":431,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":43614,"byte_end":43617,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":43622,"byte_end":43636,"line_start":433,"line_end":433,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":43641,"byte_end":43644,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":43649,"byte_end":43656,"line_start":435,"line_end":435,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":43661,"byte_end":43683,"line_start":436,"line_end":436,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":43688,"byte_end":43691,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":43696,"byte_end":43721,"line_start":438,"line_end":438,"column_start":5,"column_end":30}},{"value":"/ buf.put_u32(0x0809A0A1);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":43726,"byte_end":43754,"line_start":439,"line_end":439,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(buf, b\"\\x08\\x09\\xA0\\xA1\");","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":43759,"byte_end":43800,"line_start":440,"line_end":440,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":43805,"byte_end":43812,"line_start":441,"line_end":441,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":43817,"byte_end":43820,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":43825,"byte_end":43837,"line_start":443,"line_end":443,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":43842,"byte_end":43845,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":43850,"byte_end":43919,"line_start":445,"line_end":445,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":43924,"byte_end":43935,"line_start":446,"line_end":446,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":44492,"byte_end":44502,"line_start":469,"line_end":469,"column_start":8,"column_end":18},"name":"put_u32_le","qualname":"::buf::buf_mut::BufMut::put_u32_le","value":"pub fn put_u32_le(&mut Self, u32)","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":" Writes an unsigned 32 bit integer to `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Writes an unsigned 32 bit integer to `self` in little-endian byte order.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":44024,"byte_end":44100,"line_start":451,"line_end":451,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":44105,"byte_end":44108,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 4.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":44113,"byte_end":44155,"line_start":453,"line_end":453,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":44160,"byte_end":44163,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":44168,"byte_end":44182,"line_start":455,"line_end":455,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":44187,"byte_end":44190,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":44195,"byte_end":44202,"line_start":457,"line_end":457,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":44207,"byte_end":44229,"line_start":458,"line_end":458,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":44234,"byte_end":44237,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":44242,"byte_end":44267,"line_start":460,"line_end":460,"column_start":5,"column_end":30}},{"value":"/ buf.put_u32_le(0x0809A0A1);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":44272,"byte_end":44303,"line_start":461,"line_end":461,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(buf, b\"\\xA1\\xA0\\x09\\x08\");","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":44308,"byte_end":44349,"line_start":462,"line_end":462,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":44354,"byte_end":44361,"line_start":463,"line_end":463,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":44366,"byte_end":44369,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":44374,"byte_end":44386,"line_start":465,"line_end":465,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":44391,"byte_end":44394,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":44399,"byte_end":44468,"line_start":467,"line_end":467,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":44473,"byte_end":44484,"line_start":468,"line_end":468,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":45035,"byte_end":45042,"line_start":491,"line_end":491,"column_start":8,"column_end":15},"name":"put_i32","qualname":"::buf::buf_mut::BufMut::put_i32","value":"pub fn put_i32(&mut Self, i32)","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":" Writes a signed 32 bit integer to `self` in big-endian byte order.","sig":null,"attributes":[{"value":"/ Writes a signed 32 bit integer to `self` in big-endian byte order.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":44576,"byte_end":44646,"line_start":473,"line_end":473,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":44651,"byte_end":44654,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 4.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":44659,"byte_end":44701,"line_start":475,"line_end":475,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":44706,"byte_end":44709,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":44714,"byte_end":44728,"line_start":477,"line_end":477,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":44733,"byte_end":44736,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":44741,"byte_end":44748,"line_start":479,"line_end":479,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":44753,"byte_end":44775,"line_start":480,"line_end":480,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":44780,"byte_end":44783,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":44788,"byte_end":44813,"line_start":482,"line_end":482,"column_start":5,"column_end":30}},{"value":"/ buf.put_i32(0x0809A0A1);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":44818,"byte_end":44846,"line_start":483,"line_end":483,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(buf, b\"\\x08\\x09\\xA0\\xA1\");","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":44851,"byte_end":44892,"line_start":484,"line_end":484,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":44897,"byte_end":44904,"line_start":485,"line_end":485,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":44909,"byte_end":44912,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":44917,"byte_end":44929,"line_start":487,"line_end":487,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":44934,"byte_end":44937,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":44942,"byte_end":45011,"line_start":489,"line_end":489,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":45016,"byte_end":45027,"line_start":490,"line_end":490,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":45581,"byte_end":45591,"line_start":513,"line_end":513,"column_start":8,"column_end":18},"name":"put_i32_le","qualname":"::buf::buf_mut::BufMut::put_i32_le","value":"pub fn put_i32_le(&mut Self, i32)","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":" Writes a signed 32 bit integer to `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Writes a signed 32 bit integer to `self` in little-endian byte order.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":45116,"byte_end":45189,"line_start":495,"line_end":495,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":45194,"byte_end":45197,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 4.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":45202,"byte_end":45244,"line_start":497,"line_end":497,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":45249,"byte_end":45252,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":45257,"byte_end":45271,"line_start":499,"line_end":499,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":45276,"byte_end":45279,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":45284,"byte_end":45291,"line_start":501,"line_end":501,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":45296,"byte_end":45318,"line_start":502,"line_end":502,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":45323,"byte_end":45326,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":45331,"byte_end":45356,"line_start":504,"line_end":504,"column_start":5,"column_end":30}},{"value":"/ buf.put_i32_le(0x0809A0A1);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":45361,"byte_end":45392,"line_start":505,"line_end":505,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(buf, b\"\\xA1\\xA0\\x09\\x08\");","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":45397,"byte_end":45438,"line_start":506,"line_end":506,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":45443,"byte_end":45450,"line_start":507,"line_end":507,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":45455,"byte_end":45458,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":45463,"byte_end":45475,"line_start":509,"line_end":509,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":45480,"byte_end":45483,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":45488,"byte_end":45557,"line_start":511,"line_end":511,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":45562,"byte_end":45573,"line_start":512,"line_end":512,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":46155,"byte_end":46162,"line_start":535,"line_end":535,"column_start":8,"column_end":15},"name":"put_u64","qualname":"::buf::buf_mut::BufMut::put_u64","value":"pub fn put_u64(&mut Self, u64)","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":" Writes an unsigned 64 bit integer to `self` in the big-endian byte order.","sig":null,"attributes":[{"value":"/ Writes an unsigned 64 bit integer to `self` in the big-endian byte order.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":45665,"byte_end":45742,"line_start":517,"line_end":517,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":45747,"byte_end":45750,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 8.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":45755,"byte_end":45797,"line_start":519,"line_end":519,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":45802,"byte_end":45805,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":45810,"byte_end":45824,"line_start":521,"line_end":521,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":45829,"byte_end":45832,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":45837,"byte_end":45844,"line_start":523,"line_end":523,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":45849,"byte_end":45871,"line_start":524,"line_end":524,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":45876,"byte_end":45879,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":45884,"byte_end":45909,"line_start":526,"line_end":526,"column_start":5,"column_end":30}},{"value":"/ buf.put_u64(0x0102030405060708);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":45914,"byte_end":45950,"line_start":527,"line_end":527,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(buf, b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\");","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":45955,"byte_end":46012,"line_start":528,"line_end":528,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":46017,"byte_end":46024,"line_start":529,"line_end":529,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":46029,"byte_end":46032,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":46037,"byte_end":46049,"line_start":531,"line_end":531,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":46054,"byte_end":46057,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":46062,"byte_end":46131,"line_start":533,"line_end":533,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":46136,"byte_end":46147,"line_start":534,"line_end":534,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":46728,"byte_end":46738,"line_start":557,"line_end":557,"column_start":8,"column_end":18},"name":"put_u64_le","qualname":"::buf::buf_mut::BufMut::put_u64_le","value":"pub fn put_u64_le(&mut Self, u64)","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":" Writes an unsigned 64 bit integer to `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Writes an unsigned 64 bit integer to `self` in little-endian byte order.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":46236,"byte_end":46312,"line_start":539,"line_end":539,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":46317,"byte_end":46320,"line_start":540,"line_end":540,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 8.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":46325,"byte_end":46367,"line_start":541,"line_end":541,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":46372,"byte_end":46375,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":46380,"byte_end":46394,"line_start":543,"line_end":543,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":46399,"byte_end":46402,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":46407,"byte_end":46414,"line_start":545,"line_end":545,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":46419,"byte_end":46441,"line_start":546,"line_end":546,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":46446,"byte_end":46449,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":46454,"byte_end":46479,"line_start":548,"line_end":548,"column_start":5,"column_end":30}},{"value":"/ buf.put_u64_le(0x0102030405060708);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":46484,"byte_end":46523,"line_start":549,"line_end":549,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(buf, b\"\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01\");","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":46528,"byte_end":46585,"line_start":550,"line_end":550,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":46590,"byte_end":46597,"line_start":551,"line_end":551,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":46602,"byte_end":46605,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":46610,"byte_end":46622,"line_start":553,"line_end":553,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":46627,"byte_end":46630,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":46635,"byte_end":46704,"line_start":555,"line_end":555,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":46709,"byte_end":46720,"line_start":556,"line_end":556,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":47299,"byte_end":47306,"line_start":579,"line_end":579,"column_start":8,"column_end":15},"name":"put_i64","qualname":"::buf::buf_mut::BufMut::put_i64","value":"pub fn put_i64(&mut Self, i64)","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":" Writes a signed 64 bit integer to `self` in the big-endian byte order.","sig":null,"attributes":[{"value":"/ Writes a signed 64 bit integer to `self` in the big-endian byte order.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":46812,"byte_end":46886,"line_start":561,"line_end":561,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":46891,"byte_end":46894,"line_start":562,"line_end":562,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 8.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":46899,"byte_end":46941,"line_start":563,"line_end":563,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":46946,"byte_end":46949,"line_start":564,"line_end":564,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":46954,"byte_end":46968,"line_start":565,"line_end":565,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":46973,"byte_end":46976,"line_start":566,"line_end":566,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":46981,"byte_end":46988,"line_start":567,"line_end":567,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":46993,"byte_end":47015,"line_start":568,"line_end":568,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":47020,"byte_end":47023,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":47028,"byte_end":47053,"line_start":570,"line_end":570,"column_start":5,"column_end":30}},{"value":"/ buf.put_i64(0x0102030405060708);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":47058,"byte_end":47094,"line_start":571,"line_end":571,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(buf, b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\");","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":47099,"byte_end":47156,"line_start":572,"line_end":572,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":47161,"byte_end":47168,"line_start":573,"line_end":573,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":47173,"byte_end":47176,"line_start":574,"line_end":574,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":47181,"byte_end":47193,"line_start":575,"line_end":575,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":47198,"byte_end":47201,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":47206,"byte_end":47275,"line_start":577,"line_end":577,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":47280,"byte_end":47291,"line_start":578,"line_end":578,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":107},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":47869,"byte_end":47879,"line_start":601,"line_end":601,"column_start":8,"column_end":18},"name":"put_i64_le","qualname":"::buf::buf_mut::BufMut::put_i64_le","value":"pub fn put_i64_le(&mut Self, i64)","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":" Writes a signed 64 bit integer to `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Writes a signed 64 bit integer to `self` in little-endian byte order.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":47380,"byte_end":47453,"line_start":583,"line_end":583,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":47458,"byte_end":47461,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 8.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":47466,"byte_end":47508,"line_start":585,"line_end":585,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":47513,"byte_end":47516,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":47521,"byte_end":47535,"line_start":587,"line_end":587,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":47540,"byte_end":47543,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":47548,"byte_end":47555,"line_start":589,"line_end":589,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":47560,"byte_end":47582,"line_start":590,"line_end":590,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":47587,"byte_end":47590,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":47595,"byte_end":47620,"line_start":592,"line_end":592,"column_start":5,"column_end":30}},{"value":"/ buf.put_i64_le(0x0102030405060708);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":47625,"byte_end":47664,"line_start":593,"line_end":593,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(buf, b\"\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01\");","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":47669,"byte_end":47726,"line_start":594,"line_end":594,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":47731,"byte_end":47738,"line_start":595,"line_end":595,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":47743,"byte_end":47746,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":47751,"byte_end":47763,"line_start":597,"line_end":597,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":47768,"byte_end":47771,"line_start":598,"line_end":598,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":47776,"byte_end":47845,"line_start":599,"line_end":599,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":47850,"byte_end":47861,"line_start":600,"line_end":600,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":48494,"byte_end":48502,"line_start":623,"line_end":623,"column_start":8,"column_end":16},"name":"put_u128","qualname":"::buf::buf_mut::BufMut::put_u128","value":"pub fn put_u128(&mut Self, u128)","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":" Writes an unsigned 128 bit integer to `self` in the big-endian byte order.","sig":null,"attributes":[{"value":"/ Writes an unsigned 128 bit integer to `self` in the big-endian byte order.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":47953,"byte_end":48031,"line_start":605,"line_end":605,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":48036,"byte_end":48039,"line_start":606,"line_end":606,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 16.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":48044,"byte_end":48087,"line_start":607,"line_end":607,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":48092,"byte_end":48095,"line_start":608,"line_end":608,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":48100,"byte_end":48114,"line_start":609,"line_end":609,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":48119,"byte_end":48122,"line_start":610,"line_end":610,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":48127,"byte_end":48134,"line_start":611,"line_end":611,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":48139,"byte_end":48161,"line_start":612,"line_end":612,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":48166,"byte_end":48169,"line_start":613,"line_end":613,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":48174,"byte_end":48199,"line_start":614,"line_end":614,"column_start":5,"column_end":30}},{"value":"/ buf.put_u128(0x01020304050607080910111213141516);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":48204,"byte_end":48257,"line_start":615,"line_end":615,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(buf, b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x09\\x10\\x11\\x12\\x13\\x14\\x15\\x16\");","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":48262,"byte_end":48351,"line_start":616,"line_end":616,"column_start":5,"column_end":94}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":48356,"byte_end":48363,"line_start":617,"line_end":617,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":48368,"byte_end":48371,"line_start":618,"line_end":618,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":48376,"byte_end":48388,"line_start":619,"line_end":619,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":48393,"byte_end":48396,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":48401,"byte_end":48470,"line_start":621,"line_end":621,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":48475,"byte_end":48486,"line_start":622,"line_end":622,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":49120,"byte_end":49131,"line_start":645,"line_end":645,"column_start":8,"column_end":19},"name":"put_u128_le","qualname":"::buf::buf_mut::BufMut::put_u128_le","value":"pub fn put_u128_le(&mut Self, u128)","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":" Writes an unsigned 128 bit integer to `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Writes an unsigned 128 bit integer to `self` in little-endian byte order.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":48577,"byte_end":48654,"line_start":627,"line_end":627,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":48659,"byte_end":48662,"line_start":628,"line_end":628,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 16.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":48667,"byte_end":48710,"line_start":629,"line_end":629,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":48715,"byte_end":48718,"line_start":630,"line_end":630,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":48723,"byte_end":48737,"line_start":631,"line_end":631,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":48742,"byte_end":48745,"line_start":632,"line_end":632,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":48750,"byte_end":48757,"line_start":633,"line_end":633,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":48762,"byte_end":48784,"line_start":634,"line_end":634,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":48789,"byte_end":48792,"line_start":635,"line_end":635,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":48797,"byte_end":48822,"line_start":636,"line_end":636,"column_start":5,"column_end":30}},{"value":"/ buf.put_u128_le(0x01020304050607080910111213141516);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":48827,"byte_end":48883,"line_start":637,"line_end":637,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(buf, b\"\\x16\\x15\\x14\\x13\\x12\\x11\\x10\\x09\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01\");","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":48888,"byte_end":48977,"line_start":638,"line_end":638,"column_start":5,"column_end":94}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":48982,"byte_end":48989,"line_start":639,"line_end":639,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":48994,"byte_end":48997,"line_start":640,"line_end":640,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":49002,"byte_end":49014,"line_start":641,"line_end":641,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":49019,"byte_end":49022,"line_start":642,"line_end":642,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":49027,"byte_end":49096,"line_start":643,"line_end":643,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":49101,"byte_end":49112,"line_start":644,"line_end":644,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":49744,"byte_end":49752,"line_start":667,"line_end":667,"column_start":8,"column_end":16},"name":"put_i128","qualname":"::buf::buf_mut::BufMut::put_i128","value":"pub fn put_i128(&mut Self, i128)","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":" Writes a signed 128 bit integer to `self` in the big-endian byte order.","sig":null,"attributes":[{"value":"/ Writes a signed 128 bit integer to `self` in the big-endian byte order.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":49206,"byte_end":49281,"line_start":649,"line_end":649,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":49286,"byte_end":49289,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 16.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":49294,"byte_end":49337,"line_start":651,"line_end":651,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":49342,"byte_end":49345,"line_start":652,"line_end":652,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":49350,"byte_end":49364,"line_start":653,"line_end":653,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":49369,"byte_end":49372,"line_start":654,"line_end":654,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":49377,"byte_end":49384,"line_start":655,"line_end":655,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":49389,"byte_end":49411,"line_start":656,"line_end":656,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":49416,"byte_end":49419,"line_start":657,"line_end":657,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":49424,"byte_end":49449,"line_start":658,"line_end":658,"column_start":5,"column_end":30}},{"value":"/ buf.put_i128(0x01020304050607080910111213141516);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":49454,"byte_end":49507,"line_start":659,"line_end":659,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(buf, b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x09\\x10\\x11\\x12\\x13\\x14\\x15\\x16\");","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":49512,"byte_end":49601,"line_start":660,"line_end":660,"column_start":5,"column_end":94}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":49606,"byte_end":49613,"line_start":661,"line_end":661,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":49618,"byte_end":49621,"line_start":662,"line_end":662,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":49626,"byte_end":49638,"line_start":663,"line_end":663,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":49643,"byte_end":49646,"line_start":664,"line_end":664,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":49651,"byte_end":49720,"line_start":665,"line_end":665,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":49725,"byte_end":49736,"line_start":666,"line_end":666,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":50367,"byte_end":50378,"line_start":689,"line_end":689,"column_start":8,"column_end":19},"name":"put_i128_le","qualname":"::buf::buf_mut::BufMut::put_i128_le","value":"pub fn put_i128_le(&mut Self, i128)","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":" Writes a signed 128 bit integer to `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Writes a signed 128 bit integer to `self` in little-endian byte order.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":49827,"byte_end":49901,"line_start":671,"line_end":671,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":49906,"byte_end":49909,"line_start":672,"line_end":672,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 16.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":49914,"byte_end":49957,"line_start":673,"line_end":673,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":49962,"byte_end":49965,"line_start":674,"line_end":674,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":49970,"byte_end":49984,"line_start":675,"line_end":675,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":49989,"byte_end":49992,"line_start":676,"line_end":676,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":49997,"byte_end":50004,"line_start":677,"line_end":677,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":50009,"byte_end":50031,"line_start":678,"line_end":678,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":50036,"byte_end":50039,"line_start":679,"line_end":679,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":50044,"byte_end":50069,"line_start":680,"line_end":680,"column_start":5,"column_end":30}},{"value":"/ buf.put_i128_le(0x01020304050607080910111213141516);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":50074,"byte_end":50130,"line_start":681,"line_end":681,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(buf, b\"\\x16\\x15\\x14\\x13\\x12\\x11\\x10\\x09\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01\");","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":50135,"byte_end":50224,"line_start":682,"line_end":682,"column_start":5,"column_end":94}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":50229,"byte_end":50236,"line_start":683,"line_end":683,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":50241,"byte_end":50244,"line_start":684,"line_end":684,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":50249,"byte_end":50261,"line_start":685,"line_end":685,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":50266,"byte_end":50269,"line_start":686,"line_end":686,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":50274,"byte_end":50343,"line_start":687,"line_end":687,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":50348,"byte_end":50359,"line_start":688,"line_end":688,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":50920,"byte_end":50928,"line_start":711,"line_end":711,"column_start":8,"column_end":16},"name":"put_uint","qualname":"::buf::buf_mut::BufMut::put_uint","value":"pub fn put_uint(&mut Self, u64, usize)","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":" Writes an unsigned n-byte integer to `self` in big-endian byte order.","sig":null,"attributes":[{"value":"/ Writes an unsigned n-byte integer to `self` in big-endian byte order.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":50453,"byte_end":50526,"line_start":693,"line_end":693,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":50531,"byte_end":50534,"line_start":694,"line_end":694,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by `nbytes`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":50539,"byte_end":50588,"line_start":695,"line_end":695,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":50593,"byte_end":50596,"line_start":696,"line_end":696,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":50601,"byte_end":50615,"line_start":697,"line_end":697,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":50620,"byte_end":50623,"line_start":698,"line_end":698,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":50628,"byte_end":50635,"line_start":699,"line_end":699,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":50640,"byte_end":50662,"line_start":700,"line_end":700,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":50667,"byte_end":50670,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":50675,"byte_end":50700,"line_start":702,"line_end":702,"column_start":5,"column_end":30}},{"value":"/ buf.put_uint(0x010203, 3);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":50705,"byte_end":50735,"line_start":703,"line_end":703,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(buf, b\"\\x01\\x02\\x03\");","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":50740,"byte_end":50777,"line_start":704,"line_end":704,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":50782,"byte_end":50789,"line_start":705,"line_end":705,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":50794,"byte_end":50797,"line_start":706,"line_end":706,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":50802,"byte_end":50814,"line_start":707,"line_end":707,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":50819,"byte_end":50822,"line_start":708,"line_end":708,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":50827,"byte_end":50896,"line_start":709,"line_end":709,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":50901,"byte_end":50912,"line_start":710,"line_end":710,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":113},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":51528,"byte_end":51539,"line_start":733,"line_end":733,"column_start":8,"column_end":19},"name":"put_uint_le","qualname":"::buf::buf_mut::BufMut::put_uint_le","value":"pub fn put_uint_le(&mut Self, u64, usize)","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":" Writes an unsigned n-byte integer to `self` in the little-endian byte order.","sig":null,"attributes":[{"value":"/ Writes an unsigned n-byte integer to `self` in the little-endian byte order.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":51051,"byte_end":51131,"line_start":715,"line_end":715,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":51136,"byte_end":51139,"line_start":716,"line_end":716,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by `nbytes`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":51144,"byte_end":51193,"line_start":717,"line_end":717,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":51198,"byte_end":51201,"line_start":718,"line_end":718,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":51206,"byte_end":51220,"line_start":719,"line_end":719,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":51225,"byte_end":51228,"line_start":720,"line_end":720,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":51233,"byte_end":51240,"line_start":721,"line_end":721,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":51245,"byte_end":51267,"line_start":722,"line_end":722,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":51272,"byte_end":51275,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":51280,"byte_end":51305,"line_start":724,"line_end":724,"column_start":5,"column_end":30}},{"value":"/ buf.put_uint_le(0x010203, 3);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":51310,"byte_end":51343,"line_start":725,"line_end":725,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(buf, b\"\\x03\\x02\\x01\");","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":51348,"byte_end":51385,"line_start":726,"line_end":726,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":51390,"byte_end":51397,"line_start":727,"line_end":727,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":51402,"byte_end":51405,"line_start":728,"line_end":728,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":51410,"byte_end":51422,"line_start":729,"line_end":729,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":51427,"byte_end":51430,"line_start":730,"line_end":730,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":51435,"byte_end":51504,"line_start":731,"line_end":731,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":51509,"byte_end":51520,"line_start":732,"line_end":732,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":52103,"byte_end":52110,"line_start":755,"line_end":755,"column_start":8,"column_end":15},"name":"put_int","qualname":"::buf::buf_mut::BufMut::put_int","value":"pub fn put_int(&mut Self, i64, usize)","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":" Writes a signed n-byte integer to `self` in big-endian byte order.","sig":null,"attributes":[{"value":"/ Writes a signed n-byte integer to `self` in big-endian byte order.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":51640,"byte_end":51710,"line_start":737,"line_end":737,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":51715,"byte_end":51718,"line_start":738,"line_end":738,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by `nbytes`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":51723,"byte_end":51772,"line_start":739,"line_end":739,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":51777,"byte_end":51780,"line_start":740,"line_end":740,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":51785,"byte_end":51799,"line_start":741,"line_end":741,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":51804,"byte_end":51807,"line_start":742,"line_end":742,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":51812,"byte_end":51819,"line_start":743,"line_end":743,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":51824,"byte_end":51846,"line_start":744,"line_end":744,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":51851,"byte_end":51854,"line_start":745,"line_end":745,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":51859,"byte_end":51884,"line_start":746,"line_end":746,"column_start":5,"column_end":30}},{"value":"/ buf.put_int(0x010203, 3);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":51889,"byte_end":51918,"line_start":747,"line_end":747,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, b\"\\x01\\x02\\x03\");","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":51923,"byte_end":51960,"line_start":748,"line_end":748,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":51965,"byte_end":51972,"line_start":749,"line_end":749,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":51977,"byte_end":51980,"line_start":750,"line_end":750,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":51985,"byte_end":51997,"line_start":751,"line_end":751,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":52002,"byte_end":52005,"line_start":752,"line_end":752,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":52010,"byte_end":52079,"line_start":753,"line_end":753,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":52084,"byte_end":52095,"line_start":754,"line_end":754,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":52702,"byte_end":52712,"line_start":777,"line_end":777,"column_start":8,"column_end":18},"name":"put_int_le","qualname":"::buf::buf_mut::BufMut::put_int_le","value":"pub fn put_int_le(&mut Self, i64, usize)","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":" Writes a signed n-byte integer to `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Writes a signed n-byte integer to `self` in little-endian byte order.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":52233,"byte_end":52306,"line_start":759,"line_end":759,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":52311,"byte_end":52314,"line_start":760,"line_end":760,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by `nbytes`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":52319,"byte_end":52368,"line_start":761,"line_end":761,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":52373,"byte_end":52376,"line_start":762,"line_end":762,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":52381,"byte_end":52395,"line_start":763,"line_end":763,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":52400,"byte_end":52403,"line_start":764,"line_end":764,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":52408,"byte_end":52415,"line_start":765,"line_end":765,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":52420,"byte_end":52442,"line_start":766,"line_end":766,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":52447,"byte_end":52450,"line_start":767,"line_end":767,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":52455,"byte_end":52480,"line_start":768,"line_end":768,"column_start":5,"column_end":30}},{"value":"/ buf.put_int_le(0x010203, 3);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":52485,"byte_end":52517,"line_start":769,"line_end":769,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(buf, b\"\\x03\\x02\\x01\");","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":52522,"byte_end":52559,"line_start":770,"line_end":770,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":52564,"byte_end":52571,"line_start":771,"line_end":771,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":52576,"byte_end":52579,"line_start":772,"line_end":772,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":52584,"byte_end":52596,"line_start":773,"line_end":773,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":52601,"byte_end":52604,"line_start":774,"line_end":774,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":52609,"byte_end":52678,"line_start":775,"line_end":775,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":52683,"byte_end":52694,"line_start":776,"line_end":776,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":116},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":53313,"byte_end":53320,"line_start":800,"line_end":800,"column_start":8,"column_end":15},"name":"put_f32","qualname":"::buf::buf_mut::BufMut::put_f32","value":"pub fn put_f32(&mut Self, f32)","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":" Writes  an IEEE754 single-precision (4 bytes) floating point number to\n `self` in big-endian byte order.","sig":null,"attributes":[{"value":"/ Writes  an IEEE754 single-precision (4 bytes) floating point number to","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":52813,"byte_end":52887,"line_start":781,"line_end":781,"column_start":5,"column_end":79}},{"value":"/ `self` in big-endian byte order.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":52892,"byte_end":52928,"line_start":782,"line_end":782,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":52933,"byte_end":52936,"line_start":783,"line_end":783,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 4.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":52941,"byte_end":52983,"line_start":784,"line_end":784,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":52988,"byte_end":52991,"line_start":785,"line_end":785,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":52996,"byte_end":53010,"line_start":786,"line_end":786,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":53015,"byte_end":53018,"line_start":787,"line_end":787,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":53023,"byte_end":53030,"line_start":788,"line_end":788,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":53035,"byte_end":53057,"line_start":789,"line_end":789,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":53062,"byte_end":53065,"line_start":790,"line_end":790,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":53070,"byte_end":53095,"line_start":791,"line_end":791,"column_start":5,"column_end":30}},{"value":"/ buf.put_f32(1.2f32);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":53100,"byte_end":53124,"line_start":792,"line_end":792,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(buf, b\"\\x3F\\x99\\x99\\x9A\");","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":53129,"byte_end":53170,"line_start":793,"line_end":793,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":53175,"byte_end":53182,"line_start":794,"line_end":794,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":53187,"byte_end":53190,"line_start":795,"line_end":795,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":53195,"byte_end":53207,"line_start":796,"line_end":796,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":53212,"byte_end":53215,"line_start":797,"line_end":797,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":53220,"byte_end":53289,"line_start":798,"line_end":798,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":53294,"byte_end":53305,"line_start":799,"line_end":799,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":117},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":53894,"byte_end":53904,"line_start":823,"line_end":823,"column_start":8,"column_end":18},"name":"put_f32_le","qualname":"::buf::buf_mut::BufMut::put_f32_le","value":"pub fn put_f32_le(&mut Self, f32)","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":" Writes  an IEEE754 single-precision (4 bytes) floating point number to\n `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Writes  an IEEE754 single-precision (4 bytes) floating point number to","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":53388,"byte_end":53462,"line_start":804,"line_end":804,"column_start":5,"column_end":79}},{"value":"/ `self` in little-endian byte order.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":53467,"byte_end":53506,"line_start":805,"line_end":805,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":53511,"byte_end":53514,"line_start":806,"line_end":806,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 4.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":53519,"byte_end":53561,"line_start":807,"line_end":807,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":53566,"byte_end":53569,"line_start":808,"line_end":808,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":53574,"byte_end":53588,"line_start":809,"line_end":809,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":53593,"byte_end":53596,"line_start":810,"line_end":810,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":53601,"byte_end":53608,"line_start":811,"line_end":811,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":53613,"byte_end":53635,"line_start":812,"line_end":812,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":53640,"byte_end":53643,"line_start":813,"line_end":813,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":53648,"byte_end":53673,"line_start":814,"line_end":814,"column_start":5,"column_end":30}},{"value":"/ buf.put_f32_le(1.2f32);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":53678,"byte_end":53705,"line_start":815,"line_end":815,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(buf, b\"\\x9A\\x99\\x99\\x3F\");","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":53710,"byte_end":53751,"line_start":816,"line_end":816,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":53756,"byte_end":53763,"line_start":817,"line_end":817,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":53768,"byte_end":53771,"line_start":818,"line_end":818,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":53776,"byte_end":53788,"line_start":819,"line_end":819,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":53793,"byte_end":53796,"line_start":820,"line_end":820,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":53801,"byte_end":53870,"line_start":821,"line_end":821,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":53875,"byte_end":53886,"line_start":822,"line_end":822,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":118},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":54491,"byte_end":54498,"line_start":846,"line_end":846,"column_start":8,"column_end":15},"name":"put_f64","qualname":"::buf::buf_mut::BufMut::put_f64","value":"pub fn put_f64(&mut Self, f64)","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":" Writes  an IEEE754 double-precision (8 bytes) floating point number to\n `self` in big-endian byte order.","sig":null,"attributes":[{"value":"/ Writes  an IEEE754 double-precision (8 bytes) floating point number to","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":53975,"byte_end":54049,"line_start":827,"line_end":827,"column_start":5,"column_end":79}},{"value":"/ `self` in big-endian byte order.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":54054,"byte_end":54090,"line_start":828,"line_end":828,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":54095,"byte_end":54098,"line_start":829,"line_end":829,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 8.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":54103,"byte_end":54145,"line_start":830,"line_end":830,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":54150,"byte_end":54153,"line_start":831,"line_end":831,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":54158,"byte_end":54172,"line_start":832,"line_end":832,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":54177,"byte_end":54180,"line_start":833,"line_end":833,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":54185,"byte_end":54192,"line_start":834,"line_end":834,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":54197,"byte_end":54219,"line_start":835,"line_end":835,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":54224,"byte_end":54227,"line_start":836,"line_end":836,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":54232,"byte_end":54257,"line_start":837,"line_end":837,"column_start":5,"column_end":30}},{"value":"/ buf.put_f64(1.2f64);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":54262,"byte_end":54286,"line_start":838,"line_end":838,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(buf, b\"\\x3F\\xF3\\x33\\x33\\x33\\x33\\x33\\x33\");","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":54291,"byte_end":54348,"line_start":839,"line_end":839,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":54353,"byte_end":54360,"line_start":840,"line_end":840,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":54365,"byte_end":54368,"line_start":841,"line_end":841,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":54373,"byte_end":54385,"line_start":842,"line_end":842,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":54390,"byte_end":54393,"line_start":843,"line_end":843,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":54398,"byte_end":54467,"line_start":844,"line_end":844,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":54472,"byte_end":54483,"line_start":845,"line_end":845,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":119},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":55088,"byte_end":55098,"line_start":869,"line_end":869,"column_start":8,"column_end":18},"name":"put_f64_le","qualname":"::buf::buf_mut::BufMut::put_f64_le","value":"pub fn put_f64_le(&mut Self, f64)","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":" Writes  an IEEE754 double-precision (8 bytes) floating point number to\n `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Writes  an IEEE754 double-precision (8 bytes) floating point number to","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":54566,"byte_end":54640,"line_start":850,"line_end":850,"column_start":5,"column_end":79}},{"value":"/ `self` in little-endian byte order.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":54645,"byte_end":54684,"line_start":851,"line_end":851,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":54689,"byte_end":54692,"line_start":852,"line_end":852,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 8.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":54697,"byte_end":54739,"line_start":853,"line_end":853,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":54744,"byte_end":54747,"line_start":854,"line_end":854,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":54752,"byte_end":54766,"line_start":855,"line_end":855,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":54771,"byte_end":54774,"line_start":856,"line_end":856,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":54779,"byte_end":54786,"line_start":857,"line_end":857,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":54791,"byte_end":54813,"line_start":858,"line_end":858,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":54818,"byte_end":54821,"line_start":859,"line_end":859,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":54826,"byte_end":54851,"line_start":860,"line_end":860,"column_start":5,"column_end":30}},{"value":"/ buf.put_f64_le(1.2f64);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":54856,"byte_end":54883,"line_start":861,"line_end":861,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(buf, b\"\\x33\\x33\\x33\\x33\\x33\\x33\\xF3\\x3F\");","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":54888,"byte_end":54945,"line_start":862,"line_end":862,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":54950,"byte_end":54957,"line_start":863,"line_end":863,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":54962,"byte_end":54965,"line_start":864,"line_end":864,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":54970,"byte_end":54982,"line_start":865,"line_end":865,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":54987,"byte_end":54990,"line_start":866,"line_end":866,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":54995,"byte_end":55064,"line_start":867,"line_end":867,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":55069,"byte_end":55080,"line_start":868,"line_end":868,"column_start":5,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":138},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":59656,"byte_end":59666,"line_start":1061,"line_end":1061,"column_start":12,"column_end":22},"name":"IoSliceMut","qualname":"::buf::buf_mut::IoSliceMut","value":"","parent":null,"children":[],"decl_id":null,"docs":" A buffer type used for `readv`.","sig":null,"attributes":[{"value":"/ A buffer type used for `readv`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":59177,"byte_end":59212,"line_start":1051,"line_end":1051,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":59213,"byte_end":59216,"line_start":1052,"line_end":1052,"column_start":1,"column_end":4}},{"value":"/ This is a wrapper around an `std::io::IoSliceMut`, but does not expose","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":59217,"byte_end":59291,"line_start":1053,"line_end":1053,"column_start":1,"column_end":75}},{"value":"/ the inner bytes in a safe API, as they may point at uninitialized memory.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":59292,"byte_end":59369,"line_start":1054,"line_end":1054,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":59370,"byte_end":59373,"line_start":1055,"line_end":1055,"column_start":1,"column_end":4}},{"value":"/ This is `repr(transparent)` of the `std::io::IoSliceMut`, so it is valid to","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":59374,"byte_end":59453,"line_start":1056,"line_end":1056,"column_start":1,"column_end":80}},{"value":"/ transmute them. However, as the memory might be uninitialized, care must be","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":59454,"byte_end":59533,"line_start":1057,"line_end":1057,"column_start":1,"column_end":80}},{"value":"/ taken to not *read* the internal bytes, only *write* to them.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":59534,"byte_end":59599,"line_start":1058,"line_end":1058,"column_start":1,"column_end":66}},{"value":"repr(transparent)","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":59600,"byte_end":59620,"line_start":1059,"line_end":1059,"column_start":1,"column_end":21}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":59621,"byte_end":59644,"line_start":1060,"line_end":1060,"column_start":1,"column_end":24}}]},{"kind":"Mod","id":{"krate":0,"index":150},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ext","qualname":"::buf::ext","value":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","parent":null,"children":[{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":194},{"krate":0,"index":213},{"krate":0,"index":233},{"krate":0,"index":250},{"krate":0,"index":266},{"krate":0,"index":267},{"krate":0,"index":268},{"krate":0,"index":269},{"krate":0,"index":270},{"krate":0,"index":271},{"krate":0,"index":272},{"krate":0,"index":277},{"krate":0,"index":279},{"krate":0,"index":284}],"decl_id":null,"docs":" Extra utilities for `Buf` and `BufMut` types.\n","sig":null,"attributes":[{"value":"/ Extra utilities for `Buf` and `BufMut` types.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":60516,"byte_end":60565,"line_start":1,"line_end":1,"column_start":1,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":935},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/chain.rs","byte_start":66256,"byte_end":66261,"line_start":36,"line_end":36,"column_start":12,"column_end":17},"name":"Chain","qualname":"::buf::ext::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":938},{"krate":0,"index":939}],"decl_id":null,"docs":" A `Chain` sequences two buffers.","sig":null,"attributes":[{"value":"/ A `Chain` sequences two buffers.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/chain.rs","byte_start":65479,"byte_end":65515,"line_start":11,"line_end":11,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/chain.rs","byte_start":65516,"byte_end":65519,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ `Chain` is an adapter that links two underlying buffers and provides a","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/chain.rs","byte_start":65520,"byte_end":65594,"line_start":13,"line_end":13,"column_start":1,"column_end":75}},{"value":"/ continuous view across both buffers. It is able to sequence either immutable","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/chain.rs","byte_start":65595,"byte_end":65675,"line_start":14,"line_end":14,"column_start":1,"column_end":81}},{"value":"/ buffers ([`Buf`] values) or mutable buffers ([`BufMut`] values).","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/chain.rs","byte_start":65676,"byte_end":65744,"line_start":15,"line_end":15,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/chain.rs","byte_start":65745,"byte_end":65748,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This struct is generally created by calling [`Buf::chain`]. Please see that","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/chain.rs","byte_start":65749,"byte_end":65828,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"/ function's documentation for more detail.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/chain.rs","byte_start":65829,"byte_end":65874,"line_start":18,"line_end":18,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/chain.rs","byte_start":65875,"byte_end":65878,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/chain.rs","byte_start":65879,"byte_end":65893,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/chain.rs","byte_start":65894,"byte_end":65897,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/chain.rs","byte_start":65898,"byte_end":65905,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ use bytes::{Bytes, Buf, buf::BufExt};","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/chain.rs","byte_start":65906,"byte_end":65947,"line_start":23,"line_end":23,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/chain.rs","byte_start":65948,"byte_end":65951,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ let mut buf = (&b\"hello \"[..])","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/chain.rs","byte_start":65952,"byte_end":65986,"line_start":25,"line_end":25,"column_start":1,"column_end":35}},{"value":"/     .chain(&b\"world\"[..]);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/chain.rs","byte_start":65987,"byte_end":66017,"line_start":26,"line_end":26,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/chain.rs","byte_start":66018,"byte_end":66021,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ let full: Bytes = buf.to_bytes();","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/chain.rs","byte_start":66022,"byte_end":66059,"line_start":28,"line_end":28,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(full[..], b\"hello world\"[..]);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/chain.rs","byte_start":66060,"byte_end":66105,"line_start":29,"line_end":29,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/chain.rs","byte_start":66106,"byte_end":66113,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/chain.rs","byte_start":66114,"byte_end":66117,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ [`Buf::chain`]: trait.Buf.html#method.chain","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/chain.rs","byte_start":66118,"byte_end":66165,"line_start":32,"line_end":32,"column_start":1,"column_end":48}},{"value":"/ [`Buf`]: trait.Buf.html","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/chain.rs","byte_start":66166,"byte_end":66193,"line_start":33,"line_end":33,"column_start":1,"column_end":28}},{"value":"/ [`BufMut`]: trait.BufMut.html","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/chain.rs","byte_start":66194,"byte_end":66227,"line_start":34,"line_end":34,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/chain.rs","byte_start":66391,"byte_end":66394,"line_start":43,"line_end":43,"column_start":12,"column_end":15},"name":"new","qualname":"<Chain<T, U>>::new","value":"pub fn new(T, U) -> Chain<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Chain` sequencing the provided values.\n","sig":null,"attributes":[{"value":"/ Creates a new `Chain` sequencing the provided values.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/chain.rs","byte_start":66322,"byte_end":66379,"line_start":42,"line_end":42,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":167},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/chain.rs","byte_start":66785,"byte_end":66794,"line_start":62,"line_end":62,"column_start":12,"column_end":21},"name":"first_ref","qualname":"<Chain<T, U>>::first_ref","value":"pub fn first_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the first underlying `Buf`.","sig":null,"attributes":[{"value":"/ Gets a reference to the first underlying `Buf`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/chain.rs","byte_start":66491,"byte_end":66542,"line_start":50,"line_end":50,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/chain.rs","byte_start":66547,"byte_end":66550,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/chain.rs","byte_start":66555,"byte_end":66569,"line_start":52,"line_end":52,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/chain.rs","byte_start":66574,"byte_end":66577,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/chain.rs","byte_start":66582,"byte_end":66589,"line_start":54,"line_end":54,"column_start":5,"column_end":12}},{"value":"/ use bytes::buf::BufExt;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/chain.rs","byte_start":66594,"byte_end":66621,"line_start":55,"line_end":55,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/chain.rs","byte_start":66626,"byte_end":66629,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ let buf = (&b\"hello\"[..])","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/chain.rs","byte_start":66634,"byte_end":66663,"line_start":57,"line_end":57,"column_start":5,"column_end":34}},{"value":"/     .chain(&b\"world\"[..]);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/chain.rs","byte_start":66668,"byte_end":66698,"line_start":58,"line_end":58,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/chain.rs","byte_start":66703,"byte_end":66706,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buf.first_ref()[..], b\"hello\"[..]);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/chain.rs","byte_start":66711,"byte_end":66761,"line_start":60,"line_end":60,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/chain.rs","byte_start":66766,"byte_end":66773,"line_start":61,"line_end":61,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":168},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/chain.rs","byte_start":67218,"byte_end":67227,"line_start":81,"line_end":81,"column_start":12,"column_end":21},"name":"first_mut","qualname":"<Chain<T, U>>::first_mut","value":"pub fn first_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the first underlying `Buf`.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the first underlying `Buf`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/chain.rs","byte_start":66837,"byte_end":66896,"line_start":66,"line_end":66,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/chain.rs","byte_start":66901,"byte_end":66904,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/chain.rs","byte_start":66909,"byte_end":66923,"line_start":68,"line_end":68,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/chain.rs","byte_start":66928,"byte_end":66931,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/chain.rs","byte_start":66936,"byte_end":66943,"line_start":70,"line_end":70,"column_start":5,"column_end":12}},{"value":"/ use bytes::{Buf, buf::BufExt};","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/chain.rs","byte_start":66948,"byte_end":66982,"line_start":71,"line_end":71,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/chain.rs","byte_start":66987,"byte_end":66990,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ let mut buf = (&b\"hello\"[..])","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/chain.rs","byte_start":66995,"byte_end":67028,"line_start":73,"line_end":73,"column_start":5,"column_end":38}},{"value":"/     .chain(&b\"world\"[..]);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/chain.rs","byte_start":67033,"byte_end":67063,"line_start":74,"line_end":74,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/chain.rs","byte_start":67068,"byte_end":67071,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ buf.first_mut().advance(1);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/chain.rs","byte_start":67076,"byte_end":67107,"line_start":76,"line_end":76,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/chain.rs","byte_start":67112,"byte_end":67115,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ let full = buf.to_bytes();","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/chain.rs","byte_start":67120,"byte_end":67150,"line_start":78,"line_end":78,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(full, b\"elloworld\"[..]);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/chain.rs","byte_start":67155,"byte_end":67194,"line_start":79,"line_end":79,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/chain.rs","byte_start":67199,"byte_end":67206,"line_start":80,"line_end":80,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":169},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/chain.rs","byte_start":67574,"byte_end":67582,"line_start":97,"line_end":97,"column_start":12,"column_end":20},"name":"last_ref","qualname":"<Chain<T, U>>::last_ref","value":"pub fn last_ref(&Self) -> &U","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the last underlying `Buf`.","sig":null,"attributes":[{"value":"/ Gets a reference to the last underlying `Buf`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/chain.rs","byte_start":67282,"byte_end":67332,"line_start":85,"line_end":85,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/chain.rs","byte_start":67337,"byte_end":67340,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/chain.rs","byte_start":67345,"byte_end":67359,"line_start":87,"line_end":87,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/chain.rs","byte_start":67364,"byte_end":67367,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/chain.rs","byte_start":67372,"byte_end":67379,"line_start":89,"line_end":89,"column_start":5,"column_end":12}},{"value":"/ use bytes::buf::BufExt;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/chain.rs","byte_start":67384,"byte_end":67411,"line_start":90,"line_end":90,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/chain.rs","byte_start":67416,"byte_end":67419,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ let buf = (&b\"hello\"[..])","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/chain.rs","byte_start":67424,"byte_end":67453,"line_start":92,"line_end":92,"column_start":5,"column_end":34}},{"value":"/     .chain(&b\"world\"[..]);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/chain.rs","byte_start":67458,"byte_end":67488,"line_start":93,"line_end":93,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/chain.rs","byte_start":67493,"byte_end":67496,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buf.last_ref()[..], b\"world\"[..]);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/chain.rs","byte_start":67501,"byte_end":67550,"line_start":95,"line_end":95,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/chain.rs","byte_start":67555,"byte_end":67562,"line_start":96,"line_end":96,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":170},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/chain.rs","byte_start":68006,"byte_end":68014,"line_start":116,"line_end":116,"column_start":12,"column_end":20},"name":"last_mut","qualname":"<Chain<T, U>>::last_mut","value":"pub fn last_mut(&mut Self) -> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the last underlying `Buf`.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the last underlying `Buf`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/chain.rs","byte_start":67625,"byte_end":67683,"line_start":101,"line_end":101,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/chain.rs","byte_start":67688,"byte_end":67691,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/chain.rs","byte_start":67696,"byte_end":67710,"line_start":103,"line_end":103,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/chain.rs","byte_start":67715,"byte_end":67718,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/chain.rs","byte_start":67723,"byte_end":67730,"line_start":105,"line_end":105,"column_start":5,"column_end":12}},{"value":"/ use bytes::{Buf, buf::BufExt};","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/chain.rs","byte_start":67735,"byte_end":67769,"line_start":106,"line_end":106,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/chain.rs","byte_start":67774,"byte_end":67777,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ let mut buf = (&b\"hello \"[..])","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/chain.rs","byte_start":67782,"byte_end":67816,"line_start":108,"line_end":108,"column_start":5,"column_end":39}},{"value":"/     .chain(&b\"world\"[..]);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/chain.rs","byte_start":67821,"byte_end":67851,"line_start":109,"line_end":109,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/chain.rs","byte_start":67856,"byte_end":67859,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ buf.last_mut().advance(1);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/chain.rs","byte_start":67864,"byte_end":67894,"line_start":111,"line_end":111,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/chain.rs","byte_start":67899,"byte_end":67902,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ let full = buf.to_bytes();","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/chain.rs","byte_start":67907,"byte_end":67937,"line_start":113,"line_end":113,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(full, b\"hello orld\"[..]);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/chain.rs","byte_start":67942,"byte_end":67982,"line_start":114,"line_end":114,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/chain.rs","byte_start":67987,"byte_end":67994,"line_start":115,"line_end":115,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/chain.rs","byte_start":68455,"byte_end":68465,"line_start":134,"line_end":134,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Chain<T, U>>::into_inner","value":"pub fn into_inner(Self) -> (T, U)","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `Chain`, returning the underlying values.","sig":null,"attributes":[{"value":"/ Consumes this `Chain`, returning the underlying values.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/chain.rs","byte_start":68069,"byte_end":68128,"line_start":120,"line_end":120,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/chain.rs","byte_start":68133,"byte_end":68136,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/chain.rs","byte_start":68141,"byte_end":68155,"line_start":122,"line_end":122,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/chain.rs","byte_start":68160,"byte_end":68163,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/chain.rs","byte_start":68168,"byte_end":68175,"line_start":124,"line_end":124,"column_start":5,"column_end":12}},{"value":"/ use bytes::buf::BufExt;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/chain.rs","byte_start":68180,"byte_end":68207,"line_start":125,"line_end":125,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/chain.rs","byte_start":68212,"byte_end":68215,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ let chain = (&b\"hello\"[..])","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/chain.rs","byte_start":68220,"byte_end":68251,"line_start":127,"line_end":127,"column_start":5,"column_end":36}},{"value":"/     .chain(&b\"world\"[..]);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/chain.rs","byte_start":68256,"byte_end":68286,"line_start":128,"line_end":128,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/chain.rs","byte_start":68291,"byte_end":68294,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ let (first, last) = chain.into_inner();","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/chain.rs","byte_start":68299,"byte_end":68342,"line_start":130,"line_end":130,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(first[..], b\"hello\"[..]);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/chain.rs","byte_start":68347,"byte_end":68387,"line_start":131,"line_end":131,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(last[..], b\"world\"[..]);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/chain.rs","byte_start":68392,"byte_end":68431,"line_start":132,"line_end":132,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/chain.rs","byte_start":68436,"byte_end":68443,"line_start":133,"line_end":133,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":944},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/limit.rs","byte_start":70821,"byte_end":70826,"line_start":8,"line_end":8,"column_start":12,"column_end":17},"name":"Limit","qualname":"::buf::ext::limit::Limit","value":"Limit {  }","parent":null,"children":[{"krate":0,"index":946},{"krate":0,"index":947}],"decl_id":null,"docs":" A `BufMut` adapter which limits the amount of bytes that can be written\n to an underlying buffer.\n","sig":null,"attributes":[{"value":"/ A `BufMut` adapter which limits the amount of bytes that can be written","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/limit.rs","byte_start":70688,"byte_end":70763,"line_start":5,"line_end":5,"column_start":1,"column_end":76}},{"value":"/ to an underlying buffer.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/limit.rs","byte_start":70764,"byte_end":70792,"line_start":6,"line_end":6,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":203},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/limit.rs","byte_start":71070,"byte_end":71080,"line_start":22,"line_end":22,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Limit<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `Limit`, returning the underlying value.\n","sig":null,"attributes":[{"value":"/ Consumes this `Limit`, returning the underlying value.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/limit.rs","byte_start":71000,"byte_end":71058,"line_start":21,"line_end":21,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":204},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/limit.rs","byte_start":71264,"byte_end":71271,"line_start":29,"line_end":29,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Limit<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying `BufMut`.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying `BufMut`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/limit.rs","byte_start":71124,"byte_end":71172,"line_start":26,"line_end":26,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/limit.rs","byte_start":71177,"byte_end":71180,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly write to the underlying `BufMut`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/limit.rs","byte_start":71185,"byte_end":71252,"line_start":28,"line_end":28,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":205},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/limit.rs","byte_start":71466,"byte_end":71473,"line_start":36,"line_end":36,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Limit<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying `BufMut`.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying `BufMut`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/limit.rs","byte_start":71318,"byte_end":71374,"line_start":33,"line_end":33,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/limit.rs","byte_start":71379,"byte_end":71382,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly write to the underlying `BufMut`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/limit.rs","byte_start":71387,"byte_end":71454,"line_start":35,"line_end":35,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/limit.rs","byte_start":71769,"byte_end":71774,"line_start":46,"line_end":46,"column_start":12,"column_end":17},"name":"limit","qualname":"<Limit<T>>::limit","value":"pub fn limit(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum number of bytes that can be written","sig":null,"attributes":[{"value":"/ Returns the maximum number of bytes that can be written","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/limit.rs","byte_start":71532,"byte_end":71591,"line_start":40,"line_end":40,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/limit.rs","byte_start":71596,"byte_end":71599,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/limit.rs","byte_start":71604,"byte_end":71614,"line_start":42,"line_end":42,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/limit.rs","byte_start":71619,"byte_end":71622,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ If the inner `BufMut` has fewer bytes than indicated by this method then","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/limit.rs","byte_start":71627,"byte_end":71703,"line_start":44,"line_end":44,"column_start":5,"column_end":81}},{"value":"/ that is the actual number of available bytes.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/limit.rs","byte_start":71708,"byte_end":71757,"line_start":45,"line_end":45,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/limit.rs","byte_start":72039,"byte_end":72048,"line_start":56,"line_end":56,"column_start":12,"column_end":21},"name":"set_limit","qualname":"<Limit<T>>::set_limit","value":"pub fn set_limit(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Sets the maximum number of bytes that can be written.","sig":null,"attributes":[{"value":"/ Sets the maximum number of bytes that can be written.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/limit.rs","byte_start":71823,"byte_end":71880,"line_start":50,"line_end":50,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/limit.rs","byte_start":71885,"byte_end":71888,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/limit.rs","byte_start":71893,"byte_end":71903,"line_start":52,"line_end":52,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/limit.rs","byte_start":71908,"byte_end":71911,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ If the inner `BufMut` has fewer bytes than `lim` then that is the actual","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/limit.rs","byte_start":71916,"byte_end":71992,"line_start":54,"line_end":54,"column_start":5,"column_end":81}},{"value":"/ number of available bytes.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/limit.rs","byte_start":71997,"byte_end":72027,"line_start":55,"line_end":55,"column_start":5,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":951},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/reader.rs","byte_start":72895,"byte_end":72901,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"Reader","qualname":"::buf::ext::reader::Reader","value":"Reader {  }","parent":null,"children":[{"krate":0,"index":953}],"decl_id":null,"docs":" A `Buf` adapter which implements `io::Read` for the inner value.","sig":null,"attributes":[{"value":"/ A `Buf` adapter which implements `io::Read` for the inner value.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/reader.rs","byte_start":72635,"byte_end":72703,"line_start":5,"line_end":5,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/reader.rs","byte_start":72704,"byte_end":72707,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This struct is generally created by calling `reader()` on `Buf`. See","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/reader.rs","byte_start":72708,"byte_end":72780,"line_start":7,"line_end":7,"column_start":1,"column_end":73}},{"value":"/ documentation of [`reader()`](trait.Buf.html#method.reader) for more","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/reader.rs","byte_start":72781,"byte_end":72853,"line_start":8,"line_end":8,"column_start":1,"column_end":73}},{"value":"/ details.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/reader.rs","byte_start":72854,"byte_end":72866,"line_start":9,"line_end":9,"column_start":1,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":223},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/reader.rs","byte_start":73354,"byte_end":73361,"line_start":33,"line_end":33,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Reader<B>>::get_ref","value":"pub fn get_ref(&Self) -> &B","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying `Buf`.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying `Buf`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/reader.rs","byte_start":73010,"byte_end":73055,"line_start":20,"line_end":20,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/reader.rs","byte_start":73060,"byte_end":73063,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying `Buf`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/reader.rs","byte_start":73068,"byte_end":73133,"line_start":22,"line_end":22,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/reader.rs","byte_start":73138,"byte_end":73141,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/reader.rs","byte_start":73146,"byte_end":73160,"line_start":24,"line_end":24,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/reader.rs","byte_start":73165,"byte_end":73168,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/reader.rs","byte_start":73173,"byte_end":73184,"line_start":26,"line_end":26,"column_start":5,"column_end":16}},{"value":"/ use bytes::buf::BufExt;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/reader.rs","byte_start":73189,"byte_end":73216,"line_start":27,"line_end":27,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/reader.rs","byte_start":73221,"byte_end":73224,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ let mut buf = b\"hello world\".reader();","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/reader.rs","byte_start":73229,"byte_end":73271,"line_start":29,"line_end":29,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/reader.rs","byte_start":73276,"byte_end":73279,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(b\"hello world\", buf.get_ref());","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/reader.rs","byte_start":73284,"byte_end":73330,"line_start":31,"line_end":31,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/reader.rs","byte_start":73335,"byte_end":73342,"line_start":32,"line_end":32,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/reader.rs","byte_start":73549,"byte_end":73556,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Reader<B>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut B","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying `Buf`.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying `Buf`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/reader.rs","byte_start":73406,"byte_end":73459,"line_start":37,"line_end":37,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/reader.rs","byte_start":73464,"byte_end":73467,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying `Buf`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/reader.rs","byte_start":73472,"byte_end":73537,"line_start":39,"line_end":39,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/reader.rs","byte_start":74031,"byte_end":74041,"line_start":60,"line_end":60,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Reader<B>>::into_inner","value":"pub fn into_inner(Self) -> B","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `Reader`, returning the underlying value.","sig":null,"attributes":[{"value":"/ Consumes this `Reader`, returning the underlying value.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/reader.rs","byte_start":73613,"byte_end":73672,"line_start":44,"line_end":44,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/reader.rs","byte_start":73677,"byte_end":73680,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/reader.rs","byte_start":73685,"byte_end":73699,"line_start":46,"line_end":46,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/reader.rs","byte_start":73704,"byte_end":73707,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/reader.rs","byte_start":73712,"byte_end":73723,"line_start":48,"line_end":48,"column_start":5,"column_end":16}},{"value":"/ use bytes::{Buf, buf::BufExt};","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/reader.rs","byte_start":73728,"byte_end":73762,"line_start":49,"line_end":49,"column_start":5,"column_end":39}},{"value":"/ use std::io;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/reader.rs","byte_start":73767,"byte_end":73783,"line_start":50,"line_end":50,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/reader.rs","byte_start":73788,"byte_end":73791,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ let mut buf = b\"hello world\".reader();","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/reader.rs","byte_start":73796,"byte_end":73838,"line_start":52,"line_end":52,"column_start":5,"column_end":47}},{"value":"/ let mut dst = vec![];","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/reader.rs","byte_start":73843,"byte_end":73868,"line_start":53,"line_end":53,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/reader.rs","byte_start":73873,"byte_end":73876,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ io::copy(&mut buf, &mut dst).unwrap();","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/reader.rs","byte_start":73881,"byte_end":73923,"line_start":55,"line_end":55,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/reader.rs","byte_start":73928,"byte_end":73931,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ let buf = buf.into_inner();","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/reader.rs","byte_start":73936,"byte_end":73967,"line_start":57,"line_end":57,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(0, buf.remaining());","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/reader.rs","byte_start":73972,"byte_end":74007,"line_start":58,"line_end":58,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/reader.rs","byte_start":74012,"byte_end":74019,"line_start":59,"line_end":59,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":957},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/take.rs","byte_start":74839,"byte_end":74843,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Take","qualname":"::buf::ext::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":959},{"krate":0,"index":960}],"decl_id":null,"docs":" A `Buf` adapter which limits the bytes read from an underlying buffer.","sig":null,"attributes":[{"value":"/ A `Buf` adapter which limits the bytes read from an underlying buffer.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/take.rs","byte_start":74583,"byte_end":74657,"line_start":5,"line_end":5,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/take.rs","byte_start":74658,"byte_end":74661,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This struct is generally created by calling `take()` on `Buf`. See","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/take.rs","byte_start":74662,"byte_end":74732,"line_start":7,"line_end":7,"column_start":1,"column_end":71}},{"value":"/ documentation of [`take()`](trait.Buf.html#method.take) for more details.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/take.rs","byte_start":74733,"byte_end":74810,"line_start":8,"line_end":8,"column_start":1,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":240},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/take.rs","byte_start":75490,"byte_end":75500,"line_start":42,"line_end":42,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Take<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `Take`, returning the underlying value.","sig":null,"attributes":[{"value":"/ Consumes this `Take`, returning the underlying value.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/take.rs","byte_start":75007,"byte_end":75064,"line_start":23,"line_end":23,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/take.rs","byte_start":75069,"byte_end":75072,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/take.rs","byte_start":75077,"byte_end":75091,"line_start":25,"line_end":25,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/take.rs","byte_start":75096,"byte_end":75099,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/take.rs","byte_start":75104,"byte_end":75115,"line_start":27,"line_end":27,"column_start":5,"column_end":16}},{"value":"/ use bytes::buf::{Buf, BufMut, BufExt};","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/take.rs","byte_start":75120,"byte_end":75162,"line_start":28,"line_end":28,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/take.rs","byte_start":75167,"byte_end":75170,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ let mut buf = b\"hello world\".take(2);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/take.rs","byte_start":75175,"byte_end":75216,"line_start":30,"line_end":30,"column_start":5,"column_end":46}},{"value":"/ let mut dst = vec![];","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/take.rs","byte_start":75221,"byte_end":75246,"line_start":31,"line_end":31,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/take.rs","byte_start":75251,"byte_end":75254,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ dst.put(&mut buf);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/take.rs","byte_start":75259,"byte_end":75281,"line_start":33,"line_end":33,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(*dst, b\"he\"[..]);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/take.rs","byte_start":75286,"byte_end":75318,"line_start":34,"line_end":34,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/take.rs","byte_start":75323,"byte_end":75326,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ let mut buf = buf.into_inner();","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/take.rs","byte_start":75331,"byte_end":75366,"line_start":36,"line_end":36,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/take.rs","byte_start":75371,"byte_end":75374,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ dst.clear();","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/take.rs","byte_start":75379,"byte_end":75395,"line_start":38,"line_end":38,"column_start":5,"column_end":21}},{"value":"/ dst.put(&mut buf);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/take.rs","byte_start":75400,"byte_end":75422,"line_start":39,"line_end":39,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(*dst, b\"llo world\"[..]);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/take.rs","byte_start":75427,"byte_end":75466,"line_start":40,"line_end":40,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/take.rs","byte_start":75471,"byte_end":75478,"line_start":41,"line_end":41,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":241},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/take.rs","byte_start":75894,"byte_end":75901,"line_start":59,"line_end":59,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Take<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying `Buf`.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying `Buf`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/take.rs","byte_start":75544,"byte_end":75589,"line_start":46,"line_end":46,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/take.rs","byte_start":75594,"byte_end":75597,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying `Buf`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/take.rs","byte_start":75602,"byte_end":75667,"line_start":48,"line_end":48,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/take.rs","byte_start":75672,"byte_end":75675,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/take.rs","byte_start":75680,"byte_end":75694,"line_start":50,"line_end":50,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/take.rs","byte_start":75699,"byte_end":75702,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/take.rs","byte_start":75707,"byte_end":75718,"line_start":52,"line_end":52,"column_start":5,"column_end":16}},{"value":"/ use bytes::{Buf, buf::BufExt};","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/take.rs","byte_start":75723,"byte_end":75757,"line_start":53,"line_end":53,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/take.rs","byte_start":75762,"byte_end":75765,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ let mut buf = b\"hello world\".take(2);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/take.rs","byte_start":75770,"byte_end":75811,"line_start":55,"line_end":55,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/take.rs","byte_start":75816,"byte_end":75819,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(11, buf.get_ref().remaining());","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/take.rs","byte_start":75824,"byte_end":75870,"line_start":57,"line_end":57,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/take.rs","byte_start":75875,"byte_end":75882,"line_start":58,"line_end":58,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":242},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/take.rs","byte_start":76399,"byte_end":76406,"line_start":80,"line_end":80,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Take<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying `Buf`.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying `Buf`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/take.rs","byte_start":75948,"byte_end":76001,"line_start":63,"line_end":63,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/take.rs","byte_start":76006,"byte_end":76009,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying `Buf`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/take.rs","byte_start":76014,"byte_end":76079,"line_start":65,"line_end":65,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/take.rs","byte_start":76084,"byte_end":76087,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/take.rs","byte_start":76092,"byte_end":76106,"line_start":67,"line_end":67,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/take.rs","byte_start":76111,"byte_end":76114,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/take.rs","byte_start":76119,"byte_end":76130,"line_start":69,"line_end":69,"column_start":5,"column_end":16}},{"value":"/ use bytes::{Buf, BufMut, buf::BufExt};","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/take.rs","byte_start":76135,"byte_end":76177,"line_start":70,"line_end":70,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/take.rs","byte_start":76182,"byte_end":76185,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ let mut buf = b\"hello world\".take(2);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/take.rs","byte_start":76190,"byte_end":76231,"line_start":72,"line_end":72,"column_start":5,"column_end":46}},{"value":"/ let mut dst = vec![];","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/take.rs","byte_start":76236,"byte_end":76261,"line_start":73,"line_end":73,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/take.rs","byte_start":76266,"byte_end":76269,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ buf.get_mut().advance(2);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/take.rs","byte_start":76274,"byte_end":76303,"line_start":75,"line_end":75,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/take.rs","byte_start":76308,"byte_end":76311,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ dst.put(&mut buf);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/take.rs","byte_start":76316,"byte_end":76338,"line_start":77,"line_end":77,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(*dst, b\"ll\"[..]);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/take.rs","byte_start":76343,"byte_end":76375,"line_start":78,"line_end":78,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/take.rs","byte_start":76380,"byte_end":76387,"line_start":79,"line_end":79,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":243},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/take.rs","byte_start":76973,"byte_end":76978,"line_start":102,"line_end":102,"column_start":12,"column_end":17},"name":"limit","qualname":"<Take<T>>::limit","value":"pub fn limit(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum number of bytes that can be read.","sig":null,"attributes":[{"value":"/ Returns the maximum number of bytes that can be read.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/take.rs","byte_start":76465,"byte_end":76522,"line_start":84,"line_end":84,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/take.rs","byte_start":76527,"byte_end":76530,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/take.rs","byte_start":76535,"byte_end":76545,"line_start":86,"line_end":86,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/take.rs","byte_start":76550,"byte_end":76553,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ If the inner `Buf` has fewer bytes than indicated by this method then","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/take.rs","byte_start":76558,"byte_end":76631,"line_start":88,"line_end":88,"column_start":5,"column_end":78}},{"value":"/ that is the actual number of available bytes.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/take.rs","byte_start":76636,"byte_end":76685,"line_start":89,"line_end":89,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/take.rs","byte_start":76690,"byte_end":76693,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/take.rs","byte_start":76698,"byte_end":76712,"line_start":91,"line_end":91,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/take.rs","byte_start":76717,"byte_end":76720,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/take.rs","byte_start":76725,"byte_end":76736,"line_start":93,"line_end":93,"column_start":5,"column_end":16}},{"value":"/ use bytes::{Buf, buf::BufExt};","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/take.rs","byte_start":76741,"byte_end":76775,"line_start":94,"line_end":94,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/take.rs","byte_start":76780,"byte_end":76783,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ let mut buf = b\"hello world\".take(2);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/take.rs","byte_start":76788,"byte_end":76829,"line_start":96,"line_end":96,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/take.rs","byte_start":76834,"byte_end":76837,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(2, buf.limit());","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/take.rs","byte_start":76842,"byte_end":76873,"line_start":98,"line_end":98,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(b'h', buf.get_u8());","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/take.rs","byte_start":76878,"byte_end":76913,"line_start":99,"line_end":99,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(1, buf.limit());","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/take.rs","byte_start":76918,"byte_end":76949,"line_start":100,"line_end":100,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/take.rs","byte_start":76954,"byte_end":76961,"line_start":101,"line_end":101,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":244},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/take.rs","byte_start":77631,"byte_end":77640,"line_start":130,"line_end":130,"column_start":12,"column_end":21},"name":"set_limit","qualname":"<Take<T>>::set_limit","value":"pub fn set_limit(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Sets the maximum number of bytes that can be read.","sig":null,"attributes":[{"value":"/ Sets the maximum number of bytes that can be read.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/take.rs","byte_start":77027,"byte_end":77081,"line_start":106,"line_end":106,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/take.rs","byte_start":77086,"byte_end":77089,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/take.rs","byte_start":77094,"byte_end":77104,"line_start":108,"line_end":108,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/take.rs","byte_start":77109,"byte_end":77112,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ If the inner `Buf` has fewer bytes than `lim` then that is the actual","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/take.rs","byte_start":77117,"byte_end":77190,"line_start":110,"line_end":110,"column_start":5,"column_end":78}},{"value":"/ number of available bytes.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/take.rs","byte_start":77195,"byte_end":77225,"line_start":111,"line_end":111,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/take.rs","byte_start":77230,"byte_end":77233,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/take.rs","byte_start":77238,"byte_end":77252,"line_start":113,"line_end":113,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/take.rs","byte_start":77257,"byte_end":77260,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/take.rs","byte_start":77265,"byte_end":77276,"line_start":115,"line_end":115,"column_start":5,"column_end":16}},{"value":"/ use bytes::{Buf, BufMut, buf::BufExt};","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/take.rs","byte_start":77281,"byte_end":77323,"line_start":116,"line_end":116,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/take.rs","byte_start":77328,"byte_end":77331,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ let mut buf = b\"hello world\".take(2);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/take.rs","byte_start":77336,"byte_end":77377,"line_start":118,"line_end":118,"column_start":5,"column_end":46}},{"value":"/ let mut dst = vec![];","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/take.rs","byte_start":77382,"byte_end":77407,"line_start":119,"line_end":119,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/take.rs","byte_start":77412,"byte_end":77415,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ dst.put(&mut buf);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/take.rs","byte_start":77420,"byte_end":77442,"line_start":121,"line_end":121,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(*dst, b\"he\"[..]);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/take.rs","byte_start":77447,"byte_end":77479,"line_start":122,"line_end":122,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/take.rs","byte_start":77484,"byte_end":77487,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ dst.clear();","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/take.rs","byte_start":77492,"byte_end":77508,"line_start":124,"line_end":124,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/take.rs","byte_start":77513,"byte_end":77516,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ buf.set_limit(3);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/take.rs","byte_start":77521,"byte_end":77542,"line_start":126,"line_end":126,"column_start":5,"column_end":26}},{"value":"/ dst.put(&mut buf);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/take.rs","byte_start":77547,"byte_end":77569,"line_start":127,"line_end":127,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(*dst, b\"llo\"[..]);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/take.rs","byte_start":77574,"byte_end":77607,"line_start":128,"line_end":128,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/take.rs","byte_start":77612,"byte_end":77619,"line_start":129,"line_end":129,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":964},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/writer.rs","byte_start":78412,"byte_end":78418,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"Writer","qualname":"::buf::ext::writer::Writer","value":"Writer {  }","parent":null,"children":[{"krate":0,"index":966}],"decl_id":null,"docs":" A `BufMut` adapter which implements `io::Write` for the inner value.","sig":null,"attributes":[{"value":"/ A `BufMut` adapter which implements `io::Write` for the inner value.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/writer.rs","byte_start":78142,"byte_end":78214,"line_start":5,"line_end":5,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/writer.rs","byte_start":78215,"byte_end":78218,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This struct is generally created by calling `writer()` on `BufMut`. See","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/writer.rs","byte_start":78219,"byte_end":78294,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ documentation of [`writer()`](trait.BufMut.html#method.writer) for more","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/writer.rs","byte_start":78295,"byte_end":78370,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/ details.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/writer.rs","byte_start":78371,"byte_end":78383,"line_start":9,"line_end":9,"column_start":1,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":259},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/writer.rs","byte_start":78893,"byte_end":78900,"line_start":33,"line_end":33,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Writer<B>>::get_ref","value":"pub fn get_ref(&Self) -> &B","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying `BufMut`.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying `BufMut`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/writer.rs","byte_start":78530,"byte_end":78578,"line_start":20,"line_end":20,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/writer.rs","byte_start":78583,"byte_end":78586,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly write to the underlying `BufMut`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/writer.rs","byte_start":78591,"byte_end":78658,"line_start":22,"line_end":22,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/writer.rs","byte_start":78663,"byte_end":78666,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/writer.rs","byte_start":78671,"byte_end":78685,"line_start":24,"line_end":24,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/writer.rs","byte_start":78690,"byte_end":78693,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/writer.rs","byte_start":78698,"byte_end":78709,"line_start":26,"line_end":26,"column_start":5,"column_end":16}},{"value":"/ use bytes::buf::BufMutExt;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/writer.rs","byte_start":78714,"byte_end":78744,"line_start":27,"line_end":27,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/writer.rs","byte_start":78749,"byte_end":78752,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ let mut buf = Vec::with_capacity(1024).writer();","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/writer.rs","byte_start":78757,"byte_end":78809,"line_start":29,"line_end":29,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/writer.rs","byte_start":78814,"byte_end":78817,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(1024, buf.get_ref().capacity());","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/writer.rs","byte_start":78822,"byte_end":78869,"line_start":31,"line_end":31,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/writer.rs","byte_start":78874,"byte_end":78881,"line_start":32,"line_end":32,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":260},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/writer.rs","byte_start":79343,"byte_end":79350,"line_start":52,"line_end":52,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Writer<B>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut B","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying `BufMut`.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying `BufMut`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/writer.rs","byte_start":78945,"byte_end":79001,"line_start":37,"line_end":37,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/writer.rs","byte_start":79006,"byte_end":79009,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly write to the underlying `BufMut`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/writer.rs","byte_start":79014,"byte_end":79081,"line_start":39,"line_end":39,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/writer.rs","byte_start":79086,"byte_end":79089,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/writer.rs","byte_start":79094,"byte_end":79108,"line_start":41,"line_end":41,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/writer.rs","byte_start":79113,"byte_end":79116,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/writer.rs","byte_start":79121,"byte_end":79132,"line_start":43,"line_end":43,"column_start":5,"column_end":16}},{"value":"/ use bytes::buf::BufMutExt;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/writer.rs","byte_start":79137,"byte_end":79167,"line_start":44,"line_end":44,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/writer.rs","byte_start":79172,"byte_end":79175,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![].writer();","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/writer.rs","byte_start":79180,"byte_end":79214,"line_start":46,"line_end":46,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/writer.rs","byte_start":79219,"byte_end":79222,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ buf.get_mut().reserve(1024);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/writer.rs","byte_start":79227,"byte_end":79259,"line_start":48,"line_end":48,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/writer.rs","byte_start":79264,"byte_end":79267,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(1024, buf.get_ref().capacity());","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/writer.rs","byte_start":79272,"byte_end":79319,"line_start":50,"line_end":50,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/writer.rs","byte_start":79324,"byte_end":79331,"line_start":51,"line_end":51,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":261},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/writer.rs","byte_start":79832,"byte_end":79842,"line_start":72,"line_end":72,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Writer<B>>::into_inner","value":"pub fn into_inner(Self) -> B","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `Writer`, returning the underlying value.","sig":null,"attributes":[{"value":"/ Consumes this `Writer`, returning the underlying value.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/writer.rs","byte_start":79407,"byte_end":79466,"line_start":56,"line_end":56,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/writer.rs","byte_start":79471,"byte_end":79474,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/writer.rs","byte_start":79479,"byte_end":79493,"line_start":58,"line_end":58,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/writer.rs","byte_start":79498,"byte_end":79501,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/writer.rs","byte_start":79506,"byte_end":79517,"line_start":60,"line_end":60,"column_start":5,"column_end":16}},{"value":"/ use bytes::buf::BufMutExt;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/writer.rs","byte_start":79522,"byte_end":79552,"line_start":61,"line_end":61,"column_start":5,"column_end":35}},{"value":"/ use std::io;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/writer.rs","byte_start":79557,"byte_end":79573,"line_start":62,"line_end":62,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/writer.rs","byte_start":79578,"byte_end":79581,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![].writer();","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/writer.rs","byte_start":79586,"byte_end":79620,"line_start":64,"line_end":64,"column_start":5,"column_end":39}},{"value":"/ let mut src = &b\"hello world\"[..];","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/writer.rs","byte_start":79625,"byte_end":79663,"line_start":65,"line_end":65,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/writer.rs","byte_start":79668,"byte_end":79671,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ io::copy(&mut src, &mut buf).unwrap();","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/writer.rs","byte_start":79676,"byte_end":79718,"line_start":67,"line_end":67,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/writer.rs","byte_start":79723,"byte_end":79726,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ let buf = buf.into_inner();","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/writer.rs","byte_start":79731,"byte_end":79762,"line_start":69,"line_end":69,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(*buf, b\"hello world\"[..]);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/writer.rs","byte_start":79767,"byte_end":79808,"line_start":70,"line_end":70,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/writer.rs","byte_start":79813,"byte_end":79820,"line_start":71,"line_end":71,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":272},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":60913,"byte_end":60919,"line_start":21,"line_end":21,"column_start":11,"column_end":17},"name":"BufExt","qualname":"::buf::ext::BufExt","value":"BufExt: Buf","parent":null,"children":[{"krate":0,"index":273},{"krate":0,"index":274},{"krate":0,"index":276}],"decl_id":null,"docs":" Extra methods for implementations of `Buf`.\n","sig":null,"attributes":[{"value":"/ Extra methods for implementations of `Buf`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":60855,"byte_end":60902,"line_start":20,"line_end":20,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":273},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":61517,"byte_end":61521,"line_start":43,"line_end":43,"column_start":8,"column_end":12},"name":"take","qualname":"::buf::ext::BufExt::take","value":"pub fn take(Self, usize) -> Take<Self> where Self: Sized","parent":{"krate":0,"index":272},"children":[],"decl_id":null,"docs":" Creates an adaptor which will read at most `limit` bytes from `self`.","sig":null,"attributes":[{"value":"/ Creates an adaptor which will read at most `limit` bytes from `self`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":60931,"byte_end":61004,"line_start":22,"line_end":22,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":61009,"byte_end":61012,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ This function returns a new instance of `Buf` which will read at most","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":61017,"byte_end":61090,"line_start":24,"line_end":24,"column_start":5,"column_end":78}},{"value":"/ `limit` bytes.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":61095,"byte_end":61113,"line_start":25,"line_end":25,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":61118,"byte_end":61121,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":61126,"byte_end":61140,"line_start":27,"line_end":27,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":61145,"byte_end":61148,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":61153,"byte_end":61160,"line_start":29,"line_end":29,"column_start":5,"column_end":12}},{"value":"/ use bytes::{Buf, BufMut, buf::BufExt};","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":61165,"byte_end":61207,"line_start":30,"line_end":30,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":61212,"byte_end":61215,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ let mut buf = b\"hello world\"[..].take(5);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":61220,"byte_end":61265,"line_start":32,"line_end":32,"column_start":5,"column_end":50}},{"value":"/ let mut dst = vec![];","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":61270,"byte_end":61295,"line_start":33,"line_end":33,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":61300,"byte_end":61303,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ dst.put(&mut buf);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":61308,"byte_end":61330,"line_start":35,"line_end":35,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(dst, b\"hello\");","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":61335,"byte_end":61365,"line_start":36,"line_end":36,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":61370,"byte_end":61373,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ let mut buf = buf.into_inner();","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":61378,"byte_end":61413,"line_start":38,"line_end":38,"column_start":5,"column_end":40}},{"value":"/ dst.clear();","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":61418,"byte_end":61434,"line_start":39,"line_end":39,"column_start":5,"column_end":21}},{"value":"/ dst.put(&mut buf);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":61439,"byte_end":61461,"line_start":40,"line_end":40,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(dst, b\" world\");","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":61466,"byte_end":61497,"line_start":41,"line_end":41,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":61502,"byte_end":61509,"line_start":42,"line_end":42,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":274},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":62117,"byte_end":62122,"line_start":64,"line_end":64,"column_start":8,"column_end":13},"name":"chain","qualname":"::buf::ext::BufExt::chain","value":"pub fn chain<U: Buf>(Self, U) -> Chain<Self, U> where Self: Sized","parent":{"krate":0,"index":272},"children":[],"decl_id":null,"docs":" Creates an adaptor which will chain this buffer with another.","sig":null,"attributes":[{"value":"/ Creates an adaptor which will chain this buffer with another.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":61630,"byte_end":61695,"line_start":49,"line_end":49,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":61700,"byte_end":61703,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ The returned `Buf` instance will first consume all bytes from `self`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":61708,"byte_end":61781,"line_start":51,"line_end":51,"column_start":5,"column_end":78}},{"value":"/ Afterwards the output is equivalent to the output of next.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":61786,"byte_end":61848,"line_start":52,"line_end":52,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":61853,"byte_end":61856,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":61861,"byte_end":61875,"line_start":54,"line_end":54,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":61880,"byte_end":61883,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":61888,"byte_end":61895,"line_start":56,"line_end":56,"column_start":5,"column_end":12}},{"value":"/ use bytes::{Buf, buf::BufExt};","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":61900,"byte_end":61934,"line_start":57,"line_end":57,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":61939,"byte_end":61942,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ let mut chain = b\"hello \"[..].chain(&b\"world\"[..]);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":61947,"byte_end":62002,"line_start":59,"line_end":59,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":62007,"byte_end":62010,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ let full = chain.to_bytes();","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":62015,"byte_end":62047,"line_start":61,"line_end":61,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(full.bytes(), b\"hello world\");","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":62052,"byte_end":62097,"line_start":62,"line_end":62,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":62102,"byte_end":62109,"line_start":63,"line_end":63,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":276},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":63020,"byte_end":63026,"line_start":94,"line_end":94,"column_start":8,"column_end":14},"name":"reader","qualname":"::buf::ext::BufExt::reader","value":"pub fn reader(Self) -> Reader<Self> where Self: Sized","parent":{"krate":0,"index":272},"children":[],"decl_id":null,"docs":" Creates an adaptor which implements the `Read` trait for `self`.","sig":null,"attributes":[{"value":"/ Creates an adaptor which implements the `Read` trait for `self`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":62238,"byte_end":62306,"line_start":70,"line_end":70,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":62311,"byte_end":62314,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ This function returns a new value which implements `Read` by adapting","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":62319,"byte_end":62392,"line_start":72,"line_end":72,"column_start":5,"column_end":78}},{"value":"/ the `Read` trait functions to the `Buf` trait functions. Given that","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":62397,"byte_end":62468,"line_start":73,"line_end":73,"column_start":5,"column_end":76}},{"value":"/ `Buf` operations are infallible, none of the `Read` functions will","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":62473,"byte_end":62543,"line_start":74,"line_end":74,"column_start":5,"column_end":75}},{"value":"/ return with `Err`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":62548,"byte_end":62570,"line_start":75,"line_end":75,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":62575,"byte_end":62578,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":62583,"byte_end":62597,"line_start":77,"line_end":77,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":62602,"byte_end":62605,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":62610,"byte_end":62617,"line_start":79,"line_end":79,"column_start":5,"column_end":12}},{"value":"/ use bytes::{Buf, Bytes, buf::BufExt};","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":62622,"byte_end":62663,"line_start":80,"line_end":80,"column_start":5,"column_end":46}},{"value":"/ use std::io::Read;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":62668,"byte_end":62690,"line_start":81,"line_end":81,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":62695,"byte_end":62698,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ let buf = Bytes::from(\"hello world\");","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":62703,"byte_end":62744,"line_start":83,"line_end":83,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":62749,"byte_end":62752,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ let mut reader = buf.reader();","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":62757,"byte_end":62791,"line_start":85,"line_end":85,"column_start":5,"column_end":39}},{"value":"/ let mut dst = [0; 1024];","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":62796,"byte_end":62824,"line_start":86,"line_end":86,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":62829,"byte_end":62832,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ let num = reader.read(&mut dst).unwrap();","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":62837,"byte_end":62882,"line_start":88,"line_end":88,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":62887,"byte_end":62890,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(11, num);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":62895,"byte_end":62919,"line_start":90,"line_end":90,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(&dst[..11], &b\"hello world\"[..]);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":62924,"byte_end":62972,"line_start":91,"line_end":91,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":62977,"byte_end":62984,"line_start":92,"line_end":92,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":62989,"byte_end":63012,"line_start":93,"line_end":93,"column_start":5,"column_end":28}}]},{"kind":"Trait","id":{"krate":0,"index":279},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":63204,"byte_end":63213,"line_start":102,"line_end":102,"column_start":11,"column_end":20},"name":"BufMutExt","qualname":"::buf::ext::BufMutExt","value":"BufMutExt: BufMut","parent":null,"children":[{"krate":0,"index":280},{"krate":0,"index":281},{"krate":0,"index":282}],"decl_id":null,"docs":" Extra methods for implementations of `BufMut`.\n","sig":null,"attributes":[{"value":"/ Extra methods for implementations of `BufMut`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":63143,"byte_end":63193,"line_start":101,"line_end":101,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":280},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":63590,"byte_end":63595,"line_start":116,"line_end":116,"column_start":8,"column_end":13},"name":"limit","qualname":"::buf::ext::BufMutExt::limit","value":"pub fn limit(Self, usize) -> Limit<Self> where Self: Sized","parent":{"krate":0,"index":279},"children":[],"decl_id":null,"docs":" Creates an adaptor which can write at most `limit` bytes to `self`.","sig":null,"attributes":[{"value":"/ Creates an adaptor which can write at most `limit` bytes to `self`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":63228,"byte_end":63299,"line_start":103,"line_end":103,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":63304,"byte_end":63307,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":63312,"byte_end":63326,"line_start":105,"line_end":105,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":63331,"byte_end":63334,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":63339,"byte_end":63346,"line_start":107,"line_end":107,"column_start":5,"column_end":12}},{"value":"/ use bytes::{BufMut, buf::BufMutExt};","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":63351,"byte_end":63391,"line_start":108,"line_end":108,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":63396,"byte_end":63399,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ let arr = &mut [0u8; 128][..];","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":63404,"byte_end":63438,"line_start":110,"line_end":110,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(arr.remaining_mut(), 128);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":63443,"byte_end":63484,"line_start":111,"line_end":111,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":63489,"byte_end":63492,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ let dst = arr.limit(10);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":63497,"byte_end":63525,"line_start":113,"line_end":113,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(dst.remaining_mut(), 10);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":63530,"byte_end":63570,"line_start":114,"line_end":114,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":63575,"byte_end":63582,"line_start":115,"line_end":115,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":281},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":64457,"byte_end":64463,"line_start":145,"line_end":145,"column_start":8,"column_end":14},"name":"writer","qualname":"::buf::ext::BufMutExt::writer","value":"pub fn writer(Self) -> Writer<Self> where Self: Sized","parent":{"krate":0,"index":279},"children":[],"decl_id":null,"docs":" Creates an adaptor which implements the `Write` trait for `self`.","sig":null,"attributes":[{"value":"/ Creates an adaptor which implements the `Write` trait for `self`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":63706,"byte_end":63775,"line_start":122,"line_end":122,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":63780,"byte_end":63783,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ This function returns a new value which implements `Write` by adapting","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":63788,"byte_end":63862,"line_start":124,"line_end":124,"column_start":5,"column_end":79}},{"value":"/ the `Write` trait functions to the `BufMut` trait functions. Given that","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":63867,"byte_end":63942,"line_start":125,"line_end":125,"column_start":5,"column_end":80}},{"value":"/ `BufMut` operations are infallible, none of the `Write` functions will","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":63947,"byte_end":64021,"line_start":126,"line_end":126,"column_start":5,"column_end":79}},{"value":"/ return with `Err`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":64026,"byte_end":64048,"line_start":127,"line_end":127,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":64053,"byte_end":64056,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":64061,"byte_end":64075,"line_start":129,"line_end":129,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":64080,"byte_end":64083,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":64088,"byte_end":64095,"line_start":131,"line_end":131,"column_start":5,"column_end":12}},{"value":"/ use bytes::{BufMut, buf::BufMutExt};","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":64100,"byte_end":64140,"line_start":132,"line_end":132,"column_start":5,"column_end":45}},{"value":"/ use std::io::Write;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":64145,"byte_end":64168,"line_start":133,"line_end":133,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":64173,"byte_end":64176,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![].writer();","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":64181,"byte_end":64215,"line_start":135,"line_end":135,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":64220,"byte_end":64223,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ let num = buf.write(&b\"hello world\"[..]).unwrap();","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":64228,"byte_end":64282,"line_start":137,"line_end":137,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(11, num);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":64287,"byte_end":64311,"line_start":138,"line_end":138,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":64316,"byte_end":64319,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ let buf = buf.into_inner();","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":64324,"byte_end":64355,"line_start":140,"line_end":140,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":64360,"byte_end":64363,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(*buf, b\"hello world\"[..]);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":64368,"byte_end":64409,"line_start":142,"line_end":142,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":64414,"byte_end":64421,"line_start":143,"line_end":143,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":64426,"byte_end":64449,"line_start":144,"line_end":144,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":282},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":65125,"byte_end":65134,"line_start":169,"line_end":169,"column_start":8,"column_end":17},"name":"chain_mut","qualname":"::buf::ext::BufMutExt::chain_mut","value":"pub fn chain_mut<U: BufMut>(Self, U) -> Chain<Self, U> where Self: Sized","parent":{"krate":0,"index":279},"children":[],"decl_id":null,"docs":" Creates an adapter which will chain this buffer with another.","sig":null,"attributes":[{"value":"/ Creates an adapter which will chain this buffer with another.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":64543,"byte_end":64608,"line_start":149,"line_end":149,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":64613,"byte_end":64616,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ The returned `BufMut` instance will first write to all bytes from","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":64621,"byte_end":64690,"line_start":151,"line_end":151,"column_start":5,"column_end":74}},{"value":"/ `self`. Afterwards, it will write to `next`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":64695,"byte_end":64743,"line_start":152,"line_end":152,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":64748,"byte_end":64751,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":64756,"byte_end":64770,"line_start":154,"line_end":154,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":64775,"byte_end":64778,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":64783,"byte_end":64790,"line_start":156,"line_end":156,"column_start":5,"column_end":12}},{"value":"/ use bytes::{BufMut, buf::BufMutExt};","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":64795,"byte_end":64835,"line_start":157,"line_end":157,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":64840,"byte_end":64843,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ let mut a = [0u8; 5];","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":64848,"byte_end":64873,"line_start":159,"line_end":159,"column_start":5,"column_end":30}},{"value":"/ let mut b = [0u8; 6];","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":64878,"byte_end":64903,"line_start":160,"line_end":160,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":64908,"byte_end":64911,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ let mut chain = (&mut a[..]).chain_mut(&mut b[..]);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":64916,"byte_end":64971,"line_start":162,"line_end":162,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":64976,"byte_end":64979,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ chain.put_slice(b\"hello world\");","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":64984,"byte_end":65020,"line_start":164,"line_end":164,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":65025,"byte_end":65028,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&a[..], b\"hello\");","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":65033,"byte_end":65066,"line_start":166,"line_end":166,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(&b[..], b\" world\");","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":65071,"byte_end":65105,"line_start":167,"line_end":167,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":65110,"byte_end":65117,"line_start":168,"line_end":168,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":970},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/iter.rs","byte_start":80746,"byte_end":80754,"line_start":26,"line_end":26,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::buf::iter::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":972}],"decl_id":null,"docs":" Iterator over the bytes contained by the buffer.","sig":null,"attributes":[{"value":"/ Iterator over the bytes contained by the buffer.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/iter.rs","byte_start":80195,"byte_end":80247,"line_start":3,"line_end":3,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/iter.rs","byte_start":80248,"byte_end":80251,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`iter`] method on [`Buf`].","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/iter.rs","byte_start":80252,"byte_end":80313,"line_start":5,"line_end":5,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/iter.rs","byte_start":80314,"byte_end":80317,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/iter.rs","byte_start":80318,"byte_end":80332,"line_start":7,"line_end":7,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/iter.rs","byte_start":80333,"byte_end":80336,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/iter.rs","byte_start":80337,"byte_end":80353,"line_start":9,"line_end":9,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/iter.rs","byte_start":80354,"byte_end":80357,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/iter.rs","byte_start":80358,"byte_end":80365,"line_start":11,"line_end":11,"column_start":1,"column_end":8}},{"value":"/ use bytes::{Buf, Bytes};","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/iter.rs","byte_start":80366,"byte_end":80394,"line_start":12,"line_end":12,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/iter.rs","byte_start":80395,"byte_end":80398,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ let buf = Bytes::from(&b\"abc\"[..]);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/iter.rs","byte_start":80399,"byte_end":80438,"line_start":14,"line_end":14,"column_start":1,"column_end":40}},{"value":"/ let mut iter = buf.into_iter();","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/iter.rs","byte_start":80439,"byte_end":80474,"line_start":15,"line_end":15,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/iter.rs","byte_start":80475,"byte_end":80478,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(iter.next(), Some(b'a'));","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/iter.rs","byte_start":80479,"byte_end":80519,"line_start":17,"line_end":17,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(iter.next(), Some(b'b'));","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/iter.rs","byte_start":80520,"byte_end":80560,"line_start":18,"line_end":18,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(iter.next(), Some(b'c'));","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/iter.rs","byte_start":80561,"byte_end":80601,"line_start":19,"line_end":19,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(iter.next(), None);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/iter.rs","byte_start":80602,"byte_end":80636,"line_start":20,"line_end":20,"column_start":1,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/iter.rs","byte_start":80637,"byte_end":80644,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/iter.rs","byte_start":80645,"byte_end":80648,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ [`iter`]: trait.Buf.html#method.iter","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/iter.rs","byte_start":80649,"byte_end":80689,"line_start":23,"line_end":23,"column_start":1,"column_end":41}},{"value":"/ [`Buf`]: trait.Buf.html","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/iter.rs","byte_start":80690,"byte_end":80717,"line_start":24,"line_end":24,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":290},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/iter.rs","byte_start":81283,"byte_end":81286,"line_start":47,"line_end":47,"column_start":12,"column_end":15},"name":"new","qualname":"<IntoIter<T>>::new","value":"pub fn new(T) -> IntoIter<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates an iterator over the bytes contained by the buffer.","sig":null,"attributes":[{"value":"/ Creates an iterator over the bytes contained by the buffer.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/iter.rs","byte_start":80803,"byte_end":80866,"line_start":31,"line_end":31,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/iter.rs","byte_start":80871,"byte_end":80874,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/iter.rs","byte_start":80879,"byte_end":80893,"line_start":33,"line_end":33,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/iter.rs","byte_start":80898,"byte_end":80901,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/iter.rs","byte_start":80906,"byte_end":80913,"line_start":35,"line_end":35,"column_start":5,"column_end":12}},{"value":"/ use bytes::{Buf, Bytes};","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/iter.rs","byte_start":80918,"byte_end":80946,"line_start":36,"line_end":36,"column_start":5,"column_end":33}},{"value":"/ use bytes::buf::IntoIter;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/iter.rs","byte_start":80951,"byte_end":80980,"line_start":37,"line_end":37,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/iter.rs","byte_start":80985,"byte_end":80988,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ let buf = Bytes::from_static(b\"abc\");","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/iter.rs","byte_start":80993,"byte_end":81034,"line_start":39,"line_end":39,"column_start":5,"column_end":46}},{"value":"/ let mut iter = IntoIter::new(buf);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/iter.rs","byte_start":81039,"byte_end":81077,"line_start":40,"line_end":40,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/iter.rs","byte_start":81082,"byte_end":81085,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(iter.next(), Some(b'a'));","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/iter.rs","byte_start":81090,"byte_end":81130,"line_start":42,"line_end":42,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(iter.next(), Some(b'b'));","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/iter.rs","byte_start":81135,"byte_end":81175,"line_start":43,"line_end":43,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(iter.next(), Some(b'c'));","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/iter.rs","byte_start":81180,"byte_end":81220,"line_start":44,"line_end":44,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(iter.next(), None);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/iter.rs","byte_start":81225,"byte_end":81259,"line_start":45,"line_end":45,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/iter.rs","byte_start":81264,"byte_end":81271,"line_start":46,"line_end":46,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":291},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/iter.rs","byte_start":81750,"byte_end":81760,"line_start":65,"line_end":65,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<IntoIter<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `IntoIter`, returning the underlying value.","sig":null,"attributes":[{"value":"/ Consumes this `IntoIter`, returning the underlying value.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/iter.rs","byte_start":81351,"byte_end":81412,"line_start":50,"line_end":50,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/iter.rs","byte_start":81417,"byte_end":81420,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/iter.rs","byte_start":81425,"byte_end":81439,"line_start":52,"line_end":52,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/iter.rs","byte_start":81444,"byte_end":81447,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/iter.rs","byte_start":81452,"byte_end":81463,"line_start":54,"line_end":54,"column_start":5,"column_end":16}},{"value":"/ use bytes::{Buf, Bytes};","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/iter.rs","byte_start":81468,"byte_end":81496,"line_start":55,"line_end":55,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/iter.rs","byte_start":81501,"byte_end":81504,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ let buf = Bytes::from(&b\"abc\"[..]);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/iter.rs","byte_start":81509,"byte_end":81548,"line_start":57,"line_end":57,"column_start":5,"column_end":44}},{"value":"/ let mut iter = buf.into_iter();","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/iter.rs","byte_start":81553,"byte_end":81588,"line_start":58,"line_end":58,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/iter.rs","byte_start":81593,"byte_end":81596,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(iter.next(), Some(b'a'));","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/iter.rs","byte_start":81601,"byte_end":81641,"line_start":60,"line_end":60,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/iter.rs","byte_start":81646,"byte_end":81649,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ let buf = iter.into_inner();","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/iter.rs","byte_start":81654,"byte_end":81686,"line_start":62,"line_end":62,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(2, buf.remaining());","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/iter.rs","byte_start":81691,"byte_end":81726,"line_start":63,"line_end":63,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/iter.rs","byte_start":81731,"byte_end":81738,"line_start":64,"line_end":64,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":292},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/iter.rs","byte_start":82239,"byte_end":82246,"line_start":85,"line_end":85,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<IntoIter<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying `Buf`.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying `Buf`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/iter.rs","byte_start":81804,"byte_end":81849,"line_start":69,"line_end":69,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/iter.rs","byte_start":81854,"byte_end":81857,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying `Buf`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/iter.rs","byte_start":81862,"byte_end":81927,"line_start":71,"line_end":71,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/iter.rs","byte_start":81932,"byte_end":81935,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/iter.rs","byte_start":81940,"byte_end":81954,"line_start":73,"line_end":73,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/iter.rs","byte_start":81959,"byte_end":81962,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/iter.rs","byte_start":81967,"byte_end":81978,"line_start":75,"line_end":75,"column_start":5,"column_end":16}},{"value":"/ use bytes::{Buf, Bytes};","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/iter.rs","byte_start":81983,"byte_end":82011,"line_start":76,"line_end":76,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/iter.rs","byte_start":82016,"byte_end":82019,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ let buf = Bytes::from(&b\"abc\"[..]);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/iter.rs","byte_start":82024,"byte_end":82063,"line_start":78,"line_end":78,"column_start":5,"column_end":44}},{"value":"/ let mut iter = buf.into_iter();","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/iter.rs","byte_start":82068,"byte_end":82103,"line_start":79,"line_end":79,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/iter.rs","byte_start":82108,"byte_end":82111,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(iter.next(), Some(b'a'));","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/iter.rs","byte_start":82116,"byte_end":82156,"line_start":81,"line_end":81,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/iter.rs","byte_start":82161,"byte_end":82164,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(2, iter.get_ref().remaining());","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/iter.rs","byte_start":82169,"byte_end":82215,"line_start":83,"line_end":83,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/iter.rs","byte_start":82220,"byte_end":82227,"line_start":84,"line_end":84,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":293},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/iter.rs","byte_start":82779,"byte_end":82786,"line_start":107,"line_end":107,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<IntoIter<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying `Buf`.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying `Buf`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/iter.rs","byte_start":82293,"byte_end":82346,"line_start":89,"line_end":89,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/iter.rs","byte_start":82351,"byte_end":82354,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying `Buf`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/iter.rs","byte_start":82359,"byte_end":82424,"line_start":91,"line_end":91,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/iter.rs","byte_start":82429,"byte_end":82432,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/iter.rs","byte_start":82437,"byte_end":82451,"line_start":93,"line_end":93,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/iter.rs","byte_start":82456,"byte_end":82459,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/iter.rs","byte_start":82464,"byte_end":82475,"line_start":95,"line_end":95,"column_start":5,"column_end":16}},{"value":"/ use bytes::{Buf, BytesMut};","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/iter.rs","byte_start":82480,"byte_end":82511,"line_start":96,"line_end":96,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/iter.rs","byte_start":82516,"byte_end":82519,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ let buf = BytesMut::from(&b\"abc\"[..]);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/iter.rs","byte_start":82524,"byte_end":82566,"line_start":98,"line_end":98,"column_start":5,"column_end":47}},{"value":"/ let mut iter = buf.into_iter();","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/iter.rs","byte_start":82571,"byte_end":82606,"line_start":99,"line_end":99,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/iter.rs","byte_start":82611,"byte_end":82614,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(iter.next(), Some(b'a'));","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/iter.rs","byte_start":82619,"byte_end":82659,"line_start":101,"line_end":101,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/iter.rs","byte_start":82664,"byte_end":82667,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ iter.get_mut().advance(1);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/iter.rs","byte_start":82672,"byte_end":82702,"line_start":103,"line_end":103,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/iter.rs","byte_start":82707,"byte_end":82710,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(iter.next(), Some(b'c'));","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/iter.rs","byte_start":82715,"byte_end":82755,"line_start":105,"line_end":105,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/iter.rs","byte_start":82760,"byte_end":82767,"line_start":106,"line_end":106,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":356},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":85146,"byte_end":85154,"line_start":49,"line_end":49,"column_start":12,"column_end":20},"name":"BytesMut","qualname":"::bytes_mut::BytesMut","value":"BytesMut {  }","parent":null,"children":[{"krate":0,"index":357},{"krate":0,"index":358},{"krate":0,"index":359},{"krate":0,"index":360}],"decl_id":null,"docs":" A unique reference to a contiguous slice of memory.","sig":null,"attributes":[{"value":"/ A unique reference to a contiguous slice of memory.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":84110,"byte_end":84165,"line_start":14,"line_end":14,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":84166,"byte_end":84169,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ `BytesMut` represents a unique view into a potentially shared memory region.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":84170,"byte_end":84250,"line_start":16,"line_end":16,"column_start":1,"column_end":81}},{"value":"/ Given the uniqueness guarantee, owners of `BytesMut` handles are able to","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":84251,"byte_end":84327,"line_start":17,"line_end":17,"column_start":1,"column_end":77}},{"value":"/ mutate the memory. It is similar to a `Vec<u8>` but with less copies and","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":84328,"byte_end":84404,"line_start":18,"line_end":18,"column_start":1,"column_end":77}},{"value":"/ allocations.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":84405,"byte_end":84421,"line_start":19,"line_end":19,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":84422,"byte_end":84425,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ # Growth","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":84426,"byte_end":84438,"line_start":21,"line_end":21,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":84439,"byte_end":84442,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ `BytesMut`'s `BufMut` implementation will implicitly grow its buffer as","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":84443,"byte_end":84518,"line_start":23,"line_end":23,"column_start":1,"column_end":76}},{"value":"/ necessary. However, explicitly reserving the required space up-front before","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":84519,"byte_end":84598,"line_start":24,"line_end":24,"column_start":1,"column_end":80}},{"value":"/ a series of inserts will be more efficient.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":84599,"byte_end":84646,"line_start":25,"line_end":25,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":84647,"byte_end":84650,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":84651,"byte_end":84665,"line_start":27,"line_end":27,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":84666,"byte_end":84669,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":84670,"byte_end":84677,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/ use bytes::{BytesMut, BufMut};","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":84678,"byte_end":84712,"line_start":30,"line_end":30,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":84713,"byte_end":84716,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ let mut buf = BytesMut::with_capacity(64);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":84717,"byte_end":84763,"line_start":32,"line_end":32,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":84764,"byte_end":84767,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ buf.put_u8(b'h');","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":84768,"byte_end":84789,"line_start":34,"line_end":34,"column_start":1,"column_end":22}},{"value":"/ buf.put_u8(b'e');","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":84790,"byte_end":84811,"line_start":35,"line_end":35,"column_start":1,"column_end":22}},{"value":"/ buf.put(&b\"llo\"[..]);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":84812,"byte_end":84837,"line_start":36,"line_end":36,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":84838,"byte_end":84841,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(&buf[..], b\"hello\");","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":84842,"byte_end":84877,"line_start":38,"line_end":38,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":84878,"byte_end":84881,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ // Freeze the buffer so that it can be shared","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":84882,"byte_end":84931,"line_start":40,"line_end":40,"column_start":1,"column_end":50}},{"value":"/ let a = buf.freeze();","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":84932,"byte_end":84957,"line_start":41,"line_end":41,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":84958,"byte_end":84961,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ // This does not allocate, instead `b` points to the same memory.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":84962,"byte_end":85031,"line_start":43,"line_end":43,"column_start":1,"column_end":70}},{"value":"/ let b = a.clone();","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":85032,"byte_end":85054,"line_start":44,"line_end":44,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":85055,"byte_end":85058,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(&a[..], b\"hello\");","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":85059,"byte_end":85092,"line_start":46,"line_end":46,"column_start":1,"column_end":34}},{"value":"/ assert_eq!(&b[..], b\"hello\");","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":85093,"byte_end":85126,"line_start":47,"line_end":47,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":85127,"byte_end":85134,"line_start":48,"line_end":48,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":377},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":87974,"byte_end":87987,"line_start":131,"line_end":131,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BytesMut>::with_capacity","value":"pub fn with_capacity(usize) -> BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesMut` with the specified capacity.","sig":null,"attributes":[{"value":"/ Creates a new `BytesMut` with the specified capacity.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":87158,"byte_end":87215,"line_start":107,"line_end":107,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":87220,"byte_end":87223,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ The returned `BytesMut` will be able to hold at least `capacity` bytes","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":87228,"byte_end":87302,"line_start":109,"line_end":109,"column_start":5,"column_end":79}},{"value":"/ without reallocating. If `capacity` is under `4 * size_of::<usize>() - 1`,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":87307,"byte_end":87385,"line_start":110,"line_end":110,"column_start":5,"column_end":83}},{"value":"/ then `BytesMut` will not allocate.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":87390,"byte_end":87428,"line_start":111,"line_end":111,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":87433,"byte_end":87436,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ It is important to note that this function does not specify the length","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":87441,"byte_end":87515,"line_start":113,"line_end":113,"column_start":5,"column_end":79}},{"value":"/ of the returned `BytesMut`, but only the capacity.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":87520,"byte_end":87574,"line_start":114,"line_end":114,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":87579,"byte_end":87582,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":87587,"byte_end":87601,"line_start":116,"line_end":116,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":87606,"byte_end":87609,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":87614,"byte_end":87621,"line_start":118,"line_end":118,"column_start":5,"column_end":12}},{"value":"/ use bytes::{BytesMut, BufMut};","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":87626,"byte_end":87660,"line_start":119,"line_end":119,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":87665,"byte_end":87668,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ let mut bytes = BytesMut::with_capacity(64);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":87673,"byte_end":87721,"line_start":121,"line_end":121,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":87726,"byte_end":87729,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ // `bytes` contains no data, even though there is capacity","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":87734,"byte_end":87796,"line_start":123,"line_end":123,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(bytes.len(), 0);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":87801,"byte_end":87832,"line_start":124,"line_end":124,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":87837,"byte_end":87840,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ bytes.put(&b\"hello world\"[..]);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":87845,"byte_end":87880,"line_start":126,"line_end":126,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":87885,"byte_end":87888,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&bytes[..], b\"hello world\");","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":87893,"byte_end":87936,"line_start":128,"line_end":128,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":87941,"byte_end":87948,"line_start":129,"line_end":129,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":87953,"byte_end":87962,"line_start":130,"line_end":130,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":378},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":88586,"byte_end":88589,"line_start":155,"line_end":155,"column_start":12,"column_end":15},"name":"new","qualname":"<BytesMut>::new","value":"pub fn new() -> BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesMut` with default capacity.","sig":null,"attributes":[{"value":"/ Creates a new `BytesMut` with default capacity.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":88087,"byte_end":88138,"line_start":135,"line_end":135,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":88143,"byte_end":88146,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ Resulting object has length 0 and unspecified capacity.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":88151,"byte_end":88210,"line_start":137,"line_end":137,"column_start":5,"column_end":64}},{"value":"/ This function does not allocate.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":88215,"byte_end":88251,"line_start":138,"line_end":138,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":88256,"byte_end":88259,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":88264,"byte_end":88278,"line_start":140,"line_end":140,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":88283,"byte_end":88286,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":88291,"byte_end":88298,"line_start":142,"line_end":142,"column_start":5,"column_end":12}},{"value":"/ use bytes::{BytesMut, BufMut};","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":88303,"byte_end":88337,"line_start":143,"line_end":143,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":88342,"byte_end":88345,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ let mut bytes = BytesMut::new();","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":88350,"byte_end":88386,"line_start":145,"line_end":145,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":88391,"byte_end":88394,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(0, bytes.len());","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":88399,"byte_end":88430,"line_start":147,"line_end":147,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":88435,"byte_end":88438,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ bytes.reserve(2);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":88443,"byte_end":88464,"line_start":149,"line_end":149,"column_start":5,"column_end":26}},{"value":"/ bytes.put_slice(b\"xy\");","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":88469,"byte_end":88496,"line_start":150,"line_end":150,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":88501,"byte_end":88504,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&b\"xy\"[..], &bytes[..]);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":88509,"byte_end":88548,"line_start":152,"line_end":152,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":88553,"byte_end":88560,"line_start":153,"line_end":153,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":88565,"byte_end":88574,"line_start":154,"line_end":154,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":379},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":88914,"byte_end":88917,"line_start":170,"line_end":170,"column_start":12,"column_end":15},"name":"len","qualname":"<BytesMut>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes contained in this `BytesMut`.","sig":null,"attributes":[{"value":"/ Returns the number of bytes contained in this `BytesMut`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":88652,"byte_end":88713,"line_start":159,"line_end":159,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":88718,"byte_end":88721,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":88726,"byte_end":88740,"line_start":161,"line_end":161,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":88745,"byte_end":88748,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":88753,"byte_end":88760,"line_start":163,"line_end":163,"column_start":5,"column_end":12}},{"value":"/ use bytes::BytesMut;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":88765,"byte_end":88789,"line_start":164,"line_end":164,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":88794,"byte_end":88797,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ let b = BytesMut::from(&b\"hello\"[..]);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":88802,"byte_end":88844,"line_start":166,"line_end":166,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(b.len(), 5);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":88849,"byte_end":88876,"line_start":167,"line_end":167,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":88881,"byte_end":88888,"line_start":168,"line_end":168,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":88893,"byte_end":88902,"line_start":169,"line_end":169,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":380},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":89215,"byte_end":89223,"line_start":185,"line_end":185,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<BytesMut>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the `BytesMut` has a length of 0.","sig":null,"attributes":[{"value":"/ Returns true if the `BytesMut` has a length of 0.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":88964,"byte_end":89017,"line_start":174,"line_end":174,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":89022,"byte_end":89025,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":89030,"byte_end":89044,"line_start":176,"line_end":176,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":89049,"byte_end":89052,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":89057,"byte_end":89064,"line_start":178,"line_end":178,"column_start":5,"column_end":12}},{"value":"/ use bytes::BytesMut;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":89069,"byte_end":89093,"line_start":179,"line_end":179,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":89098,"byte_end":89101,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ let b = BytesMut::with_capacity(64);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":89106,"byte_end":89146,"line_start":181,"line_end":181,"column_start":5,"column_end":45}},{"value":"/ assert!(b.is_empty());","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":89151,"byte_end":89177,"line_start":182,"line_end":182,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":89182,"byte_end":89189,"line_start":183,"line_end":183,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":89194,"byte_end":89203,"line_start":184,"line_end":184,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":381},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":89556,"byte_end":89564,"line_start":200,"line_end":200,"column_start":12,"column_end":20},"name":"capacity","qualname":"<BytesMut>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes the `BytesMut` can hold without reallocating.","sig":null,"attributes":[{"value":"/ Returns the number of bytes the `BytesMut` can hold without reallocating.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":89274,"byte_end":89351,"line_start":189,"line_end":189,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":89356,"byte_end":89359,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":89364,"byte_end":89378,"line_start":191,"line_end":191,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":89383,"byte_end":89386,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":89391,"byte_end":89398,"line_start":193,"line_end":193,"column_start":5,"column_end":12}},{"value":"/ use bytes::BytesMut;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":89403,"byte_end":89427,"line_start":194,"line_end":194,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":89432,"byte_end":89435,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ let b = BytesMut::with_capacity(64);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":89440,"byte_end":89480,"line_start":196,"line_end":196,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(b.capacity(), 64);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":89485,"byte_end":89518,"line_start":197,"line_end":197,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":89523,"byte_end":89530,"line_start":198,"line_end":198,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":89535,"byte_end":89544,"line_start":199,"line_end":199,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":382},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":90380,"byte_end":90386,"line_start":229,"line_end":229,"column_start":12,"column_end":18},"name":"freeze","qualname":"<BytesMut>::freeze","value":"pub fn freeze(Self) -> Bytes","parent":null,"children":[],"decl_id":null,"docs":" Converts `self` into an immutable `Bytes`.","sig":null,"attributes":[{"value":"/ Converts `self` into an immutable `Bytes`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":89611,"byte_end":89657,"line_start":204,"line_end":204,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":89662,"byte_end":89665,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ The conversion is zero cost and is used to indicate that the slice","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":89670,"byte_end":89740,"line_start":206,"line_end":206,"column_start":5,"column_end":75}},{"value":"/ referenced by the handle will no longer be mutated. Once the conversion","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":89745,"byte_end":89820,"line_start":207,"line_end":207,"column_start":5,"column_end":80}},{"value":"/ is done, the handle can be cloned and shared across threads.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":89825,"byte_end":89889,"line_start":208,"line_end":208,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":89894,"byte_end":89897,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":89902,"byte_end":89916,"line_start":210,"line_end":210,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":89921,"byte_end":89924,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":89929,"byte_end":89936,"line_start":212,"line_end":212,"column_start":5,"column_end":12}},{"value":"/ use bytes::{BytesMut, BufMut};","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":89941,"byte_end":89975,"line_start":213,"line_end":213,"column_start":5,"column_end":39}},{"value":"/ use std::thread;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":89980,"byte_end":90000,"line_start":214,"line_end":214,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":90005,"byte_end":90008,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ let mut b = BytesMut::with_capacity(64);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":90013,"byte_end":90057,"line_start":216,"line_end":216,"column_start":5,"column_end":49}},{"value":"/ b.put(&b\"hello world\"[..]);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":90062,"byte_end":90093,"line_start":217,"line_end":217,"column_start":5,"column_end":36}},{"value":"/ let b1 = b.freeze();","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":90098,"byte_end":90122,"line_start":218,"line_end":218,"column_start":5,"column_end":29}},{"value":"/ let b2 = b1.clone();","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":90127,"byte_end":90151,"line_start":219,"line_end":219,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":90156,"byte_end":90159,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ let th = thread::spawn(move || {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":90164,"byte_end":90200,"line_start":221,"line_end":221,"column_start":5,"column_end":41}},{"value":"/     assert_eq!(&b1[..], b\"hello world\");","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":90205,"byte_end":90249,"line_start":222,"line_end":222,"column_start":5,"column_end":49}},{"value":"/ });","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":90254,"byte_end":90261,"line_start":223,"line_end":223,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":90266,"byte_end":90269,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&b2[..], b\"hello world\");","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":90274,"byte_end":90314,"line_start":225,"line_end":225,"column_start":5,"column_end":45}},{"value":"/ th.join().unwrap();","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":90319,"byte_end":90342,"line_start":226,"line_end":226,"column_start":5,"column_end":28}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":90347,"byte_end":90354,"line_start":227,"line_end":227,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":90359,"byte_end":90368,"line_start":228,"line_end":228,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":383},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":91869,"byte_end":91878,"line_start":278,"line_end":278,"column_start":12,"column_end":21},"name":"split_off","qualname":"<BytesMut>::split_off","value":"pub fn split_off(&mut Self, usize) -> BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Splits the bytes into two at the given index.","sig":null,"attributes":[{"value":"/ Splits the bytes into two at the given index.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":91084,"byte_end":91133,"line_start":251,"line_end":251,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":91138,"byte_end":91141,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ Afterwards `self` contains elements `[0, at)`, and the returned","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":91146,"byte_end":91213,"line_start":253,"line_end":253,"column_start":5,"column_end":72}},{"value":"/ `BytesMut` contains elements `[at, capacity)`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":91218,"byte_end":91268,"line_start":254,"line_end":254,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":91273,"byte_end":91276,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ This is an `O(1)` operation that just increases the reference count","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":91281,"byte_end":91352,"line_start":256,"line_end":256,"column_start":5,"column_end":76}},{"value":"/ and sets a few indices.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":91357,"byte_end":91384,"line_start":257,"line_end":257,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":91389,"byte_end":91392,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":91397,"byte_end":91411,"line_start":259,"line_end":259,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":91416,"byte_end":91419,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":91424,"byte_end":91431,"line_start":261,"line_end":261,"column_start":5,"column_end":12}},{"value":"/ use bytes::BytesMut;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":91436,"byte_end":91460,"line_start":262,"line_end":262,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":91465,"byte_end":91468,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ let mut a = BytesMut::from(&b\"hello world\"[..]);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":91473,"byte_end":91525,"line_start":264,"line_end":264,"column_start":5,"column_end":57}},{"value":"/ let mut b = a.split_off(5);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":91530,"byte_end":91561,"line_start":265,"line_end":265,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":91566,"byte_end":91569,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ a[0] = b'j';","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":91574,"byte_end":91590,"line_start":267,"line_end":267,"column_start":5,"column_end":21}},{"value":"/ b[0] = b'!';","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":91595,"byte_end":91611,"line_start":268,"line_end":268,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":91616,"byte_end":91619,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&a[..], b\"jello\");","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":91624,"byte_end":91657,"line_start":270,"line_end":270,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(&b[..], b\"!world\");","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":91662,"byte_end":91696,"line_start":271,"line_end":271,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":91701,"byte_end":91708,"line_start":272,"line_end":272,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":91713,"byte_end":91716,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":91721,"byte_end":91733,"line_start":274,"line_end":274,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":91738,"byte_end":91741,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ Panics if `at > capacity`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":91746,"byte_end":91776,"line_start":276,"line_end":276,"column_start":5,"column_end":35}},{"value":"must_use = \"consider BytesMut::truncate if you don't need the other half\"","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":91781,"byte_end":91857,"line_start":277,"line_end":277,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":384},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":93121,"byte_end":93126,"line_start":319,"line_end":319,"column_start":12,"column_end":17},"name":"split","qualname":"<BytesMut>::split","value":"pub fn split(&mut Self) -> BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Removes the bytes from the current view, returning them in a new\n `BytesMut` handle.","sig":null,"attributes":[{"value":"/ Removes the bytes from the current view, returning them in a new","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":92245,"byte_end":92313,"line_start":293,"line_end":293,"column_start":5,"column_end":73}},{"value":"/ `BytesMut` handle.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":92318,"byte_end":92340,"line_start":294,"line_end":294,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":92345,"byte_end":92348,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ Afterwards, `self` will be empty, but will retain any additional","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":92353,"byte_end":92421,"line_start":296,"line_end":296,"column_start":5,"column_end":73}},{"value":"/ capacity that it had before the operation. This is identical to","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":92426,"byte_end":92493,"line_start":297,"line_end":297,"column_start":5,"column_end":72}},{"value":"/ `self.split_to(self.len())`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":92498,"byte_end":92530,"line_start":298,"line_end":298,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":92535,"byte_end":92538,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ This is an `O(1)` operation that just increases the reference count and","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":92543,"byte_end":92618,"line_start":300,"line_end":300,"column_start":5,"column_end":80}},{"value":"/ sets a few indices.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":92623,"byte_end":92646,"line_start":301,"line_end":301,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":92651,"byte_end":92654,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":92659,"byte_end":92673,"line_start":303,"line_end":303,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":92678,"byte_end":92681,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":92686,"byte_end":92693,"line_start":305,"line_end":305,"column_start":5,"column_end":12}},{"value":"/ use bytes::{BytesMut, BufMut};","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":92698,"byte_end":92732,"line_start":306,"line_end":306,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":92737,"byte_end":92740,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ let mut buf = BytesMut::with_capacity(1024);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":92745,"byte_end":92793,"line_start":308,"line_end":308,"column_start":5,"column_end":53}},{"value":"/ buf.put(&b\"hello world\"[..]);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":92798,"byte_end":92831,"line_start":309,"line_end":309,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":92836,"byte_end":92839,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ let other = buf.split();","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":92844,"byte_end":92872,"line_start":311,"line_end":311,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":92877,"byte_end":92880,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ assert!(buf.is_empty());","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":92885,"byte_end":92913,"line_start":313,"line_end":313,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(1013, buf.capacity());","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":92918,"byte_end":92955,"line_start":314,"line_end":314,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":92960,"byte_end":92963,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(other, b\"hello world\"[..]);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":92968,"byte_end":93010,"line_start":316,"line_end":316,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":93015,"byte_end":93022,"line_start":317,"line_end":317,"column_start":5,"column_end":12}},{"value":"must_use =\n  \"consider BytesMut::advance(len()) if you don't need the other half\"","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":93027,"byte_end":93109,"line_start":318,"line_end":318,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":385},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":93994,"byte_end":94002,"line_start":351,"line_end":351,"column_start":12,"column_end":20},"name":"split_to","qualname":"<BytesMut>::split_to","value":"pub fn split_to(&mut Self, usize) -> BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Splits the buffer into two at the given index.","sig":null,"attributes":[{"value":"/ Splits the buffer into two at the given index.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":93220,"byte_end":93270,"line_start":324,"line_end":324,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":93275,"byte_end":93278,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ Afterwards `self` contains elements `[at, len)`, and the returned `BytesMut`","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":93283,"byte_end":93363,"line_start":326,"line_end":326,"column_start":5,"column_end":85}},{"value":"/ contains elements `[0, at)`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":93368,"byte_end":93400,"line_start":327,"line_end":327,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":93405,"byte_end":93408,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ This is an `O(1)` operation that just increases the reference count and","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":93413,"byte_end":93488,"line_start":329,"line_end":329,"column_start":5,"column_end":80}},{"value":"/ sets a few indices.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":93493,"byte_end":93516,"line_start":330,"line_end":330,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":93521,"byte_end":93524,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":93529,"byte_end":93543,"line_start":332,"line_end":332,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":93548,"byte_end":93551,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":93556,"byte_end":93563,"line_start":334,"line_end":334,"column_start":5,"column_end":12}},{"value":"/ use bytes::BytesMut;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":93568,"byte_end":93592,"line_start":335,"line_end":335,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":93597,"byte_end":93600,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ let mut a = BytesMut::from(&b\"hello world\"[..]);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":93605,"byte_end":93657,"line_start":337,"line_end":337,"column_start":5,"column_end":57}},{"value":"/ let mut b = a.split_to(5);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":93662,"byte_end":93692,"line_start":338,"line_end":338,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":93697,"byte_end":93700,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ a[0] = b'!';","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":93705,"byte_end":93721,"line_start":340,"line_end":340,"column_start":5,"column_end":21}},{"value":"/ b[0] = b'j';","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":93726,"byte_end":93742,"line_start":341,"line_end":341,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":93747,"byte_end":93750,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&a[..], b\"!world\");","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":93755,"byte_end":93789,"line_start":343,"line_end":343,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(&b[..], b\"jello\");","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":93794,"byte_end":93827,"line_start":344,"line_end":344,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":93832,"byte_end":93839,"line_start":345,"line_end":345,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":93844,"byte_end":93847,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":93852,"byte_end":93864,"line_start":347,"line_end":347,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":93869,"byte_end":93872,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ Panics if `at > len`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":93877,"byte_end":93902,"line_start":349,"line_end":349,"column_start":5,"column_end":30}},{"value":"must_use = \"consider BytesMut::advance if you don't need the other half\"","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":93907,"byte_end":93982,"line_start":350,"line_end":350,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":386},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":94963,"byte_end":94971,"line_start":387,"line_end":387,"column_start":12,"column_end":20},"name":"truncate","qualname":"<BytesMut>::truncate","value":"pub fn truncate(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Shortens the buffer, keeping the first `len` bytes and dropping the\n rest.","sig":null,"attributes":[{"value":"/ Shortens the buffer, keeping the first `len` bytes and dropping the","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":94359,"byte_end":94430,"line_start":367,"line_end":367,"column_start":5,"column_end":76}},{"value":"/ rest.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":94435,"byte_end":94444,"line_start":368,"line_end":368,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":94449,"byte_end":94452,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ If `len` is greater than the buffer's current length, this has no","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":94457,"byte_end":94526,"line_start":370,"line_end":370,"column_start":5,"column_end":74}},{"value":"/ effect.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":94531,"byte_end":94542,"line_start":371,"line_end":371,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":94547,"byte_end":94550,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ The [`split_off`] method can emulate `truncate`, but this causes the","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":94555,"byte_end":94627,"line_start":373,"line_end":373,"column_start":5,"column_end":77}},{"value":"/ excess bytes to be returned instead of dropped.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":94632,"byte_end":94683,"line_start":374,"line_end":374,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":94688,"byte_end":94691,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":94696,"byte_end":94710,"line_start":376,"line_end":376,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":94715,"byte_end":94718,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":94723,"byte_end":94730,"line_start":378,"line_end":378,"column_start":5,"column_end":12}},{"value":"/ use bytes::BytesMut;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":94735,"byte_end":94759,"line_start":379,"line_end":379,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":94764,"byte_end":94767,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ let mut buf = BytesMut::from(&b\"hello world\"[..]);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":94772,"byte_end":94826,"line_start":381,"line_end":381,"column_start":5,"column_end":59}},{"value":"/ buf.truncate(5);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":94831,"byte_end":94851,"line_start":382,"line_end":382,"column_start":5,"column_end":25}},{"value":"/ assert_eq!(buf, b\"hello\"[..]);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":94856,"byte_end":94890,"line_start":383,"line_end":383,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":94895,"byte_end":94902,"line_start":384,"line_end":384,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":94907,"byte_end":94910,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ [`split_off`]: #method.split_off","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":94915,"byte_end":94951,"line_start":386,"line_end":386,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":387},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":95353,"byte_end":95358,"line_start":404,"line_end":404,"column_start":12,"column_end":17},"name":"clear","qualname":"<BytesMut>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the buffer, removing all data.","sig":null,"attributes":[{"value":"/ Clears the buffer, removing all data.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":95091,"byte_end":95132,"line_start":393,"line_end":393,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":95137,"byte_end":95140,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":95145,"byte_end":95159,"line_start":395,"line_end":395,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":95164,"byte_end":95167,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":95172,"byte_end":95179,"line_start":397,"line_end":397,"column_start":5,"column_end":12}},{"value":"/ use bytes::BytesMut;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":95184,"byte_end":95208,"line_start":398,"line_end":398,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":95213,"byte_end":95216,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ let mut buf = BytesMut::from(&b\"hello world\"[..]);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":95221,"byte_end":95275,"line_start":400,"line_end":400,"column_start":5,"column_end":59}},{"value":"/ buf.clear();","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":95280,"byte_end":95296,"line_start":401,"line_end":401,"column_start":5,"column_end":21}},{"value":"/ assert!(buf.is_empty());","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":95301,"byte_end":95329,"line_start":402,"line_end":402,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":95334,"byte_end":95341,"line_start":403,"line_end":403,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":388},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":96083,"byte_end":96089,"line_start":430,"line_end":430,"column_start":12,"column_end":18},"name":"resize","qualname":"<BytesMut>::resize","value":"pub fn resize(&mut Self, usize, u8)","parent":null,"children":[],"decl_id":null,"docs":" Resizes the buffer so that `len` is equal to `new_len`.","sig":null,"attributes":[{"value":"/ Resizes the buffer so that `len` is equal to `new_len`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":95409,"byte_end":95468,"line_start":408,"line_end":408,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":95473,"byte_end":95476,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ If `new_len` is greater than `len`, the buffer is extended by the","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":95481,"byte_end":95550,"line_start":410,"line_end":410,"column_start":5,"column_end":74}},{"value":"/ difference with each additional byte set to `value`. If `new_len` is","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":95555,"byte_end":95627,"line_start":411,"line_end":411,"column_start":5,"column_end":77}},{"value":"/ less than `len`, the buffer is simply truncated.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":95632,"byte_end":95684,"line_start":412,"line_end":412,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":95689,"byte_end":95692,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":95697,"byte_end":95711,"line_start":414,"line_end":414,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":95716,"byte_end":95719,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":95724,"byte_end":95731,"line_start":416,"line_end":416,"column_start":5,"column_end":12}},{"value":"/ use bytes::BytesMut;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":95736,"byte_end":95760,"line_start":417,"line_end":417,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":95765,"byte_end":95768,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ let mut buf = BytesMut::new();","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":95773,"byte_end":95807,"line_start":419,"line_end":419,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":95812,"byte_end":95815,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ buf.resize(3, 0x1);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":95820,"byte_end":95843,"line_start":421,"line_end":421,"column_start":5,"column_end":28}},{"value":"/ assert_eq!(&buf[..], &[0x1, 0x1, 0x1]);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":95848,"byte_end":95891,"line_start":422,"line_end":422,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":95896,"byte_end":95899,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ buf.resize(2, 0x2);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":95904,"byte_end":95927,"line_start":424,"line_end":424,"column_start":5,"column_end":28}},{"value":"/ assert_eq!(&buf[..], &[0x1, 0x1]);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":95932,"byte_end":95970,"line_start":425,"line_end":425,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":95975,"byte_end":95978,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ buf.resize(4, 0x3);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":95983,"byte_end":96006,"line_start":427,"line_end":427,"column_start":5,"column_end":28}},{"value":"/ assert_eq!(&buf[..], &[0x1, 0x1, 0x3, 0x3]);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":96011,"byte_end":96059,"line_start":428,"line_end":428,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":96064,"byte_end":96071,"line_start":429,"line_end":429,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":389},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":97148,"byte_end":97155,"line_start":470,"line_end":470,"column_start":19,"column_end":26},"name":"set_len","qualname":"<BytesMut>::set_len","value":"pub unsafe fn set_len(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Sets the length of the buffer.","sig":null,"attributes":[{"value":"/ Sets the length of the buffer.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":96532,"byte_end":96566,"line_start":445,"line_end":445,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":96571,"byte_end":96574,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ This will explicitly set the size of the buffer without actually","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":96579,"byte_end":96647,"line_start":447,"line_end":447,"column_start":5,"column_end":73}},{"value":"/ modifying the data, so it is up to the caller to ensure that the data","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":96652,"byte_end":96725,"line_start":448,"line_end":448,"column_start":5,"column_end":78}},{"value":"/ has been initialized.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":96730,"byte_end":96755,"line_start":449,"line_end":449,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":96760,"byte_end":96763,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":96768,"byte_end":96782,"line_start":451,"line_end":451,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":96787,"byte_end":96790,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":96795,"byte_end":96802,"line_start":453,"line_end":453,"column_start":5,"column_end":12}},{"value":"/ use bytes::BytesMut;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":96807,"byte_end":96831,"line_start":454,"line_end":454,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":96836,"byte_end":96839,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ let mut b = BytesMut::from(&b\"hello world\"[..]);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":96844,"byte_end":96896,"line_start":456,"line_end":456,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":96901,"byte_end":96904,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ unsafe {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":96909,"byte_end":96921,"line_start":458,"line_end":458,"column_start":5,"column_end":17}},{"value":"/     b.set_len(5);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":96926,"byte_end":96947,"line_start":459,"line_end":459,"column_start":5,"column_end":26}},{"value":"/ }","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":96952,"byte_end":96957,"line_start":460,"line_end":460,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":96962,"byte_end":96965,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&b[..], b\"hello\");","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":96970,"byte_end":97003,"line_start":462,"line_end":462,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":97008,"byte_end":97011,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ unsafe {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":97016,"byte_end":97028,"line_start":464,"line_end":464,"column_start":5,"column_end":17}},{"value":"/     b.set_len(11);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":97033,"byte_end":97055,"line_start":465,"line_end":465,"column_start":5,"column_end":27}},{"value":"/ }","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":97060,"byte_end":97065,"line_start":466,"line_end":466,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":97070,"byte_end":97073,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&b[..], b\"hello world\");","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":97078,"byte_end":97117,"line_start":468,"line_end":468,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":97122,"byte_end":97129,"line_start":469,"line_end":469,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":390},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":98951,"byte_end":98958,"line_start":525,"line_end":525,"column_start":12,"column_end":19},"name":"reserve","qualname":"<BytesMut>::reserve","value":"pub fn reserve(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Reserves capacity for at least `additional` more bytes to be inserted\n into the given `BytesMut`.","sig":null,"attributes":[{"value":"/ Reserves capacity for at least `additional` more bytes to be inserted","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":97281,"byte_end":97354,"line_start":475,"line_end":475,"column_start":5,"column_end":78}},{"value":"/ into the given `BytesMut`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":97359,"byte_end":97389,"line_start":476,"line_end":476,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":97394,"byte_end":97397,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ More than `additional` bytes may be reserved in order to avoid frequent","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":97402,"byte_end":97477,"line_start":478,"line_end":478,"column_start":5,"column_end":80}},{"value":"/ reallocations. A call to `reserve` may result in an allocation.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":97482,"byte_end":97549,"line_start":479,"line_end":479,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":97554,"byte_end":97557,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ Before allocating new buffer space, the function will attempt to reclaim","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":97562,"byte_end":97638,"line_start":481,"line_end":481,"column_start":5,"column_end":81}},{"value":"/ space in the existing buffer. If the current handle references a small","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":97643,"byte_end":97717,"line_start":482,"line_end":482,"column_start":5,"column_end":79}},{"value":"/ view in the original buffer and all other handles have been dropped,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":97722,"byte_end":97794,"line_start":483,"line_end":483,"column_start":5,"column_end":77}},{"value":"/ and the requested capacity is less than or equal to the existing","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":97799,"byte_end":97867,"line_start":484,"line_end":484,"column_start":5,"column_end":73}},{"value":"/ buffer's capacity, then the current view will be copied to the front of","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":97872,"byte_end":97947,"line_start":485,"line_end":485,"column_start":5,"column_end":80}},{"value":"/ the buffer and the handle will take ownership of the full buffer.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":97952,"byte_end":98021,"line_start":486,"line_end":486,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":98026,"byte_end":98029,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":98034,"byte_end":98048,"line_start":488,"line_end":488,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":98053,"byte_end":98056,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ In the following example, a new buffer is allocated.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":98061,"byte_end":98117,"line_start":490,"line_end":490,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":98122,"byte_end":98125,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":98130,"byte_end":98137,"line_start":492,"line_end":492,"column_start":5,"column_end":12}},{"value":"/ use bytes::BytesMut;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":98142,"byte_end":98166,"line_start":493,"line_end":493,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":98171,"byte_end":98174,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/ let mut buf = BytesMut::from(&b\"hello\"[..]);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":98179,"byte_end":98227,"line_start":495,"line_end":495,"column_start":5,"column_end":53}},{"value":"/ buf.reserve(64);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":98232,"byte_end":98252,"line_start":496,"line_end":496,"column_start":5,"column_end":25}},{"value":"/ assert!(buf.capacity() >= 69);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":98257,"byte_end":98291,"line_start":497,"line_end":497,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":98296,"byte_end":98303,"line_start":498,"line_end":498,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":98308,"byte_end":98311,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ In the following example, the existing buffer is reclaimed.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":98316,"byte_end":98379,"line_start":500,"line_end":500,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":98384,"byte_end":98387,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":98392,"byte_end":98399,"line_start":502,"line_end":502,"column_start":5,"column_end":12}},{"value":"/ use bytes::{BytesMut, BufMut};","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":98404,"byte_end":98438,"line_start":503,"line_end":503,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":98443,"byte_end":98446,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ let mut buf = BytesMut::with_capacity(128);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":98451,"byte_end":98498,"line_start":505,"line_end":505,"column_start":5,"column_end":52}},{"value":"/ buf.put(&[0; 64][..]);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":98503,"byte_end":98529,"line_start":506,"line_end":506,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":98534,"byte_end":98537,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ let ptr = buf.as_ptr();","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":98542,"byte_end":98569,"line_start":508,"line_end":508,"column_start":5,"column_end":32}},{"value":"/ let other = buf.split();","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":98574,"byte_end":98602,"line_start":509,"line_end":509,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":98607,"byte_end":98610,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ assert!(buf.is_empty());","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":98615,"byte_end":98643,"line_start":511,"line_end":511,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(buf.capacity(), 64);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":98648,"byte_end":98683,"line_start":512,"line_end":512,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":98688,"byte_end":98691,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ drop(other);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":98696,"byte_end":98712,"line_start":514,"line_end":514,"column_start":5,"column_end":21}},{"value":"/ buf.reserve(128);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":98717,"byte_end":98738,"line_start":515,"line_end":515,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":98743,"byte_end":98746,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buf.capacity(), 128);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":98751,"byte_end":98787,"line_start":517,"line_end":517,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(buf.as_ptr(), ptr);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":98792,"byte_end":98826,"line_start":518,"line_end":518,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":98831,"byte_end":98838,"line_start":519,"line_end":519,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":98843,"byte_end":98846,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":98851,"byte_end":98863,"line_start":521,"line_end":521,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":98868,"byte_end":98871,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/ Panics if the new capacity overflows `usize`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":98876,"byte_end":98925,"line_start":523,"line_end":523,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":98930,"byte_end":98939,"line_start":524,"line_end":524,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":392},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":104421,"byte_end":104438,"line_start":672,"line_end":672,"column_start":12,"column_end":29},"name":"extend_from_slice","qualname":"<BytesMut>::extend_from_slice","value":"pub fn extend_from_slice(&mut Self, &[u8])","parent":null,"children":[],"decl_id":null,"docs":" Appends given bytes to this `BytesMut`.","sig":null,"attributes":[{"value":"/ Appends given bytes to this `BytesMut`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":103979,"byte_end":104022,"line_start":656,"line_end":656,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":104027,"byte_end":104030,"line_start":657,"line_end":657,"column_start":5,"column_end":8}},{"value":"/ If this `BytesMut` object does not have enough capacity, it is resized","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":104035,"byte_end":104109,"line_start":658,"line_end":658,"column_start":5,"column_end":79}},{"value":"/ first.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":104114,"byte_end":104124,"line_start":659,"line_end":659,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":104129,"byte_end":104132,"line_start":660,"line_end":660,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":104137,"byte_end":104151,"line_start":661,"line_end":661,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":104156,"byte_end":104159,"line_start":662,"line_end":662,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":104164,"byte_end":104171,"line_start":663,"line_end":663,"column_start":5,"column_end":12}},{"value":"/ use bytes::BytesMut;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":104176,"byte_end":104200,"line_start":664,"line_end":664,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":104205,"byte_end":104208,"line_start":665,"line_end":665,"column_start":5,"column_end":8}},{"value":"/ let mut buf = BytesMut::with_capacity(0);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":104213,"byte_end":104258,"line_start":666,"line_end":666,"column_start":5,"column_end":50}},{"value":"/ buf.extend_from_slice(b\"aaabbb\");","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":104263,"byte_end":104300,"line_start":667,"line_end":667,"column_start":5,"column_end":42}},{"value":"/ buf.extend_from_slice(b\"cccddd\");","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":104305,"byte_end":104342,"line_start":668,"line_end":668,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":104347,"byte_end":104350,"line_start":669,"line_end":669,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(b\"aaabbbcccddd\", &buf[..]);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":104355,"byte_end":104397,"line_start":670,"line_end":670,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":104402,"byte_end":104409,"line_start":671,"line_end":671,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":393},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":105699,"byte_end":105706,"line_start":714,"line_end":714,"column_start":12,"column_end":19},"name":"unsplit","qualname":"<BytesMut>::unsplit","value":"pub fn unsplit(&mut Self, BytesMut)","parent":null,"children":[],"decl_id":null,"docs":" Absorbs a `BytesMut` that was previously split off.","sig":null,"attributes":[{"value":"/ Absorbs a `BytesMut` that was previously split off.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":104872,"byte_end":104927,"line_start":691,"line_end":691,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":104932,"byte_end":104935,"line_start":692,"line_end":692,"column_start":5,"column_end":8}},{"value":"/ If the two `BytesMut` objects were previously contiguous, i.e., if","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":104940,"byte_end":105010,"line_start":693,"line_end":693,"column_start":5,"column_end":75}},{"value":"/ `other` was created by calling `split_off` on this `BytesMut`, then","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":105015,"byte_end":105086,"line_start":694,"line_end":694,"column_start":5,"column_end":76}},{"value":"/ this is an `O(1)` operation that just decreases a reference","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":105091,"byte_end":105154,"line_start":695,"line_end":695,"column_start":5,"column_end":68}},{"value":"/ count and sets a few indices. Otherwise this method degenerates to","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":105159,"byte_end":105229,"line_start":696,"line_end":696,"column_start":5,"column_end":75}},{"value":"/ `self.extend_from_slice(other.as_ref())`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":105234,"byte_end":105279,"line_start":697,"line_end":697,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":105284,"byte_end":105287,"line_start":698,"line_end":698,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":105292,"byte_end":105306,"line_start":699,"line_end":699,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":105311,"byte_end":105314,"line_start":700,"line_end":700,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":105319,"byte_end":105326,"line_start":701,"line_end":701,"column_start":5,"column_end":12}},{"value":"/ use bytes::BytesMut;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":105331,"byte_end":105355,"line_start":702,"line_end":702,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":105360,"byte_end":105363,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ let mut buf = BytesMut::with_capacity(64);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":105368,"byte_end":105414,"line_start":704,"line_end":704,"column_start":5,"column_end":51}},{"value":"/ buf.extend_from_slice(b\"aaabbbcccddd\");","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":105419,"byte_end":105462,"line_start":705,"line_end":705,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":105467,"byte_end":105470,"line_start":706,"line_end":706,"column_start":5,"column_end":8}},{"value":"/ let split = buf.split_off(6);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":105475,"byte_end":105508,"line_start":707,"line_end":707,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(b\"aaabbb\", &buf[..]);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":105513,"byte_end":105549,"line_start":708,"line_end":708,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(b\"cccddd\", &split[..]);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":105554,"byte_end":105592,"line_start":709,"line_end":709,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":105597,"byte_end":105600,"line_start":710,"line_end":710,"column_start":5,"column_end":8}},{"value":"/ buf.unsplit(split);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":105605,"byte_end":105628,"line_start":711,"line_end":711,"column_start":5,"column_end":28}},{"value":"/ assert_eq!(b\"aaabbbcccddd\", &buf[..]);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":105633,"byte_end":105675,"line_start":712,"line_end":712,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":105680,"byte_end":105687,"line_start":713,"line_end":713,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":577},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":130581,"byte_end":130586,"line_start":69,"line_end":69,"column_start":12,"column_end":17},"name":"Bytes","qualname":"::bytes::Bytes","value":"Bytes {  }","parent":null,"children":[{"krate":0,"index":578},{"krate":0,"index":579},{"krate":0,"index":580},{"krate":0,"index":581}],"decl_id":null,"docs":" A reference counted contiguous slice of memory.","sig":null,"attributes":[{"value":"/ A reference counted contiguous slice of memory.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":128472,"byte_end":128523,"line_start":11,"line_end":11,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":128524,"byte_end":128527,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ `Bytes` is an efficient container for storing and operating on contiguous","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":128528,"byte_end":128605,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/ slices of memory. It is intended for use primarily in networking code, but","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":128606,"byte_end":128684,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"/ could have applications elsewhere as well.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":128685,"byte_end":128731,"line_start":15,"line_end":15,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":128732,"byte_end":128735,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ `Bytes` values facilitate zero-copy network programming by allowing multiple","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":128736,"byte_end":128816,"line_start":17,"line_end":17,"column_start":1,"column_end":81}},{"value":"/ `Bytes` objects to point to the same underlying memory. This is managed by","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":128817,"byte_end":128895,"line_start":18,"line_end":18,"column_start":1,"column_end":79}},{"value":"/ using a reference count to track when the memory is no longer needed and can","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":128896,"byte_end":128976,"line_start":19,"line_end":19,"column_start":1,"column_end":81}},{"value":"/ be freed.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":128977,"byte_end":128990,"line_start":20,"line_end":20,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":128991,"byte_end":128994,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":128995,"byte_end":129002,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ use bytes::Bytes;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":129003,"byte_end":129024,"line_start":23,"line_end":23,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":129025,"byte_end":129028,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ let mut mem = Bytes::from(\"Hello world\");","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":129029,"byte_end":129074,"line_start":25,"line_end":25,"column_start":1,"column_end":46}},{"value":"/ let a = mem.slice(0..5);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":129075,"byte_end":129103,"line_start":26,"line_end":26,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":129104,"byte_end":129107,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(a, \"Hello\");","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":129108,"byte_end":129135,"line_start":28,"line_end":28,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":129136,"byte_end":129139,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ let b = mem.split_to(6);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":129140,"byte_end":129168,"line_start":30,"line_end":30,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":129169,"byte_end":129172,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(mem, \"world\");","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":129173,"byte_end":129202,"line_start":32,"line_end":32,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(b, \"Hello \");","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":129203,"byte_end":129231,"line_start":33,"line_end":33,"column_start":1,"column_end":29}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":129232,"byte_end":129239,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":129240,"byte_end":129243,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # Memory layout","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":129244,"byte_end":129263,"line_start":36,"line_end":36,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":129264,"byte_end":129267,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ The `Bytes` struct itself is fairly small, limited to 4 `usize` fields used","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":129268,"byte_end":129347,"line_start":38,"line_end":38,"column_start":1,"column_end":80}},{"value":"/ to track information about which segment of the underlying memory the","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":129348,"byte_end":129421,"line_start":39,"line_end":39,"column_start":1,"column_end":74}},{"value":"/ `Bytes` handle has access to.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":129422,"byte_end":129455,"line_start":40,"line_end":40,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":129456,"byte_end":129459,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ `Bytes` keeps both a pointer to the shared `Arc` containing the full memory","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":129460,"byte_end":129539,"line_start":42,"line_end":42,"column_start":1,"column_end":80}},{"value":"/ slice and a pointer to the start of the region visible by the handle.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":129540,"byte_end":129613,"line_start":43,"line_end":43,"column_start":1,"column_end":74}},{"value":"/ `Bytes` also tracks the length of its view into the memory.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":129614,"byte_end":129677,"line_start":44,"line_end":44,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":129678,"byte_end":129681,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ # Sharing","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":129682,"byte_end":129695,"line_start":46,"line_end":46,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":129696,"byte_end":129699,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ The memory itself is reference counted, and multiple `Bytes` objects may","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":129700,"byte_end":129776,"line_start":48,"line_end":48,"column_start":1,"column_end":77}},{"value":"/ point to the same region. Each `Bytes` handle point to different sections within","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":129777,"byte_end":129861,"line_start":49,"line_end":49,"column_start":1,"column_end":85}},{"value":"/ the memory region, and `Bytes` handle may or may not have overlapping views","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":129862,"byte_end":129941,"line_start":50,"line_end":50,"column_start":1,"column_end":80}},{"value":"/ into the memory.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":129942,"byte_end":129962,"line_start":51,"line_end":51,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":129963,"byte_end":129966,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":129967,"byte_end":129970,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":129971,"byte_end":129982,"line_start":54,"line_end":54,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":129983,"byte_end":129986,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/    Arc ptrs                   +---------+","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":129987,"byte_end":130032,"line_start":56,"line_end":56,"column_start":1,"column_end":46}},{"value":"/    ________________________ / | Bytes 2 |","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":130033,"byte_end":130078,"line_start":57,"line_end":57,"column_start":1,"column_end":46}},{"value":"/   /                           +---------+","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":130079,"byte_end":130124,"line_start":58,"line_end":58,"column_start":1,"column_end":46}},{"value":"/  /          +-----------+     |         |","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":130125,"byte_end":130170,"line_start":59,"line_end":59,"column_start":1,"column_end":46}},{"value":"/ |_________/ |  Bytes 1  |     |         |","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":130171,"byte_end":130216,"line_start":60,"line_end":60,"column_start":1,"column_end":46}},{"value":"/ |           +-----------+     |         |","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":130217,"byte_end":130262,"line_start":61,"line_end":61,"column_start":1,"column_end":46}},{"value":"/ |           |           | ___/ data     | tail","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":130263,"byte_end":130313,"line_start":62,"line_end":62,"column_start":1,"column_end":51}},{"value":"/ |      data |      tail |/              |","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":130314,"byte_end":130359,"line_start":63,"line_end":63,"column_start":1,"column_end":46}},{"value":"/ v           v           v               v","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":130360,"byte_end":130405,"line_start":64,"line_end":64,"column_start":1,"column_end":46}},{"value":"/ +-----+---------------------------------+-----+","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":130406,"byte_end":130457,"line_start":65,"line_end":65,"column_start":1,"column_end":52}},{"value":"/ | Arc |     |           |               |     |","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":130458,"byte_end":130509,"line_start":66,"line_end":66,"column_start":1,"column_end":52}},{"value":"/ +-----+---------------------------------+-----+","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":130510,"byte_end":130561,"line_start":67,"line_end":67,"column_start":1,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":130562,"byte_end":130569,"line_start":68,"line_end":68,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":586},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":131284,"byte_end":131287,"line_start":99,"line_end":99,"column_start":18,"column_end":21},"name":"new","qualname":"<Bytes>::new","value":"pub const fn new() -> Bytes","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty `Bytes`.","sig":null,"attributes":[{"value":"/ Creates a new empty `Bytes`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":130945,"byte_end":130977,"line_start":85,"line_end":85,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":130982,"byte_end":130985,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ This will not allocate and the returned `Bytes` handle will be empty.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":130990,"byte_end":131063,"line_start":87,"line_end":87,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":131068,"byte_end":131071,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":131076,"byte_end":131090,"line_start":89,"line_end":89,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":131095,"byte_end":131098,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":131103,"byte_end":131110,"line_start":91,"line_end":91,"column_start":5,"column_end":12}},{"value":"/ use bytes::Bytes;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":131115,"byte_end":131136,"line_start":92,"line_end":92,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":131141,"byte_end":131144,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ let b = Bytes::new();","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":131149,"byte_end":131174,"line_start":94,"line_end":94,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(&b[..], b\"\");","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":131179,"byte_end":131207,"line_start":95,"line_end":95,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":131212,"byte_end":131219,"line_start":96,"line_end":96,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":131224,"byte_end":131233,"line_start":97,"line_end":97,"column_start":5,"column_end":14}},{"value":"cfg(not(all(loom, test)))","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":131238,"byte_end":131266,"line_start":98,"line_end":98,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":588},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":132024,"byte_end":132035,"line_start":127,"line_end":127,"column_start":18,"column_end":29},"name":"from_static","qualname":"<Bytes>::from_static","value":"pub const fn from_static(&'static [u8]) -> Bytes","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Bytes` from a static slice.","sig":null,"attributes":[{"value":"/ Creates a new `Bytes` from a static slice.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":131615,"byte_end":131661,"line_start":112,"line_end":112,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":131666,"byte_end":131669,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ The returned `Bytes` will point directly to the static slice. There is","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":131674,"byte_end":131748,"line_start":114,"line_end":114,"column_start":5,"column_end":79}},{"value":"/ no allocating or copying.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":131753,"byte_end":131782,"line_start":115,"line_end":115,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":131787,"byte_end":131790,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":131795,"byte_end":131809,"line_start":117,"line_end":117,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":131814,"byte_end":131817,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":131822,"byte_end":131829,"line_start":119,"line_end":119,"column_start":5,"column_end":12}},{"value":"/ use bytes::Bytes;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":131834,"byte_end":131855,"line_start":120,"line_end":120,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":131860,"byte_end":131863,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ let b = Bytes::from_static(b\"hello\");","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":131868,"byte_end":131909,"line_start":122,"line_end":122,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(&b[..], b\"hello\");","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":131914,"byte_end":131947,"line_start":123,"line_end":123,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":131952,"byte_end":131959,"line_start":124,"line_end":124,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":131964,"byte_end":131973,"line_start":125,"line_end":125,"column_start":5,"column_end":14}},{"value":"cfg(not(all(loom, test)))","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":131978,"byte_end":132006,"line_start":126,"line_end":126,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":589},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":132776,"byte_end":132779,"line_start":157,"line_end":157,"column_start":12,"column_end":15},"name":"len","qualname":"<Bytes>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes contained in this `Bytes`.","sig":null,"attributes":[{"value":"/ Returns the number of bytes contained in this `Bytes`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":132523,"byte_end":132581,"line_start":146,"line_end":146,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":132586,"byte_end":132589,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":132594,"byte_end":132608,"line_start":148,"line_end":148,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":132613,"byte_end":132616,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":132621,"byte_end":132628,"line_start":150,"line_end":150,"column_start":5,"column_end":12}},{"value":"/ use bytes::Bytes;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":132633,"byte_end":132654,"line_start":151,"line_end":151,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":132659,"byte_end":132662,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ let b = Bytes::from(&b\"hello\"[..]);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":132667,"byte_end":132706,"line_start":153,"line_end":153,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(b.len(), 5);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":132711,"byte_end":132738,"line_start":154,"line_end":154,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":132743,"byte_end":132750,"line_start":155,"line_end":155,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":132755,"byte_end":132764,"line_start":156,"line_end":156,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":590},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":133056,"byte_end":133064,"line_start":172,"line_end":172,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Bytes>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the `Bytes` has a length of 0.","sig":null,"attributes":[{"value":"/ Returns true if the `Bytes` has a length of 0.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":132826,"byte_end":132876,"line_start":161,"line_end":161,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":132881,"byte_end":132884,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":132889,"byte_end":132903,"line_start":163,"line_end":163,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":132908,"byte_end":132911,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":132916,"byte_end":132923,"line_start":165,"line_end":165,"column_start":5,"column_end":12}},{"value":"/ use bytes::Bytes;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":132928,"byte_end":132949,"line_start":166,"line_end":166,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":132954,"byte_end":132957,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ let b = Bytes::new();","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":132962,"byte_end":132987,"line_start":168,"line_end":168,"column_start":5,"column_end":30}},{"value":"/ assert!(b.is_empty());","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":132992,"byte_end":133018,"line_start":169,"line_end":169,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":133023,"byte_end":133030,"line_start":170,"line_end":170,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":133035,"byte_end":133044,"line_start":171,"line_end":171,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":591},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":133182,"byte_end":133197,"line_start":178,"line_end":178,"column_start":12,"column_end":27},"name":"copy_from_slice","qualname":"<Bytes>::copy_from_slice","value":"pub fn copy_from_slice(&[u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":"Creates `Bytes` instance from slice, by copying it.\n","sig":null,"attributes":[{"value":"/Creates `Bytes` instance from slice, by copying it.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":133116,"byte_end":133170,"line_start":177,"line_end":177,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":592},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":133857,"byte_end":133862,"line_start":204,"line_end":204,"column_start":12,"column_end":17},"name":"slice","qualname":"<Bytes>::slice","value":"pub fn slice<impl RangeBounds<usize>: RangeBounds<usize>>(&Self,\n                                                          impl RangeBounds<usize>)\n-> Bytes","parent":null,"children":[],"decl_id":null,"docs":" Returns a slice of self for the provided range.","sig":null,"attributes":[{"value":"/ Returns a slice of self for the provided range.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":133261,"byte_end":133312,"line_start":182,"line_end":182,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":133317,"byte_end":133320,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ This will increment the reference count for the underlying memory and","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":133325,"byte_end":133398,"line_start":184,"line_end":184,"column_start":5,"column_end":78}},{"value":"/ return a new `Bytes` handle set to the slice.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":133403,"byte_end":133452,"line_start":185,"line_end":185,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":133457,"byte_end":133460,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ This operation is `O(1)`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":133465,"byte_end":133494,"line_start":187,"line_end":187,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":133499,"byte_end":133502,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":133507,"byte_end":133521,"line_start":189,"line_end":189,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":133526,"byte_end":133529,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":133534,"byte_end":133541,"line_start":191,"line_end":191,"column_start":5,"column_end":12}},{"value":"/ use bytes::Bytes;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":133546,"byte_end":133567,"line_start":192,"line_end":192,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":133572,"byte_end":133575,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ let a = Bytes::from(&b\"hello world\"[..]);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":133580,"byte_end":133625,"line_start":194,"line_end":194,"column_start":5,"column_end":50}},{"value":"/ let b = a.slice(2..5);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":133630,"byte_end":133656,"line_start":195,"line_end":195,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":133661,"byte_end":133664,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&b[..], b\"llo\");","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":133669,"byte_end":133700,"line_start":197,"line_end":197,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":133705,"byte_end":133712,"line_start":198,"line_end":198,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":133717,"byte_end":133720,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":133725,"byte_end":133737,"line_start":200,"line_end":200,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":133742,"byte_end":133745,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ Requires that `begin <= end` and `end <= self.len()`, otherwise slicing","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":133750,"byte_end":133825,"line_start":202,"line_end":202,"column_start":5,"column_end":80}},{"value":"/ will panic.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":133830,"byte_end":133845,"line_start":203,"line_end":203,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":595},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":135769,"byte_end":135778,"line_start":272,"line_end":272,"column_start":12,"column_end":21},"name":"slice_ref","qualname":"<Bytes>::slice_ref","value":"pub fn slice_ref(&Self, &[u8]) -> Bytes","parent":null,"children":[],"decl_id":null,"docs":" Returns a slice of self that is equivalent to the given `subset`.","sig":null,"attributes":[{"value":"/ Returns a slice of self that is equivalent to the given `subset`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":134847,"byte_end":134916,"line_start":247,"line_end":247,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":134921,"byte_end":134924,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ When processing a `Bytes` buffer with other tools, one often gets a","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":134929,"byte_end":135000,"line_start":249,"line_end":249,"column_start":5,"column_end":76}},{"value":"/ `&[u8]` which is in fact a slice of the `Bytes`, i.e. a subset of it.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":135005,"byte_end":135078,"line_start":250,"line_end":250,"column_start":5,"column_end":78}},{"value":"/ This function turns that `&[u8]` into another `Bytes`, as if one had","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":135083,"byte_end":135155,"line_start":251,"line_end":251,"column_start":5,"column_end":77}},{"value":"/ called `self.slice()` with the offsets that correspond to `subset`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":135160,"byte_end":135231,"line_start":252,"line_end":252,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":135236,"byte_end":135239,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ This operation is `O(1)`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":135244,"byte_end":135273,"line_start":254,"line_end":254,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":135278,"byte_end":135281,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":135286,"byte_end":135300,"line_start":256,"line_end":256,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":135305,"byte_end":135308,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":135313,"byte_end":135320,"line_start":258,"line_end":258,"column_start":5,"column_end":12}},{"value":"/ use bytes::Bytes;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":135325,"byte_end":135346,"line_start":259,"line_end":259,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":135351,"byte_end":135354,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ let bytes = Bytes::from(&b\"012345678\"[..]);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":135359,"byte_end":135406,"line_start":261,"line_end":261,"column_start":5,"column_end":52}},{"value":"/ let as_slice = bytes.as_ref();","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":135411,"byte_end":135445,"line_start":262,"line_end":262,"column_start":5,"column_end":39}},{"value":"/ let subset = &as_slice[2..6];","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":135450,"byte_end":135483,"line_start":263,"line_end":263,"column_start":5,"column_end":38}},{"value":"/ let subslice = bytes.slice_ref(&subset);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":135488,"byte_end":135532,"line_start":264,"line_end":264,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(&subslice[..], b\"2345\");","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":135537,"byte_end":135576,"line_start":265,"line_end":265,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":135581,"byte_end":135588,"line_start":266,"line_end":266,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":135593,"byte_end":135596,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":135601,"byte_end":135613,"line_start":268,"line_end":268,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":135618,"byte_end":135621,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ Requires that the given `sub` slice is in fact contained within the","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":135626,"byte_end":135697,"line_start":270,"line_end":270,"column_start":5,"column_end":76}},{"value":"/ `Bytes` buffer; otherwise this function will panic.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":135702,"byte_end":135757,"line_start":271,"line_end":271,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":596},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":137481,"byte_end":137490,"line_start":329,"line_end":329,"column_start":12,"column_end":21},"name":"split_off","qualname":"<Bytes>::split_off","value":"pub fn split_off(&mut Self, usize) -> Bytes","parent":null,"children":[],"decl_id":null,"docs":" Splits the bytes into two at the given index.","sig":null,"attributes":[{"value":"/ Splits the bytes into two at the given index.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":136772,"byte_end":136821,"line_start":305,"line_end":305,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":136826,"byte_end":136829,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ Afterwards `self` contains elements `[0, at)`, and the returned `Bytes`","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":136834,"byte_end":136909,"line_start":307,"line_end":307,"column_start":5,"column_end":80}},{"value":"/ contains elements `[at, len)`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":136914,"byte_end":136948,"line_start":308,"line_end":308,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":136953,"byte_end":136956,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ This is an `O(1)` operation that just increases the reference count and","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":136961,"byte_end":137036,"line_start":310,"line_end":310,"column_start":5,"column_end":80}},{"value":"/ sets a few indices.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":137041,"byte_end":137064,"line_start":311,"line_end":311,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":137069,"byte_end":137072,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":137077,"byte_end":137091,"line_start":313,"line_end":313,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":137096,"byte_end":137099,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":137104,"byte_end":137111,"line_start":315,"line_end":315,"column_start":5,"column_end":12}},{"value":"/ use bytes::Bytes;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":137116,"byte_end":137137,"line_start":316,"line_end":316,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":137142,"byte_end":137145,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ let mut a = Bytes::from(&b\"hello world\"[..]);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":137150,"byte_end":137199,"line_start":318,"line_end":318,"column_start":5,"column_end":54}},{"value":"/ let b = a.split_off(5);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":137204,"byte_end":137231,"line_start":319,"line_end":319,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":137236,"byte_end":137239,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&a[..], b\"hello\");","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":137244,"byte_end":137277,"line_start":321,"line_end":321,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(&b[..], b\" world\");","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":137282,"byte_end":137316,"line_start":322,"line_end":322,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":137321,"byte_end":137328,"line_start":323,"line_end":323,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":137333,"byte_end":137336,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":137341,"byte_end":137353,"line_start":325,"line_end":325,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":137358,"byte_end":137361,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ Panics if `at > len`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":137366,"byte_end":137391,"line_start":327,"line_end":327,"column_start":5,"column_end":30}},{"value":"must_use = \"consider Bytes::truncate if you don't need the other half\"","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":137396,"byte_end":137469,"line_start":328,"line_end":328,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":597},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":138665,"byte_end":138673,"line_start":378,"line_end":378,"column_start":12,"column_end":20},"name":"split_to","qualname":"<Bytes>::split_to","value":"pub fn split_to(&mut Self, usize) -> Bytes","parent":null,"children":[],"decl_id":null,"docs":" Splits the bytes into two at the given index.","sig":null,"attributes":[{"value":"/ Splits the bytes into two at the given index.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":137958,"byte_end":138007,"line_start":354,"line_end":354,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":138012,"byte_end":138015,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ Afterwards `self` contains elements `[at, len)`, and the returned","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":138020,"byte_end":138089,"line_start":356,"line_end":356,"column_start":5,"column_end":74}},{"value":"/ `Bytes` contains elements `[0, at)`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":138094,"byte_end":138134,"line_start":357,"line_end":357,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":138139,"byte_end":138142,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ This is an `O(1)` operation that just increases the reference count and","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":138147,"byte_end":138222,"line_start":359,"line_end":359,"column_start":5,"column_end":80}},{"value":"/ sets a few indices.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":138227,"byte_end":138250,"line_start":360,"line_end":360,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":138255,"byte_end":138258,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":138263,"byte_end":138277,"line_start":362,"line_end":362,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":138282,"byte_end":138285,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":138290,"byte_end":138297,"line_start":364,"line_end":364,"column_start":5,"column_end":12}},{"value":"/ use bytes::Bytes;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":138302,"byte_end":138323,"line_start":365,"line_end":365,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":138328,"byte_end":138331,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ let mut a = Bytes::from(&b\"hello world\"[..]);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":138336,"byte_end":138385,"line_start":367,"line_end":367,"column_start":5,"column_end":54}},{"value":"/ let b = a.split_to(5);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":138390,"byte_end":138416,"line_start":368,"line_end":368,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":138421,"byte_end":138424,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&a[..], b\" world\");","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":138429,"byte_end":138463,"line_start":370,"line_end":370,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(&b[..], b\"hello\");","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":138468,"byte_end":138501,"line_start":371,"line_end":371,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":138506,"byte_end":138513,"line_start":372,"line_end":372,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":138518,"byte_end":138521,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":138526,"byte_end":138538,"line_start":374,"line_end":374,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":138543,"byte_end":138546,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ Panics if `at > len`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":138551,"byte_end":138576,"line_start":376,"line_end":376,"column_start":5,"column_end":30}},{"value":"must_use = \"consider Bytes::advance if you don't need the other half\"","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":138581,"byte_end":138653,"line_start":377,"line_end":377,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":598},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":139752,"byte_end":139760,"line_start":424,"line_end":424,"column_start":12,"column_end":20},"name":"truncate","qualname":"<Bytes>::truncate","value":"pub fn truncate(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Shortens the buffer, keeping the first `len` bytes and dropping the\n rest.","sig":null,"attributes":[{"value":"/ Shortens the buffer, keeping the first `len` bytes and dropping the","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":139140,"byte_end":139211,"line_start":403,"line_end":403,"column_start":5,"column_end":76}},{"value":"/ rest.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":139216,"byte_end":139225,"line_start":404,"line_end":404,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":139230,"byte_end":139233,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ If `len` is greater than the buffer's current length, this has no","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":139238,"byte_end":139307,"line_start":406,"line_end":406,"column_start":5,"column_end":74}},{"value":"/ effect.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":139312,"byte_end":139323,"line_start":407,"line_end":407,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":139328,"byte_end":139331,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ The [`split_off`] method can emulate `truncate`, but this causes the","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":139336,"byte_end":139408,"line_start":409,"line_end":409,"column_start":5,"column_end":77}},{"value":"/ excess bytes to be returned instead of dropped.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":139413,"byte_end":139464,"line_start":410,"line_end":410,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":139469,"byte_end":139472,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":139477,"byte_end":139491,"line_start":412,"line_end":412,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":139496,"byte_end":139499,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":139504,"byte_end":139511,"line_start":414,"line_end":414,"column_start":5,"column_end":12}},{"value":"/ use bytes::Bytes;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":139516,"byte_end":139537,"line_start":415,"line_end":415,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":139542,"byte_end":139545,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ let mut buf = Bytes::from(&b\"hello world\"[..]);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":139550,"byte_end":139601,"line_start":417,"line_end":417,"column_start":5,"column_end":56}},{"value":"/ buf.truncate(5);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":139606,"byte_end":139626,"line_start":418,"line_end":418,"column_start":5,"column_end":25}},{"value":"/ assert_eq!(buf, b\"hello\"[..]);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":139631,"byte_end":139665,"line_start":419,"line_end":419,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":139670,"byte_end":139677,"line_start":420,"line_end":420,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":139682,"byte_end":139685,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ [`split_off`]: #method.split_off","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":139690,"byte_end":139726,"line_start":422,"line_end":422,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":139731,"byte_end":139740,"line_start":423,"line_end":423,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":599},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":140578,"byte_end":140583,"line_start":450,"line_end":450,"column_start":12,"column_end":17},"name":"clear","qualname":"<Bytes>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the buffer, removing all data.","sig":null,"attributes":[{"value":"/ Clears the buffer, removing all data.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":140308,"byte_end":140349,"line_start":438,"line_end":438,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":140354,"byte_end":140357,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":140362,"byte_end":140376,"line_start":440,"line_end":440,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":140381,"byte_end":140384,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":140389,"byte_end":140396,"line_start":442,"line_end":442,"column_start":5,"column_end":12}},{"value":"/ use bytes::Bytes;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":140401,"byte_end":140422,"line_start":443,"line_end":443,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":140427,"byte_end":140430,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ let mut buf = Bytes::from(&b\"hello world\"[..]);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":140435,"byte_end":140486,"line_start":445,"line_end":445,"column_start":5,"column_end":56}},{"value":"/ buf.clear();","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":140491,"byte_end":140507,"line_start":446,"line_end":446,"column_start":5,"column_end":21}},{"value":"/ assert!(buf.is_empty());","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":140512,"byte_end":140540,"line_start":447,"line_end":447,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":140545,"byte_end":140552,"line_start":448,"line_end":448,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":140557,"byte_end":140566,"line_start":449,"line_end":449,"column_start":5,"column_end":14}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":29566,"byte_end":29569,"line_start":922,"line_end":922,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":869},{"krate":0,"index":870},{"krate":0,"index":871},{"krate":0,"index":873},{"krate":0,"index":874},{"krate":0,"index":875},{"krate":0,"index":876},{"krate":0,"index":877},{"krate":0,"index":878},{"krate":0,"index":879},{"krate":0,"index":880},{"krate":0,"index":881},{"krate":0,"index":882},{"krate":0,"index":883},{"krate":0,"index":884},{"krate":0,"index":885},{"krate":0,"index":886},{"krate":0,"index":887},{"krate":0,"index":888},{"krate":0,"index":889},{"krate":0,"index":890},{"krate":0,"index":891},{"krate":0,"index":892},{"krate":0,"index":893},{"krate":0,"index":894}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":29871,"byte_end":29877,"line_start":943,"line_end":943,"column_start":14,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":65}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":30445,"byte_end":30451,"line_start":972,"line_end":972,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":70}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":56863,"byte_end":56866,"line_start":959,"line_end":959,"column_start":37,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":915},{"krate":0,"index":916},{"krate":0,"index":917},{"krate":0,"index":919},{"krate":0,"index":920},{"krate":0,"index":921},{"krate":0,"index":922},{"krate":0,"index":923},{"krate":0,"index":924},{"krate":0,"index":925},{"krate":0,"index":926},{"krate":0,"index":927},{"krate":0,"index":928},{"krate":0,"index":929},{"krate":0,"index":930},{"krate":0,"index":931},{"krate":0,"index":932},{"krate":0,"index":933},{"krate":0,"index":934}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":57449,"byte_end":57452,"line_start":983,"line_end":983,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":134},{"krate":0,"index":136}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":59742,"byte_end":59752,"line_start":1064,"line_end":1064,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":143}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":59987,"byte_end":59997,"line_start":1073,"line_end":1073,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":146}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":60183,"byte_end":60193,"line_start":1080,"line_end":1080,"column_start":46,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":149}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/chain.rs","byte_start":66304,"byte_end":66309,"line_start":41,"line_end":41,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":171}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/chain.rs","byte_start":68537,"byte_end":68542,"line_start":139,"line_end":139,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":178}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/chain.rs","byte_start":69437,"byte_end":69442,"line_start":181,"line_end":181,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":186}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/chain.rs","byte_start":70444,"byte_end":70449,"line_start":223,"line_end":223,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":193}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/limit.rs","byte_start":70985,"byte_end":70990,"line_start":20,"line_end":20,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":207}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/limit.rs","byte_start":72135,"byte_end":72140,"line_start":61,"line_end":61,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":212}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/reader.rs","byte_start":72994,"byte_end":73000,"line_start":19,"line_end":19,"column_start":14,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":225}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/reader.rs","byte_start":74115,"byte_end":74121,"line_start":65,"line_end":65,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":228}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/reader.rs","byte_start":74374,"byte_end":74380,"line_start":74,"line_end":74,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":231},{"krate":0,"index":232}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/take.rs","byte_start":74993,"byte_end":74997,"line_start":22,"line_end":22,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":243},{"krate":0,"index":244}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/take.rs","byte_start":77721,"byte_end":77725,"line_start":135,"line_end":135,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":247},{"krate":0,"index":248},{"krate":0,"index":249}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/writer.rs","byte_start":78514,"byte_end":78520,"line_start":19,"line_end":19,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":261}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/writer.rs","byte_start":79920,"byte_end":79926,"line_start":77,"line_end":77,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":264},{"krate":0,"index":265}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":63137,"byte_end":63138,"line_start":99,"line_end":99,"column_start":34,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":65290,"byte_end":65291,"line_start":176,"line_end":176,"column_start":40,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/iter.rs","byte_start":80785,"byte_end":80793,"line_start":30,"line_end":30,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":293}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/iter.rs","byte_start":82870,"byte_end":82878,"line_start":113,"line_end":113,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":296},{"krate":0,"index":297},{"krate":0,"index":298}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/iter.rs","byte_start":83278,"byte_end":83286,"line_start":133,"line_end":133,"column_start":36,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/vec_deque.rs","byte_start":83360,"byte_end":83368,"line_start":5,"line_end":5,"column_start":14,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":305},{"krate":0,"index":306},{"krate":0,"index":307}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":87143,"byte_end":87151,"line_start":106,"line_end":106,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":377},{"krate":0,"index":378},{"krate":0,"index":379},{"krate":0,"index":380},{"krate":0,"index":381},{"krate":0,"index":382},{"krate":0,"index":383},{"krate":0,"index":384},{"krate":0,"index":385},{"krate":0,"index":386},{"krate":0,"index":387},{"krate":0,"index":388},{"krate":0,"index":389},{"krate":0,"index":390},{"krate":0,"index":391},{"krate":0,"index":392},{"krate":0,"index":393},{"krate":0,"index":394},{"krate":0,"index":395},{"krate":0,"index":396},{"krate":0,"index":397},{"krate":0,"index":398},{"krate":0,"index":399},{"krate":0,"index":400},{"krate":0,"index":401},{"krate":0,"index":402},{"krate":0,"index":403},{"krate":0,"index":404},{"krate":0,"index":405}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":112272,"byte_end":112280,"line_start":919,"line_end":919,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":407}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":112714,"byte_end":112722,"line_start":936,"line_end":936,"column_start":14,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":409},{"krate":0,"index":410},{"krate":0,"index":411},{"krate":0,"index":412}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":113250,"byte_end":113258,"line_start":963,"line_end":963,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":414},{"krate":0,"index":415},{"krate":0,"index":416},{"krate":0,"index":417},{"krate":0,"index":419}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":114241,"byte_end":114249,"line_start":1001,"line_end":1001,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":421}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":114346,"byte_end":114354,"line_start":1008,"line_end":1008,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":423},{"krate":0,"index":424}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":114479,"byte_end":114487,"line_start":1017,"line_end":1017,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":426}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":114585,"byte_end":114593,"line_start":1023,"line_end":1023,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":428}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":114712,"byte_end":114720,"line_start":1030,"line_end":1030,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":431}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":114841,"byte_end":114849,"line_start":1036,"line_end":1036,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":434}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":114964,"byte_end":114969,"line_start":1042,"line_end":1042,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":436}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":115059,"byte_end":115067,"line_start":1048,"line_end":1048,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":438}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":115188,"byte_end":115196,"line_start":1054,"line_end":1054,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":440}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":115346,"byte_end":115354,"line_start":1060,"line_end":1060,"column_start":14,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":442}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":115479,"byte_end":115487,"line_start":1066,"line_end":1066,"column_start":13,"column_end":21},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":115510,"byte_end":115518,"line_start":1069,"line_end":1069,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":445}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":115619,"byte_end":115627,"line_start":1076,"line_end":1076,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":447}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":115783,"byte_end":115791,"line_start":1083,"line_end":1083,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":450}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":115882,"byte_end":115890,"line_start":1089,"line_end":1089,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":452}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":115988,"byte_end":115996,"line_start":1095,"line_end":1095,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":454},{"krate":0,"index":455}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":116375,"byte_end":116383,"line_start":1112,"line_end":1112,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":457}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":116485,"byte_end":116493,"line_start":1118,"line_end":1118,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":459},{"krate":0,"index":460},{"krate":0,"index":461}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":116856,"byte_end":116864,"line_start":1136,"line_end":1136,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":468}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":117303,"byte_end":117311,"line_start":1153,"line_end":1153,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":472}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":117475,"byte_end":117483,"line_start":1159,"line_end":1159,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":476}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":117652,"byte_end":117660,"line_start":1165,"line_end":1165,"column_start":35,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":480}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":119298,"byte_end":119304,"line_start":1214,"line_end":1214,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":486}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":122145,"byte_end":122153,"line_start":1294,"line_end":1294,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":122178,"byte_end":122186,"line_start":1295,"line_end":1295,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":122268,"byte_end":122276,"line_start":1303,"line_end":1303,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":492}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":122380,"byte_end":122388,"line_start":1309,"line_end":1309,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":494}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":122819,"byte_end":122827,"line_start":1327,"line_end":1327,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":500}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":122940,"byte_end":122948,"line_start":1333,"line_end":1333,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":502}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":123402,"byte_end":123410,"line_start":1351,"line_end":1351,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":508}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":123523,"byte_end":123531,"line_start":1357,"line_end":1357,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":510}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":123683,"byte_end":123686,"line_start":1363,"line_end":1363,"column_start":30,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":512}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":123801,"byte_end":123804,"line_start":1369,"line_end":1369,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":514}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":123950,"byte_end":123958,"line_start":1375,"line_end":1375,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":516}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":124069,"byte_end":124077,"line_start":1381,"line_end":1381,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":518}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":124234,"byte_end":124240,"line_start":1387,"line_end":1387,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":520}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":124351,"byte_end":124357,"line_start":1393,"line_end":1393,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":522}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":124553,"byte_end":124561,"line_start":1399,"line_end":1399,"column_start":42,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":526}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":124715,"byte_end":124723,"line_start":1407,"line_end":1407,"column_start":43,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":530}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":125456,"byte_end":125461,"line_start":1439,"line_end":1439,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":540}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":125576,"byte_end":125584,"line_start":1445,"line_end":1445,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":542}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":130933,"byte_end":130938,"line_start":84,"line_end":84,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":586},{"krate":0,"index":588},{"krate":0,"index":589},{"krate":0,"index":590},{"krate":0,"index":591},{"krate":0,"index":592},{"krate":0,"index":595},{"krate":0,"index":596},{"krate":0,"index":597},{"krate":0,"index":598},{"krate":0,"index":599},{"krate":0,"index":600},{"krate":0,"index":601},{"krate":0,"index":602}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":141367,"byte_end":141372,"line_start":483,"line_end":483,"column_start":22,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":141397,"byte_end":141402,"line_start":484,"line_end":484,"column_start":22,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":141421,"byte_end":141426,"line_start":486,"line_end":486,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":606}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":141586,"byte_end":141591,"line_start":495,"line_end":495,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":608}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":141752,"byte_end":141757,"line_start":504,"line_end":504,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":610},{"krate":0,"index":611},{"krate":0,"index":612},{"krate":0,"index":613}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":142310,"byte_end":142315,"line_start":534,"line_end":534,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":615},{"krate":0,"index":616}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":142442,"byte_end":142447,"line_start":543,"line_end":543,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":618}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":142549,"byte_end":142554,"line_start":550,"line_end":550,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":620}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":142686,"byte_end":142691,"line_start":556,"line_end":556,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":623}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":142781,"byte_end":142786,"line_start":562,"line_end":562,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":625},{"krate":0,"index":626},{"krate":0,"index":627}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":143151,"byte_end":143156,"line_start":580,"line_end":580,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":634}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":143309,"byte_end":143314,"line_start":588,"line_end":588,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":637}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":143432,"byte_end":143437,"line_start":594,"line_end":594,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":639}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":143584,"byte_end":143589,"line_start":600,"line_end":600,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":641}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":143711,"byte_end":143716,"line_start":606,"line_end":606,"column_start":13,"column_end":18},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":143746,"byte_end":143751,"line_start":608,"line_end":608,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":644}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":143863,"byte_end":143868,"line_start":614,"line_end":614,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":646}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":144294,"byte_end":144299,"line_start":632,"line_end":632,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":652}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":144420,"byte_end":144425,"line_start":638,"line_end":638,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":654}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":144874,"byte_end":144879,"line_start":656,"line_end":656,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":660}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":144992,"byte_end":144997,"line_start":662,"line_end":662,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":662}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":145153,"byte_end":145156,"line_start":668,"line_end":668,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":664}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":145265,"byte_end":145268,"line_start":674,"line_end":674,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":666}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":145440,"byte_end":145445,"line_start":680,"line_end":680,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":668}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":145556,"byte_end":145561,"line_start":686,"line_end":686,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":670}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":145722,"byte_end":145728,"line_start":692,"line_end":692,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":672}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":145833,"byte_end":145839,"line_start":698,"line_end":698,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":674}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":146605,"byte_end":146610,"line_start":728,"line_end":728,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":686}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":146761,"byte_end":146766,"line_start":736,"line_end":736,"column_start":43,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":690}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":146943,"byte_end":146948,"line_start":746,"line_end":746,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":692}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":147052,"byte_end":147057,"line_start":753,"line_end":753,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":694}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":147176,"byte_end":147181,"line_start":759,"line_end":759,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":696}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":147305,"byte_end":147310,"line_start":765,"line_end":765,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":698}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":148240,"byte_end":148245,"line_start":798,"line_end":798,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":700}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":148375,"byte_end":148381,"line_start":806,"line_end":806,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":702}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/fmt/debug.rs","byte_start":158008,"byte_end":158016,"line_start":12,"line_end":12,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":740}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/fmt/debug.rs","byte_start":158850,"byte_end":158855,"line_start":39,"line_end":39,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":742}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/fmt/debug.rs","byte_start":158984,"byte_end":158992,"line_start":45,"line_end":45,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":744}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/fmt/hex.rs","byte_start":159233,"byte_end":159241,"line_start":6,"line_end":6,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":756}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/fmt/hex.rs","byte_start":159417,"byte_end":159425,"line_start":15,"line_end":15,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":758}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/lib.rs","byte_start":2868,"byte_end":2871,"line_start":81,"line_end":81,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":6}},{"kind":"Mod","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/mod.rs","byte_start":4213,"byte_end":4216,"line_start":21,"line_end":21,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":150}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":29566,"byte_end":29569,"line_start":922,"line_end":922,"column_start":31,"column_end":34},"kind":{"Impl":{"id":0}},"from":{"krate":4,"index":105},"to":{"krate":0,"index":16}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":29871,"byte_end":29877,"line_start":943,"line_end":943,"column_start":14,"column_end":20},"kind":{"Impl":{"id":1}},"from":{"krate":1,"index":34651},"to":{"krate":0,"index":16}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_impl.rs","byte_start":30445,"byte_end":30451,"line_start":972,"line_end":972,"column_start":39,"column_end":45},"kind":{"Impl":{"id":2}},"from":{"krate":5,"index":7223},"to":{"krate":0,"index":16}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":56863,"byte_end":56866,"line_start":959,"line_end":959,"column_start":37,"column_end":40},"kind":{"Impl":{"id":3}},"from":{"krate":4,"index":105},"to":{"krate":0,"index":84}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":57449,"byte_end":57452,"line_start":983,"line_end":983,"column_start":17,"column_end":20},"kind":{"Impl":{"id":4}},"from":{"krate":4,"index":5357},"to":{"krate":0,"index":84}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":59742,"byte_end":59752,"line_start":1064,"line_end":1064,"column_start":21,"column_end":31},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":138},"to":{"krate":1,"index":6953}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":59987,"byte_end":59997,"line_start":1073,"line_end":1073,"column_start":33,"column_end":43},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":138},"to":{"krate":1,"index":1997}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/buf_mut.rs","byte_start":60183,"byte_end":60193,"line_start":1080,"line_end":1080,"column_start":46,"column_end":56},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":138},"to":{"krate":1,"index":1997}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/chain.rs","byte_start":66304,"byte_end":66309,"line_start":41,"line_end":41,"column_start":12,"column_end":17},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":935},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/chain.rs","byte_start":68537,"byte_end":68542,"line_start":139,"line_end":139,"column_start":20,"column_end":25},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":935},"to":{"krate":0,"index":16}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/chain.rs","byte_start":69437,"byte_end":69442,"line_start":181,"line_end":181,"column_start":23,"column_end":28},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":935},"to":{"krate":0,"index":84}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/chain.rs","byte_start":70444,"byte_end":70449,"line_start":223,"line_end":223,"column_start":29,"column_end":34},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":935},"to":{"krate":1,"index":5529}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/limit.rs","byte_start":70985,"byte_end":70990,"line_start":20,"line_end":20,"column_start":9,"column_end":14},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":944},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/limit.rs","byte_start":72135,"byte_end":72140,"line_start":61,"line_end":61,"column_start":28,"column_end":33},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":944},"to":{"krate":0,"index":84}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/reader.rs","byte_start":72994,"byte_end":73000,"line_start":19,"line_end":19,"column_start":14,"column_end":20},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":951},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/reader.rs","byte_start":74115,"byte_end":74121,"line_start":65,"line_end":65,"column_start":35,"column_end":41},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":951},"to":{"krate":5,"index":3190}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/reader.rs","byte_start":74374,"byte_end":74380,"line_start":74,"line_end":74,"column_start":38,"column_end":44},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":951},"to":{"krate":5,"index":3275}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/take.rs","byte_start":74993,"byte_end":74997,"line_start":22,"line_end":22,"column_start":9,"column_end":13},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":957},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/take.rs","byte_start":77721,"byte_end":77725,"line_start":135,"line_end":135,"column_start":22,"column_end":26},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":957},"to":{"krate":0,"index":16}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/writer.rs","byte_start":78514,"byte_end":78520,"line_start":19,"line_end":19,"column_start":17,"column_end":23},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":964},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/writer.rs","byte_start":79920,"byte_end":79926,"line_start":77,"line_end":77,"column_start":39,"column_end":45},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":964},"to":{"krate":5,"index":3251}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":60921,"byte_end":60924,"line_start":21,"line_end":21,"column_start":19,"column_end":22},"kind":"SuperTrait","from":{"krate":0,"index":16},"to":{"krate":0,"index":272}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":63137,"byte_end":63138,"line_start":99,"line_end":99,"column_start":34,"column_end":35},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":278},"to":{"krate":0,"index":272}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":63215,"byte_end":63221,"line_start":102,"line_end":102,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":0,"index":84},"to":{"krate":0,"index":279}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/ext/mod.rs","byte_start":65290,"byte_end":65291,"line_start":176,"line_end":176,"column_start":40,"column_end":41},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":285},"to":{"krate":0,"index":279}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/iter.rs","byte_start":80785,"byte_end":80793,"line_start":30,"line_end":30,"column_start":9,"column_end":17},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":970},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/iter.rs","byte_start":82870,"byte_end":82878,"line_start":113,"line_end":113,"column_start":27,"column_end":35},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":970},"to":{"krate":1,"index":5625}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/iter.rs","byte_start":83278,"byte_end":83286,"line_start":133,"line_end":133,"column_start":36,"column_end":44},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":970},"to":{"krate":1,"index":5577}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/buf/vec_deque.rs","byte_start":83360,"byte_end":83368,"line_start":5,"line_end":5,"column_start":14,"column_end":22},"kind":{"Impl":{"id":26}},"from":{"krate":4,"index":3204},"to":{"krate":0,"index":16}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":87143,"byte_end":87151,"line_start":106,"line_end":106,"column_start":6,"column_end":14},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":356},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":112272,"byte_end":112280,"line_start":919,"line_end":919,"column_start":15,"column_end":23},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":356},"to":{"krate":1,"index":2305}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":112714,"byte_end":112722,"line_start":936,"line_end":936,"column_start":14,"column_end":22},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":356},"to":{"krate":0,"index":16}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":113250,"byte_end":113258,"line_start":963,"line_end":963,"column_start":17,"column_end":25},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":356},"to":{"krate":0,"index":84}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":114241,"byte_end":114249,"line_start":1001,"line_end":1001,"column_start":22,"column_end":30},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":356},"to":{"krate":1,"index":1988}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":114346,"byte_end":114354,"line_start":1008,"line_end":1008,"column_start":16,"column_end":24},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":356},"to":{"krate":1,"index":2281}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":114479,"byte_end":114487,"line_start":1017,"line_end":1017,"column_start":22,"column_end":30},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":356},"to":{"krate":1,"index":1991}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":114585,"byte_end":114593,"line_start":1023,"line_end":1023,"column_start":19,"column_end":27},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":356},"to":{"krate":1,"index":2294}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":114712,"byte_end":114720,"line_start":1030,"line_end":1030,"column_start":29,"column_end":37},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":356},"to":{"krate":1,"index":1997}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":114841,"byte_end":114849,"line_start":1036,"line_end":1036,"column_start":28,"column_end":36},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":356},"to":{"krate":1,"index":1997}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":114964,"byte_end":114969,"line_start":1042,"line_end":1042,"column_start":25,"column_end":30},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":577},"to":{"krate":1,"index":1997}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":115059,"byte_end":115067,"line_start":1048,"line_end":1048,"column_start":20,"column_end":28},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":356},"to":{"krate":1,"index":1798}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":115188,"byte_end":115196,"line_start":1054,"line_end":1054,"column_start":21,"column_end":29},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":356},"to":{"krate":1,"index":1841}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":115346,"byte_end":115354,"line_start":1060,"line_end":1060,"column_start":14,"column_end":22},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":356},"to":{"krate":1,"index":1830}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":115479,"byte_end":115487,"line_start":1066,"line_end":1066,"column_start":13,"column_end":21},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":356},"to":{"krate":1,"index":1803}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":115510,"byte_end":115518,"line_start":1069,"line_end":1069,"column_start":18,"column_end":26},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":356},"to":{"krate":1,"index":2069}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":115619,"byte_end":115627,"line_start":1076,"line_end":1076,"column_start":21,"column_end":29},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":356},"to":{"krate":1,"index":7141}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":115783,"byte_end":115791,"line_start":1083,"line_end":1083,"column_start":23,"column_end":31},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":356},"to":{"krate":1,"index":1748}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":115882,"byte_end":115890,"line_start":1089,"line_end":1089,"column_start":26,"column_end":34},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":356},"to":{"krate":1,"index":1751}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":115988,"byte_end":115996,"line_start":1095,"line_end":1095,"column_start":21,"column_end":29},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":356},"to":{"krate":1,"index":6911}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":116375,"byte_end":116383,"line_start":1112,"line_end":1112,"column_start":16,"column_end":24},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":356},"to":{"krate":1,"index":1770}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":116485,"byte_end":116493,"line_start":1118,"line_end":1118,"column_start":23,"column_end":31},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":356},"to":{"krate":1,"index":5529}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":116856,"byte_end":116864,"line_start":1136,"line_end":1136,"column_start":21,"column_end":29},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":356},"to":{"krate":1,"index":5538}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":117303,"byte_end":117311,"line_start":1153,"line_end":1153,"column_start":29,"column_end":37},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":356},"to":{"krate":1,"index":5538}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":117475,"byte_end":117483,"line_start":1159,"line_end":1159,"column_start":27,"column_end":35},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":356},"to":{"krate":1,"index":5525}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":117652,"byte_end":117660,"line_start":1165,"line_end":1165,"column_start":35,"column_end":43},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":356},"to":{"krate":1,"index":5525}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":119298,"byte_end":119304,"line_start":1214,"line_end":1214,"column_start":6,"column_end":12},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":361},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":122145,"byte_end":122153,"line_start":1294,"line_end":1294,"column_start":22,"column_end":30},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":356},"to":{"krate":1,"index":2081}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":122178,"byte_end":122186,"line_start":1295,"line_end":1295,"column_start":22,"column_end":30},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":356},"to":{"krate":1,"index":2093}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":122268,"byte_end":122276,"line_start":1303,"line_end":1303,"column_start":26,"column_end":34},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":356},"to":{"krate":1,"index":1798}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":122380,"byte_end":122388,"line_start":1309,"line_end":1309,"column_start":27,"column_end":35},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":356},"to":{"krate":1,"index":1841}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":122819,"byte_end":122827,"line_start":1327,"line_end":1327,"column_start":25,"column_end":33},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":356},"to":{"krate":1,"index":1798}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":122940,"byte_end":122948,"line_start":1333,"line_end":1333,"column_start":26,"column_end":34},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":356},"to":{"krate":1,"index":1841}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":123402,"byte_end":123410,"line_start":1351,"line_end":1351,"column_start":29,"column_end":37},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":356},"to":{"krate":1,"index":1798}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":123523,"byte_end":123531,"line_start":1357,"line_end":1357,"column_start":30,"column_end":38},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":356},"to":{"krate":1,"index":1841}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":123683,"byte_end":123686,"line_start":1363,"line_end":1363,"column_start":30,"column_end":33},"kind":{"Impl":{"id":64}},"from":{"krate":4,"index":5357},"to":{"krate":1,"index":1798}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":123801,"byte_end":123804,"line_start":1369,"line_end":1369,"column_start":31,"column_end":34},"kind":{"Impl":{"id":65}},"from":{"krate":4,"index":5357},"to":{"krate":1,"index":1841}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":123950,"byte_end":123958,"line_start":1375,"line_end":1375,"column_start":28,"column_end":36},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":356},"to":{"krate":1,"index":1798}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":124069,"byte_end":124077,"line_start":1381,"line_end":1381,"column_start":29,"column_end":37},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":356},"to":{"krate":1,"index":1841}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":124234,"byte_end":124240,"line_start":1387,"line_end":1387,"column_start":30,"column_end":36},"kind":{"Impl":{"id":68}},"from":{"krate":4,"index":5852},"to":{"krate":1,"index":1798}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":124351,"byte_end":124357,"line_start":1393,"line_end":1393,"column_start":31,"column_end":37},"kind":{"Impl":{"id":69}},"from":{"krate":4,"index":5852},"to":{"krate":1,"index":1841}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":124553,"byte_end":124561,"line_start":1399,"line_end":1399,"column_start":42,"column_end":50},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":356},"to":{"krate":1,"index":1798}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":124715,"byte_end":124723,"line_start":1407,"line_end":1407,"column_start":43,"column_end":51},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":356},"to":{"krate":1,"index":1841}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":125456,"byte_end":125461,"line_start":1439,"line_end":1439,"column_start":30,"column_end":35},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":577},"to":{"krate":1,"index":1798}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes_mut.rs","byte_start":125576,"byte_end":125584,"line_start":1445,"line_end":1445,"column_start":27,"column_end":35},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":356},"to":{"krate":1,"index":1798}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":130933,"byte_end":130938,"line_start":84,"line_end":84,"column_start":6,"column_end":11},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":577},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":141367,"byte_end":141372,"line_start":483,"line_end":483,"column_start":22,"column_end":27},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":577},"to":{"krate":1,"index":2081}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":141397,"byte_end":141402,"line_start":484,"line_end":484,"column_start":22,"column_end":27},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":577},"to":{"krate":1,"index":2093}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":141421,"byte_end":141426,"line_start":486,"line_end":486,"column_start":15,"column_end":20},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":577},"to":{"krate":1,"index":2305}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":141586,"byte_end":141591,"line_start":495,"line_end":495,"column_start":16,"column_end":21},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":577},"to":{"krate":1,"index":1770}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":141752,"byte_end":141757,"line_start":504,"line_end":504,"column_start":14,"column_end":19},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":577},"to":{"krate":0,"index":16}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":142310,"byte_end":142315,"line_start":534,"line_end":534,"column_start":16,"column_end":21},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":577},"to":{"krate":1,"index":2281}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":142442,"byte_end":142447,"line_start":543,"line_end":543,"column_start":22,"column_end":27},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":577},"to":{"krate":1,"index":1988}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":142549,"byte_end":142554,"line_start":550,"line_end":550,"column_start":21,"column_end":26},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":577},"to":{"krate":1,"index":7141}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":142686,"byte_end":142691,"line_start":556,"line_end":556,"column_start":23,"column_end":28},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":577},"to":{"krate":1,"index":1748}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":142781,"byte_end":142786,"line_start":562,"line_end":562,"column_start":23,"column_end":28},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":577},"to":{"krate":1,"index":5529}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":143151,"byte_end":143156,"line_start":580,"line_end":580,"column_start":27,"column_end":32},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":577},"to":{"krate":1,"index":5525}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":143309,"byte_end":143314,"line_start":588,"line_end":588,"column_start":20,"column_end":25},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":577},"to":{"krate":1,"index":1798}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":143432,"byte_end":143437,"line_start":594,"line_end":594,"column_start":21,"column_end":26},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":577},"to":{"krate":1,"index":1841}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":143584,"byte_end":143589,"line_start":600,"line_end":600,"column_start":14,"column_end":19},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":577},"to":{"krate":1,"index":1830}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":143711,"byte_end":143716,"line_start":606,"line_end":606,"column_start":13,"column_end":18},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":577},"to":{"krate":1,"index":1803}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":143746,"byte_end":143751,"line_start":608,"line_end":608,"column_start":26,"column_end":31},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":577},"to":{"krate":1,"index":1798}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":143863,"byte_end":143868,"line_start":614,"line_end":614,"column_start":27,"column_end":32},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":577},"to":{"krate":1,"index":1841}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":144294,"byte_end":144299,"line_start":632,"line_end":632,"column_start":25,"column_end":30},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":577},"to":{"krate":1,"index":1798}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":144420,"byte_end":144425,"line_start":638,"line_end":638,"column_start":26,"column_end":31},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":577},"to":{"krate":1,"index":1841}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":144874,"byte_end":144879,"line_start":656,"line_end":656,"column_start":29,"column_end":34},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":577},"to":{"krate":1,"index":1798}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":144992,"byte_end":144997,"line_start":662,"line_end":662,"column_start":30,"column_end":35},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":577},"to":{"krate":1,"index":1841}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":145153,"byte_end":145156,"line_start":668,"line_end":668,"column_start":27,"column_end":30},"kind":{"Impl":{"id":98}},"from":{"krate":4,"index":5357},"to":{"krate":1,"index":1798}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":145265,"byte_end":145268,"line_start":674,"line_end":674,"column_start":28,"column_end":31},"kind":{"Impl":{"id":99}},"from":{"krate":4,"index":5357},"to":{"krate":1,"index":1841}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":145440,"byte_end":145445,"line_start":680,"line_end":680,"column_start":28,"column_end":33},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":577},"to":{"krate":1,"index":1798}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":145556,"byte_end":145561,"line_start":686,"line_end":686,"column_start":29,"column_end":34},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":577},"to":{"krate":1,"index":1841}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":145722,"byte_end":145728,"line_start":692,"line_end":692,"column_start":27,"column_end":33},"kind":{"Impl":{"id":102}},"from":{"krate":4,"index":5852},"to":{"krate":1,"index":1798}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":145833,"byte_end":145839,"line_start":698,"line_end":698,"column_start":28,"column_end":34},"kind":{"Impl":{"id":103}},"from":{"krate":4,"index":5852},"to":{"krate":1,"index":1841}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":146605,"byte_end":146610,"line_start":728,"line_end":728,"column_start":42,"column_end":47},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":577},"to":{"krate":1,"index":1798}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":146761,"byte_end":146766,"line_start":736,"line_end":736,"column_start":43,"column_end":48},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":577},"to":{"krate":1,"index":1841}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":146943,"byte_end":146948,"line_start":746,"line_end":746,"column_start":18,"column_end":23},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":577},"to":{"krate":1,"index":2069}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":147052,"byte_end":147057,"line_start":753,"line_end":753,"column_start":30,"column_end":35},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":577},"to":{"krate":1,"index":1997}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":147176,"byte_end":147181,"line_start":759,"line_end":759,"column_start":29,"column_end":34},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":577},"to":{"krate":1,"index":1997}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":147305,"byte_end":147310,"line_start":765,"line_end":765,"column_start":24,"column_end":29},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":577},"to":{"krate":1,"index":1997}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":148240,"byte_end":148245,"line_start":798,"line_end":798,"column_start":23,"column_end":28},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":577},"to":{"krate":1,"index":1997}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/bytes.rs","byte_start":148375,"byte_end":148381,"line_start":806,"line_end":806,"column_start":21,"column_end":27},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":582},"to":{"krate":1,"index":6953}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/fmt/debug.rs","byte_start":158008,"byte_end":158016,"line_start":12,"line_end":12,"column_start":16,"column_end":24},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":760},"to":{"krate":1,"index":6953}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/fmt/debug.rs","byte_start":158850,"byte_end":158855,"line_start":39,"line_end":39,"column_start":16,"column_end":21},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":577},"to":{"krate":1,"index":6953}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/fmt/debug.rs","byte_start":158984,"byte_end":158992,"line_start":45,"line_end":45,"column_start":16,"column_end":24},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":356},"to":{"krate":1,"index":6953}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/fmt/hex.rs","byte_start":159233,"byte_end":159241,"line_start":6,"line_end":6,"column_start":19,"column_end":27},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":760},"to":{"krate":1,"index":6964}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.4/src/fmt/hex.rs","byte_start":159417,"byte_end":159425,"line_start":15,"line_end":15,"column_start":19,"column_end":27},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":760},"to":{"krate":1,"index":6966}}]}