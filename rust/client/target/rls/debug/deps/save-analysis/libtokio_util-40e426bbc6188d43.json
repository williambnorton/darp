{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0","program":"/Users/wbn/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","tokio_util","--edition=2018","/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"codec\"","--cfg","feature=\"default\"","--cfg","feature=\"full\"","--cfg","feature=\"udp\"","-C","metadata=40e426bbc6188d43","-C","extra-filename=-40e426bbc6188d43","--out-dir","/Users/wbn/Dropbox/Development/darp_rust/tokio_udp_rate_test-master/client/target/rls/debug/deps","-L","dependency=/Users/wbn/Dropbox/Development/darp_rust/tokio_udp_rate_test-master/client/target/rls/debug/deps","--extern","bytes=/Users/wbn/Dropbox/Development/darp_rust/tokio_udp_rate_test-master/client/target/rls/debug/deps/libbytes-2e324c467535e528.rmeta","--extern","futures_core=/Users/wbn/Dropbox/Development/darp_rust/tokio_udp_rate_test-master/client/target/rls/debug/deps/libfutures_core-54430f950ca29cc0.rmeta","--extern","futures_sink=/Users/wbn/Dropbox/Development/darp_rust/tokio_udp_rate_test-master/client/target/rls/debug/deps/libfutures_sink-0fa29f6d5231f1c8.rmeta","--extern","log=/Users/wbn/Dropbox/Development/darp_rust/tokio_udp_rate_test-master/client/target/rls/debug/deps/liblog-7e5c58f0ab654b04.rmeta","--extern","pin_project_lite=/Users/wbn/Dropbox/Development/darp_rust/tokio_udp_rate_test-master/client/target/rls/debug/deps/libpin_project_lite-49da6c121eefbed0.rmeta","--extern","tokio=/Users/wbn/Dropbox/Development/darp_rust/tokio_udp_rate_test-master/client/target/rls/debug/deps/libtokio-426f91c5df0acc2f.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/wbn/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/wbn/Dropbox/Development/darp_rust/tokio_udp_rate_test-master/client/target/rls/debug/deps/libtokio_util-40e426bbc6188d43.rmeta"},"prelude":{"crate_id":{"name":"tokio_util","disambiguator":[3042164436236753723,8841087204130407045]},"crate_root":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src","external_crates":[{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[16125995874279485955,8748768413821387129]}},{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.4/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[16348493018826829365,4805211970644213659]}},{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[8279628881989909837,14733107812838978533]}},{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[17646096667663791084,12272231044852301253]}},{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[4565760717972533866,4473905522437311200]}},{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[7551666766599439458,2782226154556471377]}},{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[11632633256475535999,13776501019579249840]}},{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[4897607742433192731,640426136460610934]}},{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[15534826887064733014,5612939005974764181]}},{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[1175232612468424282,18163295741730709113]}},{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[15721596154046543409,2249662874474360977]}},{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[7768511099061914688,4128344505014859734]}},{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[15048206832849992118,3387758009953732431]}},{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[13751153714556823430,9887373550715096268]}},{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[13432701172845674020,17161827416142858739]}},{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/bytes_codec.rs","num":16,"id":{"name":"bytes","disambiguator":[2391901473293149128,14626317132410063048]}},{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","num":17,"id":{"name":"tokio","disambiguator":[14341858315661444048,10347668335237330128]}},{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","num":18,"id":{"name":"pin_project_lite","disambiguator":[857502913323839166,13577525682442044594]}},{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","num":19,"id":{"name":"lazy_static","disambiguator":[15250271026442438636,8961137856956568349]}},{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","num":20,"id":{"name":"futures_core","disambiguator":[6127901658415748521,5584227380979336287]}},{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","num":21,"id":{"name":"mio","disambiguator":[14352976262626397356,366661102250433880]}},{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","num":22,"id":{"name":"net2","disambiguator":[2370062367760608013,14576763087382745523]}},{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","num":23,"id":{"name":"libc","disambiguator":[8137107932025317833,11702490339730700308]}},{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","num":24,"id":{"name":"cfg_if","disambiguator":[1831819482912474119,2660488694117475506]}},{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","num":25,"id":{"name":"iovec","disambiguator":[9136719275111451045,17648143585730673266]}},{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","num":26,"id":{"name":"slab","disambiguator":[11227026095800762191,16314778376842034833]}},{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","num":27,"id":{"name":"log","disambiguator":[15051690413546809795,210885021431747587]}},{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","num":28,"id":{"name":"mio_uds","disambiguator":[4572714873200135948,8942312784281835552]}},{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","num":29,"id":{"name":"fnv","disambiguator":[4257635988328873569,3214719467056488817]}},{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","num":30,"id":{"name":"tokio_macros","disambiguator":[8273660254247734489,18425889970164085154]}},{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","num":31,"id":{"name":"memchr","disambiguator":[7249061973836506538,10739123639085947397]}},{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","num":32,"id":{"name":"num_cpus","disambiguator":[10220263587865301149,8010846167308820602]}},{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","num":33,"id":{"name":"signal_hook_registry","disambiguator":[6544850703012517552,4943938389975904777]}},{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","num":34,"id":{"name":"arc_swap","disambiguator":[9667163551862135128,2370959370960492160]}},{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","num":35,"id":{"name":"futures_sink","disambiguator":[491744973378204424,1697116850856496822]}}],"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/lib.rs","byte_start":0,"byte_end":494,"line_start":1,"line_end":26,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":453},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/mod.rs","byte_start":8844906,"byte_end":8844916,"line_start":13,"line_end":13,"column_start":28,"column_end":38},"alias_span":null,"name":"BytesCodec","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":34},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/mod.rs","byte_start":8844955,"byte_end":8844962,"line_start":16,"line_end":16,"column_start":24,"column_end":31},"alias_span":null,"name":"Decoder","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":45},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/mod.rs","byte_start":8845001,"byte_end":8845008,"line_start":19,"line_end":19,"column_start":24,"column_end":31},"alias_span":null,"name":"Encoder","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":826},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/mod.rs","byte_start":8845046,"byte_end":8845052,"line_start":22,"line_end":22,"column_start":24,"column_end":30},"alias_span":null,"name":"Framed","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":481},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/mod.rs","byte_start":8845054,"byte_end":8845065,"line_start":22,"line_end":22,"column_start":32,"column_end":43},"alias_span":null,"name":"FramedParts","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":740},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/mod.rs","byte_start":8845113,"byte_end":8845123,"line_start":25,"line_end":25,"column_start":28,"column_end":38},"alias_span":null,"name":"FramedRead","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":654},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/mod.rs","byte_start":8845172,"byte_end":8845183,"line_start":28,"line_end":28,"column_start":29,"column_end":40},"alias_span":null,"name":"FramedWrite","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":505},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/mod.rs","byte_start":8845245,"byte_end":8845265,"line_start":31,"line_end":31,"column_start":34,"column_end":54},"alias_span":null,"name":"LengthDelimitedCodec","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":364},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/mod.rs","byte_start":8845267,"byte_end":8845292,"line_start":31,"line_end":31,"column_start":56,"column_end":81},"alias_span":null,"name":"LengthDelimitedCodecError","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":521},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/mod.rs","byte_start":8845341,"byte_end":8845351,"line_start":34,"line_end":34,"column_start":29,"column_end":39},"alias_span":null,"name":"LinesCodec","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":555},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/mod.rs","byte_start":8845353,"byte_end":8845368,"line_start":34,"line_end":34,"column_start":41,"column_end":56},"alias_span":null,"name":"LinesCodecError","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":606},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/udp/mod.rs","byte_start":9967072,"byte_end":9967081,"line_start":4,"line_end":4,"column_start":22,"column_end":31},"alias_span":null,"name":"UdpFramed","value":"","parent":{"krate":0,"index":563}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/lib.rs","byte_start":0,"byte_end":494,"line_start":1,"line_end":26,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":6},{"krate":0,"index":563}],"decl_id":null,"docs":" Utilities for working with Tokio.\n","sig":null,"attributes":[{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/lib.rs","byte_start":60,"byte_end":166,"line_start":2,"line_end":7,"column_start":1,"column_end":3}},{"value":"deny(intra_doc_link_resolution_failure)","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/lib.rs","byte_start":167,"byte_end":210,"line_start":8,"line_end":8,"column_start":1,"column_end":44}},{"value":"/ Utilities for working with Tokio.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/lib.rs","byte_start":368,"byte_end":405,"line_start":15,"line_end":15,"column_start":1,"column_end":38}}]},{"kind":"Mod","id":{"krate":0,"index":6},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"codec","qualname":"::codec","value":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/mod.rs","parent":null,"children":[{"krate":0,"index":7},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":170},{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":341},{"krate":0,"index":342},{"krate":0,"index":410},{"krate":0,"index":411},{"krate":0,"index":412},{"krate":0,"index":413},{"krate":0,"index":450},{"krate":0,"index":451},{"krate":0,"index":452}],"decl_id":null,"docs":" Utilities for encoding and decoding frames.","sig":null,"attributes":[{"value":"cfg(feature = \"codec\")","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/cfg.rs","byte_start":570,"byte_end":595,"line_start":4,"line_end":4,"column_start":13,"column_end":38}},{"value":"/ Utilities for encoding and decoding frames.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/mod.rs","byte_start":8844304,"byte_end":8844351,"line_start":1,"line_end":1,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/mod.rs","byte_start":8844352,"byte_end":8844355,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Contains adapters to go from streams of bytes, [`AsyncRead`] and","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/mod.rs","byte_start":8844356,"byte_end":8844424,"line_start":3,"line_end":3,"column_start":1,"column_end":69}},{"value":"/ [`AsyncWrite`], to framed streams implementing [`Sink`] and [`Stream`].","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/mod.rs","byte_start":8844425,"byte_end":8844500,"line_start":4,"line_end":4,"column_start":1,"column_end":76}},{"value":"/ Framed streams are also known as transports.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/mod.rs","byte_start":8844501,"byte_end":8844549,"line_start":5,"line_end":5,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/mod.rs","byte_start":8844550,"byte_end":8844553,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: https://docs.rs/tokio/*/tokio/io/trait.AsyncRead.html","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/mod.rs","byte_start":8844554,"byte_end":8844626,"line_start":7,"line_end":7,"column_start":1,"column_end":73}},{"value":"/ [`AsyncWrite`]: https://docs.rs/tokio/*/tokio/io/trait.AsyncWrite.html","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/mod.rs","byte_start":8844627,"byte_end":8844701,"line_start":8,"line_end":8,"column_start":1,"column_end":75}},{"value":"/ [`Sink`]: https://docs.rs/futures-sink/*/futures_sink/trait.Sink.html","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/mod.rs","byte_start":8844702,"byte_end":8844775,"line_start":9,"line_end":9,"column_start":1,"column_end":74}},{"value":"/ [`Stream`]: https://docs.rs/futures-core/*/futures_core/stream/trait.Stream.html","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/mod.rs","byte_start":8844776,"byte_end":8844860,"line_start":10,"line_end":10,"column_start":1,"column_end":85}}]},{"kind":"Struct","id":{"krate":0,"index":453},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/bytes_codec.rs","byte_start":8845651,"byte_end":8845661,"line_start":9,"line_end":9,"column_start":12,"column_end":22},"name":"BytesCodec","qualname":"::codec::bytes_codec::BytesCodec","value":"","parent":null,"children":[],"decl_id":null,"docs":" A simple `Codec` implementation that just ships bytes around.\n","sig":null,"attributes":[{"value":"/ A simple `Codec` implementation that just ships bytes around.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/bytes_codec.rs","byte_start":8845497,"byte_end":8845562,"line_start":7,"line_end":7,"column_start":1,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":16},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/bytes_codec.rs","byte_start":8845763,"byte_end":8845766,"line_start":13,"line_end":13,"column_start":12,"column_end":15},"name":"new","qualname":"<BytesCodec>::new","value":"pub fn new() -> BytesCodec","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesCodec` for shipping around raw bytes.\n","sig":null,"attributes":[{"value":"/ Creates a new `BytesCodec` for shipping around raw bytes.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/bytes_codec.rs","byte_start":8845690,"byte_end":8845751,"line_start":12,"line_end":12,"column_start":5,"column_end":66}}]},{"kind":"Trait","id":{"krate":0,"index":34},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":8847040,"byte_end":8847047,"line_start":19,"line_end":19,"column_start":11,"column_end":18},"name":"Decoder","qualname":"::codec::decoder::Decoder","value":"Decoder","parent":null,"children":[{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":39}],"decl_id":null,"docs":" Decoding of frames via buffers.","sig":null,"attributes":[{"value":"/ Decoding of frames via buffers.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":8846533,"byte_end":8846568,"line_start":9,"line_end":9,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":8846569,"byte_end":8846572,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This trait is used when constructing an instance of `Framed` or","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":8846573,"byte_end":8846640,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"/ `FramedRead`. An implementation of `Decoder` takes a byte stream that has","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":8846641,"byte_end":8846718,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"/ already been buffered in `src` and decodes the data into a stream of","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":8846719,"byte_end":8846791,"line_start":13,"line_end":13,"column_start":1,"column_end":73}},{"value":"/ `Self::Item` frames.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":8846792,"byte_end":8846816,"line_start":14,"line_end":14,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":8846817,"byte_end":8846820,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Implementations are able to track state on `self`, which enables","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":8846821,"byte_end":8846889,"line_start":16,"line_end":16,"column_start":1,"column_end":69}},{"value":"/ implementing stateful streaming parsers. In many cases, though, this type","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":8846890,"byte_end":8846967,"line_start":17,"line_end":17,"column_start":1,"column_end":78}},{"value":"/ will simply be a unit struct (e.g. `struct HttpDecoder`).","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":8846968,"byte_end":8847029,"line_start":18,"line_end":18,"column_start":1,"column_end":62}}]},{"kind":"Type","id":{"krate":0,"index":35},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":8847095,"byte_end":8847099,"line_start":21,"line_end":21,"column_start":10,"column_end":14},"name":"Item","qualname":"::codec::decoder::Decoder::Item","value":"type Item;","parent":{"krate":0,"index":34},"children":[],"decl_id":null,"docs":" The type of decoded frames.\n","sig":null,"attributes":[{"value":"/ The type of decoded frames.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":8847054,"byte_end":8847085,"line_start":20,"line_end":20,"column_start":5,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":36},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":8847806,"byte_end":8847811,"line_start":36,"line_end":36,"column_start":10,"column_end":15},"name":"Error","qualname":"::codec::decoder::Decoder::Error","value":"type Error: From<io::Error>;","parent":{"krate":0,"index":34},"children":[],"decl_id":null,"docs":" The type of unrecoverable frame decoding errors.","sig":null,"attributes":[{"value":"/ The type of unrecoverable frame decoding errors.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":8847106,"byte_end":8847158,"line_start":23,"line_end":23,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":8847163,"byte_end":8847166,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ If an individual message is ill-formed but can be ignored without","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":8847171,"byte_end":8847240,"line_start":25,"line_end":25,"column_start":5,"column_end":74}},{"value":"/ interfering with the processing of future messages, it may be more","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":8847245,"byte_end":8847315,"line_start":26,"line_end":26,"column_start":5,"column_end":75}},{"value":"/ useful to report the failure as an `Item`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":8847320,"byte_end":8847366,"line_start":27,"line_end":27,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":8847371,"byte_end":8847374,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ `From<io::Error>` is required in the interest of making `Error` suitable","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":8847379,"byte_end":8847455,"line_start":29,"line_end":29,"column_start":5,"column_end":81}},{"value":"/ for returning directly from a `FramedRead`, and to enable the default","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":8847460,"byte_end":8847533,"line_start":30,"line_end":30,"column_start":5,"column_end":78}},{"value":"/ implementation of `decode_eof` to yield an `io::Error` when the decoder","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":8847538,"byte_end":8847613,"line_start":31,"line_end":31,"column_start":5,"column_end":80}},{"value":"/ fails to consume all available data.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":8847618,"byte_end":8847658,"line_start":32,"line_end":32,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":8847663,"byte_end":8847666,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ Note that implementors of this trait can simply indicate `type Error =","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":8847671,"byte_end":8847745,"line_start":34,"line_end":34,"column_start":5,"column_end":79}},{"value":"/ io::Error` to use I/O errors as this type.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":8847750,"byte_end":8847796,"line_start":35,"line_end":35,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":37},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":8850644,"byte_end":8850650,"line_start":103,"line_end":103,"column_start":8,"column_end":14},"name":"decode","qualname":"::codec::decoder::Decoder::decode","value":"pub fn decode(&mut Self, &mut BytesMut)\n-> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":34},"children":[],"decl_id":null,"docs":" Attempts to decode a frame from the provided buffer of bytes.","sig":null,"attributes":[{"value":"/ Attempts to decode a frame from the provided buffer of bytes.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":8847835,"byte_end":8847900,"line_start":38,"line_end":38,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":8847905,"byte_end":8847908,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ This method is called by `FramedRead` whenever bytes are ready to be","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":8847913,"byte_end":8847985,"line_start":40,"line_end":40,"column_start":5,"column_end":77}},{"value":"/ parsed.  The provided buffer of bytes is what's been read so far, and","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":8847990,"byte_end":8848063,"line_start":41,"line_end":41,"column_start":5,"column_end":78}},{"value":"/ this instance of `Decode` can determine whether an entire frame is in","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":8848068,"byte_end":8848141,"line_start":42,"line_end":42,"column_start":5,"column_end":78}},{"value":"/ the buffer and is ready to be returned.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":8848146,"byte_end":8848189,"line_start":43,"line_end":43,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":8848194,"byte_end":8848197,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ If an entire frame is available, then this instance will remove those","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":8848202,"byte_end":8848275,"line_start":45,"line_end":45,"column_start":5,"column_end":78}},{"value":"/ bytes from the buffer provided and return them as a decoded","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":8848280,"byte_end":8848343,"line_start":46,"line_end":46,"column_start":5,"column_end":68}},{"value":"/ frame. Note that removing bytes from the provided buffer doesn't always","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":8848348,"byte_end":8848423,"line_start":47,"line_end":47,"column_start":5,"column_end":80}},{"value":"/ necessarily copy the bytes, so this should be an efficient operation in","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":8848428,"byte_end":8848503,"line_start":48,"line_end":48,"column_start":5,"column_end":80}},{"value":"/ most circumstances.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":8848508,"byte_end":8848531,"line_start":49,"line_end":49,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":8848536,"byte_end":8848539,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ If the bytes look valid, but a frame isn't fully available yet, then","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":8848544,"byte_end":8848616,"line_start":51,"line_end":51,"column_start":5,"column_end":77}},{"value":"/ `Ok(None)` is returned. This indicates to the `Framed` instance that","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":8848621,"byte_end":8848693,"line_start":52,"line_end":52,"column_start":5,"column_end":77}},{"value":"/ it needs to read some more bytes before calling this method again.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":8848698,"byte_end":8848768,"line_start":53,"line_end":53,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":8848773,"byte_end":8848776,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Note that the bytes provided may be empty. If a previous call to","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":8848781,"byte_end":8848849,"line_start":55,"line_end":55,"column_start":5,"column_end":73}},{"value":"/ `decode` consumed all the bytes in the buffer then `decode` will be","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":8848854,"byte_end":8848925,"line_start":56,"line_end":56,"column_start":5,"column_end":76}},{"value":"/ called again until it returns `Ok(None)`, indicating that more bytes need to","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":8848930,"byte_end":8849010,"line_start":57,"line_end":57,"column_start":5,"column_end":85}},{"value":"/ be read.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":8849015,"byte_end":8849027,"line_start":58,"line_end":58,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":8849032,"byte_end":8849035,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ Finally, if the bytes in the buffer are malformed then an error is","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":8849040,"byte_end":8849110,"line_start":60,"line_end":60,"column_start":5,"column_end":75}},{"value":"/ returned indicating why. This informs `Framed` that the stream is now","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":8849115,"byte_end":8849188,"line_start":61,"line_end":61,"column_start":5,"column_end":78}},{"value":"/ corrupt and should be terminated.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":8849193,"byte_end":8849230,"line_start":62,"line_end":62,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":8849235,"byte_end":8849238,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ # Buffer management","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":8849243,"byte_end":8849266,"line_start":64,"line_end":64,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":8849271,"byte_end":8849274,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ Before returning from the function, implementations should ensure that","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":8849279,"byte_end":8849353,"line_start":66,"line_end":66,"column_start":5,"column_end":79}},{"value":"/ the buffer has appropriate capacity in anticipation of future calls to","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":8849358,"byte_end":8849432,"line_start":67,"line_end":67,"column_start":5,"column_end":79}},{"value":"/ `decode`. Failing to do so leads to inefficiency.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":8849437,"byte_end":8849490,"line_start":68,"line_end":68,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":8849495,"byte_end":8849498,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ For example, if frames have a fixed length, or if the length of the","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":8849503,"byte_end":8849574,"line_start":70,"line_end":70,"column_start":5,"column_end":76}},{"value":"/ current frame is known from a header, a possible buffer management","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":8849579,"byte_end":8849649,"line_start":71,"line_end":71,"column_start":5,"column_end":75}},{"value":"/ strategy is:","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":8849654,"byte_end":8849670,"line_start":72,"line_end":72,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":8849675,"byte_end":8849678,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":8849683,"byte_end":8849696,"line_start":74,"line_end":74,"column_start":5,"column_end":18}},{"value":"/ # use std::io;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":8849701,"byte_end":8849719,"line_start":75,"line_end":75,"column_start":5,"column_end":23}},{"value":"/ #","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":8849724,"byte_end":8849729,"line_start":76,"line_end":76,"column_start":5,"column_end":10}},{"value":"/ # use bytes::BytesMut;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":8849734,"byte_end":8849760,"line_start":77,"line_end":77,"column_start":5,"column_end":31}},{"value":"/ # use tokio_util::codec::Decoder;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":8849765,"byte_end":8849802,"line_start":78,"line_end":78,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":8849807,"byte_end":8849812,"line_start":79,"line_end":79,"column_start":5,"column_end":10}},{"value":"/ # struct MyCodec;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":8849817,"byte_end":8849838,"line_start":80,"line_end":80,"column_start":5,"column_end":26}},{"value":"/ #","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":8849843,"byte_end":8849848,"line_start":81,"line_end":81,"column_start":5,"column_end":10}},{"value":"/ impl Decoder for MyCodec {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":8849853,"byte_end":8849883,"line_start":82,"line_end":82,"column_start":5,"column_end":35}},{"value":"/     // ...","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":8849888,"byte_end":8849902,"line_start":83,"line_end":83,"column_start":5,"column_end":19}},{"value":"/     # type Item = BytesMut;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":8849907,"byte_end":8849938,"line_start":84,"line_end":84,"column_start":5,"column_end":36}},{"value":"/     # type Error = io::Error;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":8849943,"byte_end":8849976,"line_start":85,"line_end":85,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":8849981,"byte_end":8849984,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/     fn decode(&mut self, src: &mut BytesMut) -> Result<Option<Self::Item>, Self::Error> {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":8849989,"byte_end":8850082,"line_start":87,"line_end":87,"column_start":5,"column_end":98}},{"value":"/         // ...","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":8850087,"byte_end":8850105,"line_start":88,"line_end":88,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":8850110,"byte_end":8850113,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/         // Reserve enough to complete decoding of the current frame.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":8850118,"byte_end":8850190,"line_start":90,"line_end":90,"column_start":5,"column_end":77}},{"value":"/         let current_frame_len: usize = 1000; // Example.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":8850195,"byte_end":8850255,"line_start":91,"line_end":91,"column_start":5,"column_end":65}},{"value":"/         // And to start decoding the next frame.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":8850260,"byte_end":8850312,"line_start":92,"line_end":92,"column_start":5,"column_end":57}},{"value":"/         let next_frame_header_len: usize = 10; // Example.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":8850317,"byte_end":8850379,"line_start":93,"line_end":93,"column_start":5,"column_end":67}},{"value":"/         src.reserve(current_frame_len + next_frame_header_len);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":8850384,"byte_end":8850451,"line_start":94,"line_end":94,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":8850456,"byte_end":8850459,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/         return Ok(None);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":8850464,"byte_end":8850492,"line_start":96,"line_end":96,"column_start":5,"column_end":33}},{"value":"/     }","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":8850497,"byte_end":8850506,"line_start":97,"line_end":97,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":8850511,"byte_end":8850516,"line_start":98,"line_end":98,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":8850521,"byte_end":8850528,"line_start":99,"line_end":99,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":8850533,"byte_end":8850536,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ An optimal buffer management strategy minimizes reallocations and","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":8850541,"byte_end":8850610,"line_start":101,"line_end":101,"column_start":5,"column_end":74}},{"value":"/ over-allocations.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":8850615,"byte_end":8850636,"line_start":102,"line_end":102,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":8851509,"byte_end":8851519,"line_start":118,"line_end":118,"column_start":8,"column_end":18},"name":"decode_eof","qualname":"::codec::decoder::Decoder::decode_eof","value":"pub fn decode_eof(&mut Self, &mut BytesMut)\n-> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":34},"children":[],"decl_id":null,"docs":" A default method available to be called when there are no more bytes\n available to be read from the underlying I/O.","sig":null,"attributes":[{"value":"/ A default method available to be called when there are no more bytes","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":8850731,"byte_end":8850803,"line_start":105,"line_end":105,"column_start":5,"column_end":77}},{"value":"/ available to be read from the underlying I/O.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":8850808,"byte_end":8850857,"line_start":106,"line_end":106,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":8850862,"byte_end":8850865,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ This method defaults to calling `decode` and returns an error if","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":8850870,"byte_end":8850938,"line_start":108,"line_end":108,"column_start":5,"column_end":73}},{"value":"/ `Ok(None)` is returned while there is unconsumed data in `buf`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":8850943,"byte_end":8851010,"line_start":109,"line_end":109,"column_start":5,"column_end":72}},{"value":"/ Typically this doesn't need to be implemented unless the framing","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":8851015,"byte_end":8851083,"line_start":110,"line_end":110,"column_start":5,"column_end":73}},{"value":"/ protocol differs near the end of the stream.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":8851088,"byte_end":8851136,"line_start":111,"line_end":111,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":8851141,"byte_end":8851144,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ Note that the `buf` argument may be empty. If a previous call to","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":8851149,"byte_end":8851217,"line_start":113,"line_end":113,"column_start":5,"column_end":73}},{"value":"/ `decode_eof` consumed all the bytes in the buffer, `decode_eof` will be","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":8851222,"byte_end":8851297,"line_start":114,"line_end":114,"column_start":5,"column_end":80}},{"value":"/ called again until it returns `None`, indicating that there are no more","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":8851302,"byte_end":8851377,"line_start":115,"line_end":115,"column_start":5,"column_end":80}},{"value":"/ frames to yield. This behavior enables returning finalization frames","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":8851382,"byte_end":8851454,"line_start":116,"line_end":116,"column_start":5,"column_end":77}},{"value":"/ that may not be based on inbound data.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":8851459,"byte_end":8851501,"line_start":117,"line_end":117,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":39},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":8852994,"byte_end":8853000,"line_start":148,"line_end":148,"column_start":8,"column_end":14},"name":"framed","qualname":"::codec::decoder::Decoder::framed","value":"pub fn framed<T: AsyncRead + AsyncWrite + Sized>(Self, T) -> Framed<T, Self>\nwhere Self: Encoder + Sized","parent":{"krate":0,"index":34},"children":[],"decl_id":null,"docs":" Provides a `Stream` and `Sink` interface for reading and writing to this\n `Io` object, using `Decode` and `Encode` to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a `Stream` and `Sink` interface for reading and writing to this","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":8851937,"byte_end":8852013,"line_start":131,"line_end":131,"column_start":5,"column_end":81}},{"value":"/ `Io` object, using `Decode` and `Encode` to read and write the raw data.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":8852018,"byte_end":8852094,"line_start":132,"line_end":132,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":8852099,"byte_end":8852102,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":8852107,"byte_end":8852182,"line_start":134,"line_end":134,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":8852187,"byte_end":8852257,"line_start":135,"line_end":135,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the `Codec`","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":8852262,"byte_end":8852333,"line_start":136,"line_end":136,"column_start":5,"column_end":76}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":8852338,"byte_end":8852410,"line_start":137,"line_end":137,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":8852415,"byte_end":8852473,"line_start":138,"line_end":138,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":8852478,"byte_end":8852481,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both `Stream` and","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":8852486,"byte_end":8852555,"line_start":140,"line_end":140,"column_start":5,"column_end":74}},{"value":"/ `Sink`; grouping this into a single object is often useful for layering","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":8852560,"byte_end":8852635,"line_start":141,"line_end":141,"column_start":5,"column_end":80}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":8852640,"byte_end":8852716,"line_start":142,"line_end":142,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":8852721,"byte_end":8852743,"line_start":143,"line_end":143,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":8852748,"byte_end":8852751,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":8852756,"byte_end":8852829,"line_start":145,"line_end":145,"column_start":5,"column_end":78}},{"value":"/ calling `split` on the `Framed` returned by this method, which will","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":8852834,"byte_end":8852905,"line_start":146,"line_end":146,"column_start":5,"column_end":76}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":8852910,"byte_end":8852986,"line_start":147,"line_end":147,"column_start":5,"column_end":81}}]},{"kind":"Trait","id":{"krate":0,"index":45},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/encoder.rs","byte_start":8853291,"byte_end":8853298,"line_start":6,"line_end":6,"column_start":11,"column_end":18},"name":"Encoder","qualname":"::codec::encoder::Encoder","value":"Encoder","parent":null,"children":[{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48}],"decl_id":null,"docs":" Trait of helper objects to write out messages as bytes, for use with\n `FramedWrite`.\n","sig":null,"attributes":[{"value":"/ Trait of helper objects to write out messages as bytes, for use with","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/encoder.rs","byte_start":8853189,"byte_end":8853261,"line_start":4,"line_end":4,"column_start":1,"column_end":73}},{"value":"/ `FramedWrite`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/encoder.rs","byte_start":8853262,"byte_end":8853280,"line_start":5,"line_end":5,"column_start":1,"column_end":19}}]},{"kind":"Type","id":{"krate":0,"index":46},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/encoder.rs","byte_start":8853362,"byte_end":8853366,"line_start":8,"line_end":8,"column_start":10,"column_end":14},"name":"Item","qualname":"::codec::encoder::Encoder::Item","value":"type Item;","parent":{"krate":0,"index":45},"children":[],"decl_id":null,"docs":" The type of items consumed by the `Encoder`\n","sig":null,"attributes":[{"value":"/ The type of items consumed by the `Encoder`","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/encoder.rs","byte_start":8853305,"byte_end":8853352,"line_start":7,"line_end":7,"column_start":5,"column_end":52}}]},{"kind":"Type","id":{"krate":0,"index":47},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/encoder.rs","byte_start":8853564,"byte_end":8853569,"line_start":14,"line_end":14,"column_start":10,"column_end":15},"name":"Error","qualname":"::codec::encoder::Encoder::Error","value":"type Error: From<io::Error>;","parent":{"krate":0,"index":45},"children":[],"decl_id":null,"docs":" The type of encoding errors.","sig":null,"attributes":[{"value":"/ The type of encoding errors.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/encoder.rs","byte_start":8853373,"byte_end":8853405,"line_start":10,"line_end":10,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/encoder.rs","byte_start":8853410,"byte_end":8853413,"line_start":11,"line_end":11,"column_start":5,"column_end":8}},{"value":"/ `FramedWrite` requires `Encoder`s errors to implement `From<io::Error>`","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/encoder.rs","byte_start":8853418,"byte_end":8853493,"line_start":12,"line_end":12,"column_start":5,"column_end":80}},{"value":"/ in the interest letting it return `Error`s directly.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/encoder.rs","byte_start":8853498,"byte_end":8853554,"line_start":13,"line_end":13,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/encoder.rs","byte_start":8853854,"byte_end":8853860,"line_start":21,"line_end":21,"column_start":8,"column_end":14},"name":"encode","qualname":"::codec::encoder::Encoder::encode","value":"pub fn encode(&mut Self, Self::Item, &mut BytesMut) -> Result<(), Self::Error>","parent":{"krate":0,"index":45},"children":[],"decl_id":null,"docs":" Encodes a frame into the buffer provided.","sig":null,"attributes":[{"value":"/ Encodes a frame into the buffer provided.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/encoder.rs","byte_start":8853593,"byte_end":8853638,"line_start":16,"line_end":16,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/encoder.rs","byte_start":8853643,"byte_end":8853646,"line_start":17,"line_end":17,"column_start":5,"column_end":8}},{"value":"/ This method will encode `item` into the byte buffer provided by `dst`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/encoder.rs","byte_start":8853651,"byte_end":8853725,"line_start":18,"line_end":18,"column_start":5,"column_end":79}},{"value":"/ The `dst` provided is an internal buffer of the `Framed` instance and","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/encoder.rs","byte_start":8853730,"byte_end":8853803,"line_start":19,"line_end":19,"column_start":5,"column_end":78}},{"value":"/ will be written out when possible.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/encoder.rs","byte_start":8853808,"byte_end":8853846,"line_start":20,"line_end":20,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":826},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8854765,"byte_end":8854771,"line_start":23,"line_end":23,"column_start":16,"column_end":22},"name":"Framed","qualname":"::codec::framed::Framed","value":"Framed {  }","parent":null,"children":[{"krate":0,"index":829}],"decl_id":null,"docs":" A unified `Stream` and `Sink` interface to an underlying I/O object, using\n the `Encoder` and `Decoder` traits to encode and decode frames.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":81},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8855207,"byte_end":8855209,"line_start":40,"line_end":40,"column_start":10,"column_end":12},"name":"Io","qualname":"::codec::framed::ProjectFuse::Io","value":"type Io;","parent":{"krate":0,"index":80},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":82},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8855220,"byte_end":8855225,"line_start":41,"line_end":41,"column_start":10,"column_end":15},"name":"Codec","qualname":"::codec::framed::ProjectFuse::Codec","value":"type Codec;","parent":{"krate":0,"index":80},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8856760,"byte_end":8856763,"line_start":81,"line_end":81,"column_start":12,"column_end":15},"name":"new","qualname":"<Framed<T, U>>::new","value":"pub fn new(T, U) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a `Stream` and `Sink` interface for reading and writing to this\n `Io` object, using `Decode` and `Encode` to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a `Stream` and `Sink` interface for reading and writing to this","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8855699,"byte_end":8855775,"line_start":64,"line_end":64,"column_start":5,"column_end":81}},{"value":"/ `Io` object, using `Decode` and `Encode` to read and write the raw data.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8855780,"byte_end":8855856,"line_start":65,"line_end":65,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8855861,"byte_end":8855864,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8855869,"byte_end":8855944,"line_start":67,"line_end":67,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8855949,"byte_end":8856019,"line_start":68,"line_end":68,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the `Codec`","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8856024,"byte_end":8856095,"line_start":69,"line_end":69,"column_start":5,"column_end":76}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8856100,"byte_end":8856172,"line_start":70,"line_end":70,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8856177,"byte_end":8856235,"line_start":71,"line_end":71,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8856240,"byte_end":8856243,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both `Stream` and","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8856248,"byte_end":8856317,"line_start":73,"line_end":73,"column_start":5,"column_end":74}},{"value":"/ `Sink`; grouping this into a single object is often useful for layering","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8856322,"byte_end":8856397,"line_start":74,"line_end":74,"column_start":5,"column_end":80}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8856402,"byte_end":8856478,"line_start":75,"line_end":75,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8856483,"byte_end":8856505,"line_start":76,"line_end":76,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8856510,"byte_end":8856513,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8856518,"byte_end":8856591,"line_start":78,"line_end":78,"column_start":5,"column_end":78}},{"value":"/ calling `split` on the `Framed` returned by this method, which will","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8856596,"byte_end":8856667,"line_start":79,"line_end":79,"column_start":5,"column_end":76}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8856672,"byte_end":8856748,"line_start":80,"line_end":80,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8858176,"byte_end":8858186,"line_start":109,"line_end":109,"column_start":12,"column_end":22},"name":"from_parts","qualname":"<Framed<T, U>>::from_parts","value":"pub fn from_parts(FramedParts<T, U>) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a `Stream` and `Sink` interface for reading and writing to this\n `Io` object, using `Decode` and `Encode` to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a `Stream` and `Sink` interface for reading and writing to this","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8856943,"byte_end":8857019,"line_start":89,"line_end":89,"column_start":5,"column_end":81}},{"value":"/ `Io` object, using `Decode` and `Encode` to read and write the raw data.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8857024,"byte_end":8857100,"line_start":90,"line_end":90,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8857105,"byte_end":8857108,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8857113,"byte_end":8857188,"line_start":92,"line_end":92,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8857193,"byte_end":8857263,"line_start":93,"line_end":93,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the `Codec`","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8857268,"byte_end":8857339,"line_start":94,"line_end":94,"column_start":5,"column_end":76}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8857344,"byte_end":8857416,"line_start":95,"line_end":95,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8857421,"byte_end":8857479,"line_start":96,"line_end":96,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8857484,"byte_end":8857487,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both `Stream` and","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8857492,"byte_end":8857561,"line_start":98,"line_end":98,"column_start":5,"column_end":74}},{"value":"/ `Sink`; grouping this into a single object is often useful for layering","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8857566,"byte_end":8857641,"line_start":99,"line_end":99,"column_start":5,"column_end":80}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8857646,"byte_end":8857722,"line_start":100,"line_end":100,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8857727,"byte_end":8857749,"line_start":101,"line_end":101,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8857754,"byte_end":8857757,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ This objects takes a stream and a readbuffer and a writebuffer. These field","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8857762,"byte_end":8857841,"line_start":103,"line_end":103,"column_start":5,"column_end":84}},{"value":"/ can be obtained from an existing `Framed` with the `into_parts` method.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8857846,"byte_end":8857921,"line_start":104,"line_end":104,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8857926,"byte_end":8857929,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8857934,"byte_end":8858007,"line_start":106,"line_end":106,"column_start":5,"column_end":78}},{"value":"/ calling `split` on the `Framed` returned by this method, which will","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8858012,"byte_end":8858083,"line_start":107,"line_end":107,"column_start":5,"column_end":76}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8858088,"byte_end":8858164,"line_start":108,"line_end":108,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8858874,"byte_end":8858881,"line_start":130,"line_end":130,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Framed<T, U>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `Frame`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8858592,"byte_end":8858655,"line_start":124,"line_end":124,"column_start":5,"column_end":68}},{"value":"/ `Frame`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8858660,"byte_end":8858672,"line_start":125,"line_end":125,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8858677,"byte_end":8858680,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8858685,"byte_end":8858760,"line_start":127,"line_end":127,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8858765,"byte_end":8858835,"line_start":128,"line_end":128,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8858840,"byte_end":8858862,"line_start":129,"line_end":129,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8859241,"byte_end":8859248,"line_start":140,"line_end":140,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Framed<T, U>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `Frame`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8858951,"byte_end":8859022,"line_start":134,"line_end":134,"column_start":5,"column_end":76}},{"value":"/ `Frame`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8859027,"byte_end":8859039,"line_start":135,"line_end":135,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8859044,"byte_end":8859047,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8859052,"byte_end":8859127,"line_start":137,"line_end":137,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8859132,"byte_end":8859202,"line_start":138,"line_end":138,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8859207,"byte_end":8859229,"line_start":139,"line_end":139,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8859580,"byte_end":8859585,"line_start":149,"line_end":149,"column_start":12,"column_end":17},"name":"codec","qualname":"<Framed<T, U>>::codec","value":"pub fn codec(&Self) -> &U","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying codec wrapped by\n `Frame`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying codec wrapped by","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8859330,"byte_end":8859388,"line_start":144,"line_end":144,"column_start":5,"column_end":63}},{"value":"/ `Frame`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8859393,"byte_end":8859405,"line_start":145,"line_end":145,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8859410,"byte_end":8859413,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8859418,"byte_end":8859492,"line_start":147,"line_end":147,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8859497,"byte_end":8859568,"line_start":148,"line_end":148,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8859916,"byte_end":8859925,"line_start":158,"line_end":158,"column_start":12,"column_end":21},"name":"codec_mut","qualname":"<Framed<T, U>>::codec_mut","value":"pub fn codec_mut(&mut Self) -> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying codec wrapped by\n `Frame`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying codec wrapped by","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8859658,"byte_end":8859724,"line_start":153,"line_end":153,"column_start":5,"column_end":71}},{"value":"/ `Frame`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8859729,"byte_end":8859741,"line_start":154,"line_end":154,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8859746,"byte_end":8859749,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8859754,"byte_end":8859828,"line_start":156,"line_end":156,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8859833,"byte_end":8859904,"line_start":157,"line_end":157,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8860065,"byte_end":8860076,"line_start":163,"line_end":163,"column_start":12,"column_end":23},"name":"read_buffer","qualname":"<Framed<T, U>>::read_buffer","value":"pub fn read_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the read buffer.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8860010,"byte_end":8860053,"line_start":162,"line_end":162,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8860402,"byte_end":8860412,"line_start":172,"line_end":172,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Framed<T, U>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Frame`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `Frame`, returning its underlying I/O stream.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8860138,"byte_end":8860200,"line_start":167,"line_end":167,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8860205,"byte_end":8860208,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8860213,"byte_end":8860288,"line_start":169,"line_end":169,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8860293,"byte_end":8860363,"line_start":170,"line_end":170,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8860368,"byte_end":8860390,"line_start":171,"line_end":171,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8860806,"byte_end":8860816,"line_start":182,"line_end":182,"column_start":12,"column_end":22},"name":"into_parts","qualname":"<Framed<T, U>>::into_parts","value":"pub fn into_parts(Self) -> FramedParts<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Frame`, returning its underlying I/O stream, the buffer\n with unprocessed data, and the codec.","sig":null,"attributes":[{"value":"/ Consumes the `Frame`, returning its underlying I/O stream, the buffer","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8860485,"byte_end":8860558,"line_start":176,"line_end":176,"column_start":5,"column_end":78}},{"value":"/ with unprocessed data, and the codec.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8860563,"byte_end":8860604,"line_start":177,"line_end":177,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8860609,"byte_end":8860612,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8860617,"byte_end":8860692,"line_start":179,"line_end":179,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8860697,"byte_end":8860767,"line_start":180,"line_end":180,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8860772,"byte_end":8860794,"line_start":181,"line_end":181,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":481},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8865167,"byte_end":8865178,"line_start":342,"line_end":342,"column_start":12,"column_end":23},"name":"FramedParts","qualname":"::codec::framed::FramedParts","value":"FramedParts { io, codec, read_buf, write_buf }","parent":null,"children":[{"krate":0,"index":484},{"krate":0,"index":485},{"krate":0,"index":486},{"krate":0,"index":487},{"krate":0,"index":488}],"decl_id":null,"docs":" `FramedParts` contains an export of the data of a Framed transport.\n It can be used to construct a new `Framed` with a different codec.\n It contains all current buffers and the inner transport.\n","sig":null,"attributes":[{"value":"/ `FramedParts` contains an export of the data of a Framed transport.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8864935,"byte_end":8865006,"line_start":338,"line_end":338,"column_start":1,"column_end":72}},{"value":"/ It can be used to construct a new `Framed` with a different codec.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8865007,"byte_end":8865077,"line_start":339,"line_end":339,"column_start":1,"column_end":71}},{"value":"/ It contains all current buffers and the inner transport.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8865078,"byte_end":8865138,"line_start":340,"line_end":340,"column_start":1,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":484},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8865264,"byte_end":8865266,"line_start":344,"line_end":344,"column_start":9,"column_end":11},"name":"io","qualname":"::codec::framed::FramedParts::io","value":"T","parent":{"krate":0,"index":481},"children":[],"decl_id":null,"docs":" The inner transport used to read bytes to and write bytes to\n","sig":null,"attributes":[{"value":"/ The inner transport used to read bytes to and write bytes to","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8865191,"byte_end":8865255,"line_start":343,"line_end":343,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":485},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8865298,"byte_end":8865303,"line_start":347,"line_end":347,"column_start":9,"column_end":14},"name":"codec","qualname":"::codec::framed::FramedParts::codec","value":"U","parent":{"krate":0,"index":481},"children":[],"decl_id":null,"docs":" The codec\n","sig":null,"attributes":[{"value":"/ The codec","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8865276,"byte_end":8865289,"line_start":346,"line_end":346,"column_start":5,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":486},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8865368,"byte_end":8865376,"line_start":350,"line_end":350,"column_start":9,"column_end":17},"name":"read_buf","qualname":"::codec::framed::FramedParts::read_buf","value":"bytes::BytesMut","parent":{"krate":0,"index":481},"children":[],"decl_id":null,"docs":" The buffer with read but unprocessed data.\n","sig":null,"attributes":[{"value":"/ The buffer with read but unprocessed data.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8865313,"byte_end":8865359,"line_start":349,"line_end":349,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":487},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8865463,"byte_end":8865472,"line_start":353,"line_end":353,"column_start":9,"column_end":18},"name":"write_buf","qualname":"::codec::framed::FramedParts::write_buf","value":"bytes::BytesMut","parent":{"krate":0,"index":481},"children":[],"decl_id":null,"docs":" A buffer with unprocessed data which are not written yet.\n","sig":null,"attributes":[{"value":"/ A buffer with unprocessed data which are not written yet.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8865393,"byte_end":8865454,"line_start":352,"line_end":352,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":169},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8865705,"byte_end":8865708,"line_start":362,"line_end":362,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedParts<T, U>>::new","value":"pub fn new(T, U) -> FramedParts<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Create a new, default, `FramedParts`\n","sig":null,"attributes":[{"value":"/ Create a new, default, `FramedParts`","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8865653,"byte_end":8865693,"line_start":361,"line_end":361,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":740},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":8866307,"byte_end":8866317,"line_start":17,"line_end":17,"column_start":16,"column_end":26},"name":"FramedRead","qualname":"::codec::framed_read::FramedRead","value":"FramedRead {  }","parent":null,"children":[{"krate":0,"index":743}],"decl_id":null,"docs":" A `Stream` of messages decoded from an `AsyncRead`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":193},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":8866775,"byte_end":8866778,"line_start":43,"line_end":43,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedRead<T, D>>::new","value":"pub fn new(T, D) -> FramedRead<T, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedRead` with the given `decoder`.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedRead` with the given `decoder`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":8866707,"byte_end":8866763,"line_start":42,"line_end":42,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":197},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":8867298,"byte_end":8867305,"line_start":60,"line_end":60,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FramedRead<T, D>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":8867011,"byte_end":8867074,"line_start":54,"line_end":54,"column_start":5,"column_end":68}},{"value":"/ `FramedRead`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":8867079,"byte_end":8867096,"line_start":55,"line_end":55,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":8867101,"byte_end":8867104,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":8867109,"byte_end":8867184,"line_start":57,"line_end":57,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":8867189,"byte_end":8867259,"line_start":58,"line_end":58,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":8867264,"byte_end":8867286,"line_start":59,"line_end":59,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":198},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":8867656,"byte_end":8867663,"line_start":70,"line_end":70,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FramedRead<T, D>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":8867361,"byte_end":8867432,"line_start":64,"line_end":64,"column_start":5,"column_end":76}},{"value":"/ `FramedRead`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":8867437,"byte_end":8867454,"line_start":65,"line_end":65,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":8867459,"byte_end":8867462,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":8867467,"byte_end":8867542,"line_start":67,"line_end":67,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":8867547,"byte_end":8867617,"line_start":68,"line_end":68,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":8867622,"byte_end":8867644,"line_start":69,"line_end":69,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":199},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":8868000,"byte_end":8868010,"line_start":79,"line_end":79,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FramedRead<T, D>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `FramedRead`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `FramedRead`, returning its underlying I/O stream.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":8867731,"byte_end":8867798,"line_start":74,"line_end":74,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":8867803,"byte_end":8867806,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":8867811,"byte_end":8867886,"line_start":76,"line_end":76,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":8867891,"byte_end":8867961,"line_start":77,"line_end":77,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":8867966,"byte_end":8867988,"line_start":78,"line_end":78,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":200},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":8868125,"byte_end":8868132,"line_start":84,"line_end":84,"column_start":12,"column_end":19},"name":"decoder","qualname":"<FramedRead<T, D>>::decoder","value":"pub fn decoder(&Self) -> &D","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying decoder.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":8868063,"byte_end":8868113,"line_start":83,"line_end":83,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":201},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":8868261,"byte_end":8868272,"line_start":89,"line_end":89,"column_start":12,"column_end":23},"name":"decoder_mut","qualname":"<FramedRead<T, D>>::decoder_mut","value":"pub fn decoder_mut(&mut Self) -> &mut D","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying decoder.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":8868191,"byte_end":8868249,"line_start":88,"line_end":88,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":202},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":8868398,"byte_end":8868409,"line_start":94,"line_end":94,"column_start":12,"column_end":23},"name":"read_buffer","qualname":"<FramedRead<T, D>>::read_buffer","value":"pub fn read_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the read buffer.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":8868343,"byte_end":8868386,"line_start":93,"line_end":93,"column_start":5,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":654},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":8874252,"byte_end":8874263,"line_start":20,"line_end":20,"column_start":16,"column_end":27},"name":"FramedWrite","qualname":"::codec::framed_write::FramedWrite","value":"FramedWrite {  }","parent":null,"children":[{"krate":0,"index":657}],"decl_id":null,"docs":" A `Sink` of frames encoded to an `AsyncWrite`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":270},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":8874703,"byte_end":8874706,"line_start":43,"line_end":43,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedWrite<T, E>>::new","value":"pub fn new(T, E) -> FramedWrite<T, E>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedWrite` with the given `encoder`.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedWrite` with the given `encoder`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":8874634,"byte_end":8874691,"line_start":42,"line_end":42,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":274},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":8875231,"byte_end":8875238,"line_start":60,"line_end":60,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FramedWrite<T, E>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":8874943,"byte_end":8875006,"line_start":54,"line_end":54,"column_start":5,"column_end":68}},{"value":"/ `FramedWrite`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":8875011,"byte_end":8875029,"line_start":55,"line_end":55,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":8875034,"byte_end":8875037,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":8875042,"byte_end":8875117,"line_start":57,"line_end":57,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":8875122,"byte_end":8875192,"line_start":58,"line_end":58,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":8875197,"byte_end":8875219,"line_start":59,"line_end":59,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":275},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":8875590,"byte_end":8875597,"line_start":70,"line_end":70,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FramedWrite<T, E>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":8875294,"byte_end":8875365,"line_start":64,"line_end":64,"column_start":5,"column_end":76}},{"value":"/ `FramedWrite`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":8875370,"byte_end":8875388,"line_start":65,"line_end":65,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":8875393,"byte_end":8875396,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":8875401,"byte_end":8875476,"line_start":67,"line_end":67,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":8875481,"byte_end":8875551,"line_start":68,"line_end":68,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":8875556,"byte_end":8875578,"line_start":69,"line_end":69,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":276},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":8875935,"byte_end":8875945,"line_start":79,"line_end":79,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FramedWrite<T, E>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `FramedWrite`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `FramedWrite`, returning its underlying I/O stream.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":8875665,"byte_end":8875733,"line_start":74,"line_end":74,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":8875738,"byte_end":8875741,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":8875746,"byte_end":8875821,"line_start":76,"line_end":76,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":8875826,"byte_end":8875896,"line_start":77,"line_end":77,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":8875901,"byte_end":8875923,"line_start":78,"line_end":78,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":277},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":8876060,"byte_end":8876067,"line_start":84,"line_end":84,"column_start":12,"column_end":19},"name":"encoder","qualname":"<FramedWrite<T, E>>::encoder","value":"pub fn encoder(&Self) -> &E","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying decoder.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":8875998,"byte_end":8876048,"line_start":83,"line_end":83,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":278},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":8876196,"byte_end":8876207,"line_start":89,"line_end":89,"column_start":12,"column_end":23},"name":"encoder_mut","qualname":"<FramedWrite<T, E>>::encoder_mut","value":"pub fn encoder_mut(&mut Self) -> &mut E","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying decoder.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":8876126,"byte_end":8876184,"line_start":88,"line_end":88,"column_start":5,"column_end":63}}]},{"kind":"Mod","id":{"krate":0,"index":342},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"length_delimited","qualname":"::codec::length_delimited","value":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","parent":null,"children":[{"krate":0,"index":343},{"krate":0,"index":344},{"krate":0,"index":345},{"krate":0,"index":346},{"krate":0,"index":347},{"krate":0,"index":348},{"krate":0,"index":349},{"krate":0,"index":350},{"krate":0,"index":351},{"krate":0,"index":352},{"krate":0,"index":353},{"krate":0,"index":354},{"krate":0,"index":355},{"krate":0,"index":356},{"krate":0,"index":357},{"krate":0,"index":358},{"krate":0,"index":359},{"krate":0,"index":360},{"krate":0,"index":361},{"krate":0,"index":362},{"krate":0,"index":363},{"krate":0,"index":493},{"krate":0,"index":503},{"krate":0,"index":501},{"krate":0,"index":500},{"krate":0,"index":364},{"krate":0,"index":505},{"krate":0,"index":508},{"krate":0,"index":510},{"krate":0,"index":519},{"krate":0,"index":517},{"krate":0,"index":516},{"krate":0,"index":366},{"krate":0,"index":373},{"krate":0,"index":377},{"krate":0,"index":382},{"krate":0,"index":384},{"krate":0,"index":403},{"krate":0,"index":405},{"krate":0,"index":407},{"krate":0,"index":409}],"decl_id":null,"docs":" Frame a stream of bytes based on a length prefix","sig":null,"attributes":[{"value":"/ Frame a stream of bytes based on a length prefix","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8882647,"byte_end":8882699,"line_start":1,"line_end":1,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8882700,"byte_end":8882703,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Many protocols delimit their frames by prefacing frame data with a","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8882704,"byte_end":8882774,"line_start":3,"line_end":3,"column_start":1,"column_end":71}},{"value":"/ frame head that specifies the length of the frame. The","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8882775,"byte_end":8882833,"line_start":4,"line_end":4,"column_start":1,"column_end":59}},{"value":"/ `length_delimited` module provides utilities for handling the length","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8882834,"byte_end":8882906,"line_start":5,"line_end":5,"column_start":1,"column_end":73}},{"value":"/ based framing. This allows the consumer to work with entire frames","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8882907,"byte_end":8882977,"line_start":6,"line_end":6,"column_start":1,"column_end":71}},{"value":"/ without having to worry about buffering or other framing logic.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8882978,"byte_end":8883045,"line_start":7,"line_end":7,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8883046,"byte_end":8883049,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Getting started","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8883050,"byte_end":8883071,"line_start":9,"line_end":9,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8883072,"byte_end":8883075,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ If implementing a protocol from scratch, using length delimited framing","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8883076,"byte_end":8883151,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"/ is an easy way to get started. [`LengthDelimitedCodec::new()`] will","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8883152,"byte_end":8883223,"line_start":12,"line_end":12,"column_start":1,"column_end":72}},{"value":"/ return a length delimited codec using default configuration values.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8883224,"byte_end":8883295,"line_start":13,"line_end":13,"column_start":1,"column_end":72}},{"value":"/ This can then be used to construct a framer to adapt a full-duplex","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8883296,"byte_end":8883366,"line_start":14,"line_end":14,"column_start":1,"column_end":71}},{"value":"/ byte stream into a stream of frames.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8883367,"byte_end":8883407,"line_start":15,"line_end":15,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8883408,"byte_end":8883411,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8883412,"byte_end":8883419,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8883420,"byte_end":8883463,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"/ use tokio_util::codec::{Framed, LengthDelimitedCodec};","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8883464,"byte_end":8883522,"line_start":19,"line_end":19,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8883523,"byte_end":8883526,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ fn bind_transport<T: AsyncRead + AsyncWrite>(io: T)","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8883527,"byte_end":8883582,"line_start":21,"line_end":21,"column_start":1,"column_end":56}},{"value":"/     -> Framed<T, LengthDelimitedCodec>","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8883583,"byte_end":8883625,"line_start":22,"line_end":22,"column_start":1,"column_end":43}},{"value":"/ {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8883626,"byte_end":8883631,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/     Framed::new(io, LengthDelimitedCodec::new())","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8883632,"byte_end":8883684,"line_start":24,"line_end":24,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8883685,"byte_end":8883690,"line_start":25,"line_end":25,"column_start":1,"column_end":6}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8883691,"byte_end":8883713,"line_start":26,"line_end":26,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8883714,"byte_end":8883721,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8883722,"byte_end":8883725,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ The returned transport implements `Sink + Stream` for `BytesMut`. It","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8883726,"byte_end":8883798,"line_start":29,"line_end":29,"column_start":1,"column_end":73}},{"value":"/ encodes the frame with a big-endian `u32` header denoting the frame","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8883799,"byte_end":8883870,"line_start":30,"line_end":30,"column_start":1,"column_end":72}},{"value":"/ payload length:","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8883871,"byte_end":8883890,"line_start":31,"line_end":31,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8883891,"byte_end":8883894,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8883895,"byte_end":8883906,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ +----------+--------------------------------+","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8883907,"byte_end":8883956,"line_start":34,"line_end":34,"column_start":1,"column_end":50}},{"value":"/ | len: u32 |          frame payload         |","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8883957,"byte_end":8884006,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/ +----------+--------------------------------+","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8884007,"byte_end":8884056,"line_start":36,"line_end":36,"column_start":1,"column_end":50}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8884057,"byte_end":8884064,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8884065,"byte_end":8884068,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Specifically, given the following:","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8884069,"byte_end":8884107,"line_start":39,"line_end":39,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8884108,"byte_end":8884111,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8884112,"byte_end":8884119,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8884120,"byte_end":8884146,"line_start":42,"line_end":42,"column_start":1,"column_end":27}},{"value":"/ use tokio_util::codec::{Framed, LengthDelimitedCodec};","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8884147,"byte_end":8884205,"line_start":43,"line_end":43,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8884206,"byte_end":8884209,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ use futures::SinkExt;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8884210,"byte_end":8884235,"line_start":45,"line_end":45,"column_start":1,"column_end":26}},{"value":"/ use bytes::Bytes;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8884236,"byte_end":8884257,"line_start":46,"line_end":46,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8884258,"byte_end":8884261,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ async fn write_frame<T>(io: T) -> Result<(), Box<dyn std::error::Error>>","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8884262,"byte_end":8884338,"line_start":48,"line_end":48,"column_start":1,"column_end":77}},{"value":"/ where","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8884339,"byte_end":8884348,"line_start":49,"line_end":49,"column_start":1,"column_end":10}},{"value":"/     T: AsyncRead + AsyncWrite + Unpin,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8884349,"byte_end":8884391,"line_start":50,"line_end":50,"column_start":1,"column_end":43}},{"value":"/ {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8884392,"byte_end":8884397,"line_start":51,"line_end":51,"column_start":1,"column_end":6}},{"value":"/     let mut transport = Framed::new(io, LengthDelimitedCodec::new());","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8884398,"byte_end":8884471,"line_start":52,"line_end":52,"column_start":1,"column_end":74}},{"value":"/     let frame = Bytes::from(\"hello world\");","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8884472,"byte_end":8884519,"line_start":53,"line_end":53,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8884520,"byte_end":8884523,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/     transport.send(frame).await?;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8884524,"byte_end":8884561,"line_start":55,"line_end":55,"column_start":1,"column_end":38}},{"value":"/     Ok(())","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8884562,"byte_end":8884576,"line_start":56,"line_end":56,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8884577,"byte_end":8884582,"line_start":57,"line_end":57,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8884583,"byte_end":8884590,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8884591,"byte_end":8884594,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ The encoded frame will look like this:","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8884595,"byte_end":8884637,"line_start":60,"line_end":60,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8884638,"byte_end":8884641,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8884642,"byte_end":8884653,"line_start":62,"line_end":62,"column_start":1,"column_end":12}},{"value":"/ +---- len: u32 ----+---- data ----+","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8884654,"byte_end":8884693,"line_start":63,"line_end":63,"column_start":1,"column_end":40}},{"value":"/ | \\x00\\x00\\x00\\x0b |  hello world |","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8884694,"byte_end":8884733,"line_start":64,"line_end":64,"column_start":1,"column_end":40}},{"value":"/ +------------------+--------------+","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8884734,"byte_end":8884773,"line_start":65,"line_end":65,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8884774,"byte_end":8884781,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8884782,"byte_end":8884785,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ # Decoding","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8884786,"byte_end":8884800,"line_start":68,"line_end":68,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8884801,"byte_end":8884804,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ [`FramedRead`] adapts an [`AsyncRead`] into a `Stream` of [`BytesMut`],","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8884805,"byte_end":8884880,"line_start":70,"line_end":70,"column_start":1,"column_end":76}},{"value":"/ such that each yielded [`BytesMut`] value contains the contents of an","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8884881,"byte_end":8884954,"line_start":71,"line_end":71,"column_start":1,"column_end":74}},{"value":"/ entire frame. There are many configuration parameters enabling","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8884955,"byte_end":8885021,"line_start":72,"line_end":72,"column_start":1,"column_end":67}},{"value":"/ [`FramedRead`] to handle a wide range of protocols. Here are some","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8885022,"byte_end":8885091,"line_start":73,"line_end":73,"column_start":1,"column_end":70}},{"value":"/ examples that will cover the various options at a high level.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8885092,"byte_end":8885157,"line_start":74,"line_end":74,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8885158,"byte_end":8885161,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ ## Example 1","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8885162,"byte_end":8885178,"line_start":76,"line_end":76,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8885179,"byte_end":8885182,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, including the","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8885183,"byte_end":8885259,"line_start":78,"line_end":78,"column_start":1,"column_end":77}},{"value":"/ frame head in the yielded `BytesMut`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8885260,"byte_end":8885301,"line_start":79,"line_end":79,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8885302,"byte_end":8885305,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8885306,"byte_end":8885313,"line_start":81,"line_end":81,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8885314,"byte_end":8885345,"line_start":82,"line_end":82,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8885346,"byte_end":8885396,"line_start":83,"line_end":83,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8885397,"byte_end":8885438,"line_start":84,"line_end":84,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8885439,"byte_end":8885474,"line_start":85,"line_end":85,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8885475,"byte_end":8885523,"line_start":86,"line_end":86,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8885524,"byte_end":8885555,"line_start":87,"line_end":87,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(0)   // default value","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8885556,"byte_end":8885604,"line_start":88,"line_end":88,"column_start":1,"column_end":49}},{"value":"/     .num_skip(0) // Do not strip frame header","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8885605,"byte_end":8885654,"line_start":89,"line_end":89,"column_start":1,"column_end":50}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8885655,"byte_end":8885677,"line_start":90,"line_end":90,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8885678,"byte_end":8885685,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8885686,"byte_end":8885708,"line_start":92,"line_end":92,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8885709,"byte_end":8885716,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8885717,"byte_end":8885720,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8885721,"byte_end":8885769,"line_start":95,"line_end":95,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8885770,"byte_end":8885773,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8885774,"byte_end":8885785,"line_start":97,"line_end":97,"column_start":1,"column_end":12}},{"value":"/          INPUT                           DECODED","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8885786,"byte_end":8885838,"line_start":98,"line_end":98,"column_start":1,"column_end":53}},{"value":"/ +-- len ---+--- Payload ---+     +-- len ---+--- Payload ---+","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8885839,"byte_end":8885904,"line_start":99,"line_end":99,"column_start":1,"column_end":66}},{"value":"/ | \\x00\\x0B |  Hello world  | --> | \\x00\\x0B |  Hello world  |","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8885905,"byte_end":8885970,"line_start":100,"line_end":100,"column_start":1,"column_end":66}},{"value":"/ +----------+---------------+     +----------+---------------+","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8885971,"byte_end":8886036,"line_start":101,"line_end":101,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8886037,"byte_end":8886044,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8886045,"byte_end":8886048,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ The value of the length field is 11 (`\\x0B`) which represents the length","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8886049,"byte_end":8886125,"line_start":104,"line_end":104,"column_start":1,"column_end":77}},{"value":"/ of the payload, `hello world`. By default, [`FramedRead`] assumes that","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8886126,"byte_end":8886200,"line_start":105,"line_end":105,"column_start":1,"column_end":75}},{"value":"/ the length field represents the number of bytes that **follows** the","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8886201,"byte_end":8886273,"line_start":106,"line_end":106,"column_start":1,"column_end":73}},{"value":"/ length field. Thus, the entire frame has a length of 13: 2 bytes for the","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8886274,"byte_end":8886350,"line_start":107,"line_end":107,"column_start":1,"column_end":77}},{"value":"/ frame head + 11 bytes for the payload.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8886351,"byte_end":8886393,"line_start":108,"line_end":108,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8886394,"byte_end":8886397,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ ## Example 2","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8886398,"byte_end":8886414,"line_start":110,"line_end":110,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8886415,"byte_end":8886418,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, omitting the","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8886419,"byte_end":8886494,"line_start":112,"line_end":112,"column_start":1,"column_end":76}},{"value":"/ frame head in the yielded `BytesMut`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8886495,"byte_end":8886536,"line_start":113,"line_end":113,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8886537,"byte_end":8886540,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8886541,"byte_end":8886548,"line_start":115,"line_end":115,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8886549,"byte_end":8886580,"line_start":116,"line_end":116,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8886581,"byte_end":8886631,"line_start":117,"line_end":117,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8886632,"byte_end":8886673,"line_start":118,"line_end":118,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8886674,"byte_end":8886709,"line_start":119,"line_end":119,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8886710,"byte_end":8886758,"line_start":120,"line_end":120,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8886759,"byte_end":8886790,"line_start":121,"line_end":121,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(0)   // default value","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8886791,"byte_end":8886839,"line_start":122,"line_end":122,"column_start":1,"column_end":49}},{"value":"/     // `num_skip` is not needed, the default is to skip","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8886840,"byte_end":8886899,"line_start":123,"line_end":123,"column_start":1,"column_end":60}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8886900,"byte_end":8886922,"line_start":124,"line_end":124,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8886923,"byte_end":8886930,"line_start":125,"line_end":125,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8886931,"byte_end":8886953,"line_start":126,"line_end":126,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8886954,"byte_end":8886961,"line_start":127,"line_end":127,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8886962,"byte_end":8886965,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8886966,"byte_end":8887014,"line_start":129,"line_end":129,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8887015,"byte_end":8887018,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8887019,"byte_end":8887030,"line_start":131,"line_end":131,"column_start":1,"column_end":12}},{"value":"/          INPUT                        DECODED","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8887031,"byte_end":8887080,"line_start":132,"line_end":132,"column_start":1,"column_end":50}},{"value":"/ +-- len ---+--- Payload ---+     +--- Payload ---+","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8887081,"byte_end":8887135,"line_start":133,"line_end":133,"column_start":1,"column_end":55}},{"value":"/ | \\x00\\x0B |  Hello world  | --> |  Hello world  |","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8887136,"byte_end":8887190,"line_start":134,"line_end":134,"column_start":1,"column_end":55}},{"value":"/ +----------+---------------+     +---------------+","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8887191,"byte_end":8887245,"line_start":135,"line_end":135,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8887246,"byte_end":8887253,"line_start":136,"line_end":136,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8887254,"byte_end":8887257,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ This is similar to the first example, the only difference is that the","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8887258,"byte_end":8887331,"line_start":138,"line_end":138,"column_start":1,"column_end":74}},{"value":"/ frame head is **not** included in the yielded `BytesMut` value.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8887332,"byte_end":8887399,"line_start":139,"line_end":139,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8887400,"byte_end":8887403,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ ## Example 3","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8887404,"byte_end":8887420,"line_start":141,"line_end":141,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8887421,"byte_end":8887424,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, including the","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8887425,"byte_end":8887501,"line_start":143,"line_end":143,"column_start":1,"column_end":77}},{"value":"/ frame head in the yielded `BytesMut`. In this case, the length field","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8887502,"byte_end":8887574,"line_start":144,"line_end":144,"column_start":1,"column_end":73}},{"value":"/ **includes** the frame head length.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8887575,"byte_end":8887614,"line_start":145,"line_end":145,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8887615,"byte_end":8887618,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8887619,"byte_end":8887626,"line_start":147,"line_end":147,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8887627,"byte_end":8887658,"line_start":148,"line_end":148,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8887659,"byte_end":8887709,"line_start":149,"line_end":149,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8887710,"byte_end":8887751,"line_start":150,"line_end":150,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8887752,"byte_end":8887787,"line_start":151,"line_end":151,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8887788,"byte_end":8887836,"line_start":152,"line_end":152,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8887837,"byte_end":8887868,"line_start":153,"line_end":153,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(-2)  // size of head","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8887869,"byte_end":8887916,"line_start":154,"line_end":154,"column_start":1,"column_end":48}},{"value":"/     .num_skip(0)","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8887917,"byte_end":8887937,"line_start":155,"line_end":155,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8887938,"byte_end":8887960,"line_start":156,"line_end":156,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8887961,"byte_end":8887968,"line_start":157,"line_end":157,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8887969,"byte_end":8887991,"line_start":158,"line_end":158,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8887992,"byte_end":8887999,"line_start":159,"line_end":159,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8888000,"byte_end":8888003,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8888004,"byte_end":8888052,"line_start":161,"line_end":161,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8888053,"byte_end":8888056,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8888057,"byte_end":8888068,"line_start":163,"line_end":163,"column_start":1,"column_end":12}},{"value":"/          INPUT                           DECODED","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8888069,"byte_end":8888121,"line_start":164,"line_end":164,"column_start":1,"column_end":53}},{"value":"/ +-- len ---+--- Payload ---+     +-- len ---+--- Payload ---+","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8888122,"byte_end":8888187,"line_start":165,"line_end":165,"column_start":1,"column_end":66}},{"value":"/ | \\x00\\x0D |  Hello world  | --> | \\x00\\x0D |  Hello world  |","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8888188,"byte_end":8888253,"line_start":166,"line_end":166,"column_start":1,"column_end":66}},{"value":"/ +----------+---------------+     +----------+---------------+","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8888254,"byte_end":8888319,"line_start":167,"line_end":167,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8888320,"byte_end":8888327,"line_start":168,"line_end":168,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8888328,"byte_end":8888331,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ In most cases, the length field represents the length of the payload","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8888332,"byte_end":8888404,"line_start":170,"line_end":170,"column_start":1,"column_end":73}},{"value":"/ only, as shown in the previous examples. However, in some protocols the","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8888405,"byte_end":8888480,"line_start":171,"line_end":171,"column_start":1,"column_end":76}},{"value":"/ length field represents the length of the whole frame, including the","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8888481,"byte_end":8888553,"line_start":172,"line_end":172,"column_start":1,"column_end":73}},{"value":"/ head. In such cases, we specify a negative `length_adjustment` to adjust","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8888554,"byte_end":8888630,"line_start":173,"line_end":173,"column_start":1,"column_end":77}},{"value":"/ the value provided in the frame head to represent the payload length.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8888631,"byte_end":8888704,"line_start":174,"line_end":174,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8888705,"byte_end":8888708,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ ## Example 4","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8888709,"byte_end":8888725,"line_start":176,"line_end":176,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8888726,"byte_end":8888729,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ The following will parse a 3 byte length field at offset 0 in a 5 byte","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8888730,"byte_end":8888804,"line_start":178,"line_end":178,"column_start":1,"column_end":75}},{"value":"/ frame head, including the frame head in the yielded `BytesMut`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8888805,"byte_end":8888872,"line_start":179,"line_end":179,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8888873,"byte_end":8888876,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8888877,"byte_end":8888884,"line_start":181,"line_end":181,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8888885,"byte_end":8888916,"line_start":182,"line_end":182,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8888917,"byte_end":8888967,"line_start":183,"line_end":183,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8888968,"byte_end":8889009,"line_start":184,"line_end":184,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8889010,"byte_end":8889045,"line_start":185,"line_end":185,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8889046,"byte_end":8889094,"line_start":186,"line_end":186,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(3)","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8889095,"byte_end":8889126,"line_start":187,"line_end":187,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(2)  // remaining head","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8889127,"byte_end":8889175,"line_start":188,"line_end":188,"column_start":1,"column_end":49}},{"value":"/     .num_skip(0)","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8889176,"byte_end":8889196,"line_start":189,"line_end":189,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8889197,"byte_end":8889219,"line_start":190,"line_end":190,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8889220,"byte_end":8889227,"line_start":191,"line_end":191,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8889228,"byte_end":8889250,"line_start":192,"line_end":192,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8889251,"byte_end":8889258,"line_start":193,"line_end":193,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8889259,"byte_end":8889262,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8889263,"byte_end":8889311,"line_start":195,"line_end":195,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8889312,"byte_end":8889315,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8889316,"byte_end":8889327,"line_start":197,"line_end":197,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8889328,"byte_end":8889354,"line_start":198,"line_end":198,"column_start":1,"column_end":27}},{"value":"/ +---- len -----+- head -+--- Payload ---+","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8889355,"byte_end":8889400,"line_start":199,"line_end":199,"column_start":1,"column_end":46}},{"value":"/ | \\x00\\x00\\x0B | \\xCAFE |  Hello world  |","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8889401,"byte_end":8889446,"line_start":200,"line_end":200,"column_start":1,"column_end":46}},{"value":"/ +--------------+--------+---------------+","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8889447,"byte_end":8889492,"line_start":201,"line_end":201,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8889493,"byte_end":8889496,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/                  DECODED","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8889497,"byte_end":8889525,"line_start":203,"line_end":203,"column_start":1,"column_end":29}},{"value":"/ +---- len -----+- head -+--- Payload ---+","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8889526,"byte_end":8889571,"line_start":204,"line_end":204,"column_start":1,"column_end":46}},{"value":"/ | \\x00\\x00\\x0B | \\xCAFE |  Hello world  |","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8889572,"byte_end":8889617,"line_start":205,"line_end":205,"column_start":1,"column_end":46}},{"value":"/ +--------------+--------+---------------+","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8889618,"byte_end":8889663,"line_start":206,"line_end":206,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8889664,"byte_end":8889671,"line_start":207,"line_end":207,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8889672,"byte_end":8889675,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ A more advanced example that shows a case where there is extra frame","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8889676,"byte_end":8889748,"line_start":209,"line_end":209,"column_start":1,"column_end":73}},{"value":"/ head data between the length field and the payload. In such cases, it is","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8889749,"byte_end":8889825,"line_start":210,"line_end":210,"column_start":1,"column_end":77}},{"value":"/ usually desirable to include the frame head as part of the yielded","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8889826,"byte_end":8889896,"line_start":211,"line_end":211,"column_start":1,"column_end":71}},{"value":"/ `BytesMut`. This lets consumers of the length delimited framer to","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8889897,"byte_end":8889966,"line_start":212,"line_end":212,"column_start":1,"column_end":70}},{"value":"/ process the frame head as needed.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8889967,"byte_end":8890004,"line_start":213,"line_end":213,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8890005,"byte_end":8890008,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ The positive `length_adjustment` value lets `FramedRead` factor in the","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8890009,"byte_end":8890083,"line_start":215,"line_end":215,"column_start":1,"column_end":75}},{"value":"/ additional head into the frame length calculation.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8890084,"byte_end":8890138,"line_start":216,"line_end":216,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8890139,"byte_end":8890142,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ ## Example 5","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8890143,"byte_end":8890159,"line_start":218,"line_end":218,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8890160,"byte_end":8890163,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 1 of a 4 byte","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8890164,"byte_end":8890237,"line_start":220,"line_end":220,"column_start":1,"column_end":74}},{"value":"/ frame head. The first byte and the length field will be omitted from the","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8890238,"byte_end":8890314,"line_start":221,"line_end":221,"column_start":1,"column_end":77}},{"value":"/ yielded `BytesMut`, but the trailing 2 bytes of the frame head will be","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8890315,"byte_end":8890389,"line_start":222,"line_end":222,"column_start":1,"column_end":75}},{"value":"/ included.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8890390,"byte_end":8890403,"line_start":223,"line_end":223,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8890404,"byte_end":8890407,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8890408,"byte_end":8890415,"line_start":225,"line_end":225,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8890416,"byte_end":8890447,"line_start":226,"line_end":226,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8890448,"byte_end":8890498,"line_start":227,"line_end":227,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8890499,"byte_end":8890540,"line_start":228,"line_end":228,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8890541,"byte_end":8890576,"line_start":229,"line_end":229,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(1) // length of hdr1","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8890577,"byte_end":8890626,"line_start":230,"line_end":230,"column_start":1,"column_end":50}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8890627,"byte_end":8890658,"line_start":231,"line_end":231,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(1)  // length of hdr2","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8890659,"byte_end":8890707,"line_start":232,"line_end":232,"column_start":1,"column_end":49}},{"value":"/     .num_skip(3) // length of hdr1 + LEN","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8890708,"byte_end":8890752,"line_start":233,"line_end":233,"column_start":1,"column_end":45}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8890753,"byte_end":8890775,"line_start":234,"line_end":234,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8890776,"byte_end":8890783,"line_start":235,"line_end":235,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8890784,"byte_end":8890806,"line_start":236,"line_end":236,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8890807,"byte_end":8890814,"line_start":237,"line_end":237,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8890815,"byte_end":8890818,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8890819,"byte_end":8890867,"line_start":239,"line_end":239,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8890868,"byte_end":8890871,"line_start":240,"line_end":240,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8890872,"byte_end":8890883,"line_start":241,"line_end":241,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8890884,"byte_end":8890910,"line_start":242,"line_end":242,"column_start":1,"column_end":27}},{"value":"/ +- hdr1 -+-- len ---+- hdr2 -+--- Payload ---+","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8890911,"byte_end":8890961,"line_start":243,"line_end":243,"column_start":1,"column_end":51}},{"value":"/ |  \\xCA  | \\x00\\x0B |  \\xFE  |  Hello world  |","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8890962,"byte_end":8891012,"line_start":244,"line_end":244,"column_start":1,"column_end":51}},{"value":"/ +--------+----------+--------+---------------+","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8891013,"byte_end":8891063,"line_start":245,"line_end":245,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8891064,"byte_end":8891067,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/          DECODED","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8891068,"byte_end":8891088,"line_start":247,"line_end":247,"column_start":1,"column_end":21}},{"value":"/ +- hdr2 -+--- Payload ---+","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8891089,"byte_end":8891119,"line_start":248,"line_end":248,"column_start":1,"column_end":31}},{"value":"/ |  \\xFE  |  Hello world  |","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8891120,"byte_end":8891150,"line_start":249,"line_end":249,"column_start":1,"column_end":31}},{"value":"/ +--------+---------------+","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8891151,"byte_end":8891181,"line_start":250,"line_end":250,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8891182,"byte_end":8891189,"line_start":251,"line_end":251,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8891190,"byte_end":8891193,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ The length field is situated in the middle of the frame head. In this","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8891194,"byte_end":8891267,"line_start":253,"line_end":253,"column_start":1,"column_end":74}},{"value":"/ case, the first byte in the frame head could be a version or some other","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8891268,"byte_end":8891343,"line_start":254,"line_end":254,"column_start":1,"column_end":76}},{"value":"/ identifier that is not needed for processing. On the other hand, the","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8891344,"byte_end":8891416,"line_start":255,"line_end":255,"column_start":1,"column_end":73}},{"value":"/ second half of the head is needed.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8891417,"byte_end":8891455,"line_start":256,"line_end":256,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8891456,"byte_end":8891459,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ `length_field_offset` indicates how many bytes to skip before starting","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8891460,"byte_end":8891534,"line_start":258,"line_end":258,"column_start":1,"column_end":75}},{"value":"/ to read the length field.  `length_adjustment` is the number of bytes to","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8891535,"byte_end":8891611,"line_start":259,"line_end":259,"column_start":1,"column_end":77}},{"value":"/ skip starting at the end of the length field. In this case, it is the","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8891612,"byte_end":8891685,"line_start":260,"line_end":260,"column_start":1,"column_end":74}},{"value":"/ second half of the head.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8891686,"byte_end":8891714,"line_start":261,"line_end":261,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8891715,"byte_end":8891718,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"/ ## Example 6","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8891719,"byte_end":8891735,"line_start":263,"line_end":263,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8891736,"byte_end":8891739,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 1 of a 4 byte","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8891740,"byte_end":8891813,"line_start":265,"line_end":265,"column_start":1,"column_end":74}},{"value":"/ frame head. The first byte and the length field will be omitted from the","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8891814,"byte_end":8891890,"line_start":266,"line_end":266,"column_start":1,"column_end":77}},{"value":"/ yielded `BytesMut`, but the trailing 2 bytes of the frame head will be","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8891891,"byte_end":8891965,"line_start":267,"line_end":267,"column_start":1,"column_end":75}},{"value":"/ included. In this case, the length field **includes** the frame head","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8891966,"byte_end":8892038,"line_start":268,"line_end":268,"column_start":1,"column_end":73}},{"value":"/ length.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8892039,"byte_end":8892050,"line_start":269,"line_end":269,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8892051,"byte_end":8892054,"line_start":270,"line_end":270,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8892055,"byte_end":8892062,"line_start":271,"line_end":271,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8892063,"byte_end":8892094,"line_start":272,"line_end":272,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8892095,"byte_end":8892145,"line_start":273,"line_end":273,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8892146,"byte_end":8892187,"line_start":274,"line_end":274,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8892188,"byte_end":8892223,"line_start":275,"line_end":275,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(1) // length of hdr1","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8892224,"byte_end":8892273,"line_start":276,"line_end":276,"column_start":1,"column_end":50}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8892274,"byte_end":8892305,"line_start":277,"line_end":277,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(-3)  // length of hdr1 + LEN, negative","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8892306,"byte_end":8892371,"line_start":278,"line_end":278,"column_start":1,"column_end":66}},{"value":"/     .num_skip(3)","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8892372,"byte_end":8892392,"line_start":279,"line_end":279,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8892393,"byte_end":8892415,"line_start":280,"line_end":280,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8892416,"byte_end":8892423,"line_start":281,"line_end":281,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8892424,"byte_end":8892431,"line_start":282,"line_end":282,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8892432,"byte_end":8892435,"line_start":283,"line_end":283,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8892436,"byte_end":8892484,"line_start":284,"line_end":284,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8892485,"byte_end":8892488,"line_start":285,"line_end":285,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8892489,"byte_end":8892500,"line_start":286,"line_end":286,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8892501,"byte_end":8892527,"line_start":287,"line_end":287,"column_start":1,"column_end":27}},{"value":"/ +- hdr1 -+-- len ---+- hdr2 -+--- Payload ---+","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8892528,"byte_end":8892578,"line_start":288,"line_end":288,"column_start":1,"column_end":51}},{"value":"/ |  \\xCA  | \\x00\\x0F |  \\xFE  |  Hello world  |","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8892579,"byte_end":8892629,"line_start":289,"line_end":289,"column_start":1,"column_end":51}},{"value":"/ +--------+----------+--------+---------------+","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8892630,"byte_end":8892680,"line_start":290,"line_end":290,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8892681,"byte_end":8892684,"line_start":291,"line_end":291,"column_start":1,"column_end":4}},{"value":"/          DECODED","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8892685,"byte_end":8892705,"line_start":292,"line_end":292,"column_start":1,"column_end":21}},{"value":"/ +- hdr2 -+--- Payload ---+","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8892706,"byte_end":8892736,"line_start":293,"line_end":293,"column_start":1,"column_end":31}},{"value":"/ |  \\xFE  |  Hello world  |","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8892737,"byte_end":8892767,"line_start":294,"line_end":294,"column_start":1,"column_end":31}},{"value":"/ +--------+---------------+","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8892768,"byte_end":8892798,"line_start":295,"line_end":295,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8892799,"byte_end":8892806,"line_start":296,"line_end":296,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8892807,"byte_end":8892810,"line_start":297,"line_end":297,"column_start":1,"column_end":4}},{"value":"/ Similar to the example above, the difference is that the length field","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8892811,"byte_end":8892884,"line_start":298,"line_end":298,"column_start":1,"column_end":74}},{"value":"/ represents the length of the entire frame instead of just the payload.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8892885,"byte_end":8892959,"line_start":299,"line_end":299,"column_start":1,"column_end":75}},{"value":"/ The length of `hdr1` and `len` must be counted in `length_adjustment`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8892960,"byte_end":8893034,"line_start":300,"line_end":300,"column_start":1,"column_end":75}},{"value":"/ Note that the length of `hdr2` does **not** need to be explicitly set","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8893035,"byte_end":8893108,"line_start":301,"line_end":301,"column_start":1,"column_end":74}},{"value":"/ anywhere because it already is factored into the total frame length that","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8893109,"byte_end":8893185,"line_start":302,"line_end":302,"column_start":1,"column_end":77}},{"value":"/ is read from the byte stream.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8893186,"byte_end":8893219,"line_start":303,"line_end":303,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8893220,"byte_end":8893223,"line_start":304,"line_end":304,"column_start":1,"column_end":4}},{"value":"/ # Encoding","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8893224,"byte_end":8893238,"line_start":305,"line_end":305,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8893239,"byte_end":8893242,"line_start":306,"line_end":306,"column_start":1,"column_end":4}},{"value":"/ [`FramedWrite`] adapts an [`AsyncWrite`] into a `Sink` of [`BytesMut`],","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8893243,"byte_end":8893318,"line_start":307,"line_end":307,"column_start":1,"column_end":76}},{"value":"/ such that each submitted [`BytesMut`] is prefaced by a length field.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8893319,"byte_end":8893391,"line_start":308,"line_end":308,"column_start":1,"column_end":73}},{"value":"/ There are fewer configuration options than [`FramedRead`]. Given","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8893392,"byte_end":8893460,"line_start":309,"line_end":309,"column_start":1,"column_end":69}},{"value":"/ protocols that have more complex frame heads, an encoder should probably","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8893461,"byte_end":8893537,"line_start":310,"line_end":310,"column_start":1,"column_end":77}},{"value":"/ be written by hand using [`Encoder`].","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8893538,"byte_end":8893579,"line_start":311,"line_end":311,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8893580,"byte_end":8893583,"line_start":312,"line_end":312,"column_start":1,"column_end":4}},{"value":"/ Here is a simple example, given a `FramedWrite` with the following","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8893584,"byte_end":8893654,"line_start":313,"line_end":313,"column_start":1,"column_end":71}},{"value":"/ configuration:","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8893655,"byte_end":8893673,"line_start":314,"line_end":314,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8893674,"byte_end":8893677,"line_start":315,"line_end":315,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8893678,"byte_end":8893685,"line_start":316,"line_end":316,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncWrite;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8893686,"byte_end":8893718,"line_start":317,"line_end":317,"column_start":1,"column_end":33}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8893719,"byte_end":8893769,"line_start":318,"line_end":318,"column_start":1,"column_end":51}},{"value":"/ # fn write_frame<T: AsyncWrite>(io: T) {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8893770,"byte_end":8893814,"line_start":319,"line_end":319,"column_start":1,"column_end":45}},{"value":"/ # let _ =","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8893815,"byte_end":8893828,"line_start":320,"line_end":320,"column_start":1,"column_end":14}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8893829,"byte_end":8893864,"line_start":321,"line_end":321,"column_start":1,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8893865,"byte_end":8893896,"line_start":322,"line_end":322,"column_start":1,"column_end":32}},{"value":"/     .new_write(io);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8893897,"byte_end":8893920,"line_start":323,"line_end":323,"column_start":1,"column_end":24}},{"value":"/ # }","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8893921,"byte_end":8893928,"line_start":324,"line_end":324,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8893929,"byte_end":8893951,"line_start":325,"line_end":325,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8893952,"byte_end":8893959,"line_start":326,"line_end":326,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8893960,"byte_end":8893963,"line_start":327,"line_end":327,"column_start":1,"column_end":4}},{"value":"/ A payload of `hello world` will be encoded as:","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8893964,"byte_end":8894014,"line_start":328,"line_end":328,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8894015,"byte_end":8894018,"line_start":329,"line_end":329,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8894019,"byte_end":8894030,"line_start":330,"line_end":330,"column_start":1,"column_end":12}},{"value":"/ +- len: u16 -+---- data ----+","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8894031,"byte_end":8894064,"line_start":331,"line_end":331,"column_start":1,"column_end":34}},{"value":"/ |  \\x00\\x0b  |  hello world |","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8894065,"byte_end":8894098,"line_start":332,"line_end":332,"column_start":1,"column_end":34}},{"value":"/ +------------+--------------+","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8894099,"byte_end":8894132,"line_start":333,"line_end":333,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8894133,"byte_end":8894140,"line_start":334,"line_end":334,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8894141,"byte_end":8894144,"line_start":335,"line_end":335,"column_start":1,"column_end":4}},{"value":"/ [`LengthDelimitedCodec::new()`]: struct.LengthDelimitedCodec.html#method.new","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8894145,"byte_end":8894225,"line_start":336,"line_end":336,"column_start":1,"column_end":81}},{"value":"/ [`FramedRead`]: struct.FramedRead.html","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8894226,"byte_end":8894268,"line_start":337,"line_end":337,"column_start":1,"column_end":43}},{"value":"/ [`FramedWrite`]: struct.FramedWrite.html","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8894269,"byte_end":8894313,"line_start":338,"line_end":338,"column_start":1,"column_end":45}},{"value":"/ [`AsyncRead`]: ../../trait.AsyncRead.html","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8894314,"byte_end":8894359,"line_start":339,"line_end":339,"column_start":1,"column_end":46}},{"value":"/ [`AsyncWrite`]: ../../trait.AsyncWrite.html","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8894360,"byte_end":8894407,"line_start":340,"line_end":340,"column_start":1,"column_end":48}},{"value":"/ [`Encoder`]: ../trait.Encoder.html","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8894408,"byte_end":8894446,"line_start":341,"line_end":341,"column_start":1,"column_end":39}},{"value":"/ [`BytesMut`]: https://docs.rs/bytes/0.4/bytes/struct.BytesMut.html","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8894447,"byte_end":8894517,"line_start":342,"line_end":342,"column_start":1,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":493},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8895079,"byte_end":8895086,"line_start":359,"line_end":359,"column_start":12,"column_end":19},"name":"Builder","qualname":"::codec::length_delimited::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":494},{"krate":0,"index":495},{"krate":0,"index":496},{"krate":0,"index":497},{"krate":0,"index":498},{"krate":0,"index":499}],"decl_id":null,"docs":" Configure length delimited `LengthDelimitedCodec`s.","sig":null,"attributes":[{"value":"/ Configure length delimited `LengthDelimitedCodec`s.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8894761,"byte_end":8894816,"line_start":353,"line_end":353,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8894817,"byte_end":8894820,"line_start":354,"line_end":354,"column_start":1,"column_end":4}},{"value":"/ `Builder` enables constructing configured length delimited codecs. Note","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8894821,"byte_end":8894896,"line_start":355,"line_end":355,"column_start":1,"column_end":76}},{"value":"/ that not all configuration settings apply to both encoding and decoding. See","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8894897,"byte_end":8894977,"line_start":356,"line_end":356,"column_start":1,"column_end":81}},{"value":"/ the documentation for specific methods for more detail.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8894978,"byte_end":8895037,"line_start":357,"line_end":357,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":364},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8895757,"byte_end":8895782,"line_start":381,"line_end":381,"column_start":12,"column_end":37},"name":"LengthDelimitedCodecError","qualname":"::codec::length_delimited::LengthDelimitedCodecError","value":"LengthDelimitedCodecError {  }","parent":null,"children":[{"krate":0,"index":365}],"decl_id":null,"docs":" An error when the number of bytes read is more than max frame length.\n","sig":null,"attributes":[{"value":"/ An error when the number of bytes read is more than max frame length.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8895672,"byte_end":8895745,"line_start":380,"line_end":380,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":505},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8896127,"byte_end":8896147,"line_start":394,"line_end":394,"column_start":12,"column_end":32},"name":"LengthDelimitedCodec","qualname":"::codec::length_delimited::LengthDelimitedCodec","value":"LengthDelimitedCodec {  }","parent":null,"children":[{"krate":0,"index":506},{"krate":0,"index":507}],"decl_id":null,"docs":" A codec for frames delimited by a frame head specifying their lengths.","sig":null,"attributes":[{"value":"/ A codec for frames delimited by a frame head specifying their lengths.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8895803,"byte_end":8895877,"line_start":385,"line_end":385,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8895878,"byte_end":8895881,"line_start":386,"line_end":386,"column_start":1,"column_end":4}},{"value":"/ This allows the consumer to work with entire frames without having to worry","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8895882,"byte_end":8895961,"line_start":387,"line_end":387,"column_start":1,"column_end":80}},{"value":"/ about buffering or other framing logic.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8895962,"byte_end":8896005,"line_start":388,"line_end":388,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8896006,"byte_end":8896009,"line_start":389,"line_end":389,"column_start":1,"column_end":4}},{"value":"/ See [module level] documentation for more detail.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8896010,"byte_end":8896063,"line_start":390,"line_end":390,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8896064,"byte_end":8896067,"line_start":391,"line_end":391,"column_start":1,"column_end":4}},{"value":"/ [module level]: index.html","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8896068,"byte_end":8896098,"line_start":392,"line_end":392,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":367},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8896491,"byte_end":8896494,"line_start":412,"line_end":412,"column_start":12,"column_end":15},"name":"new","qualname":"<LengthDelimitedCodec>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `LengthDelimitedCodec` with the default configuration values.\n","sig":null,"attributes":[{"value":"/ Creates a new `LengthDelimitedCodec` with the default configuration values.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8896400,"byte_end":8896479,"line_start":411,"line_end":411,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":368},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8896721,"byte_end":8896728,"line_start":421,"line_end":421,"column_start":12,"column_end":19},"name":"builder","qualname":"<LengthDelimitedCodec>::builder","value":"pub fn builder() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new length delimited codec builder with default configuration\n values.\n","sig":null,"attributes":[{"value":"/ Creates a new length delimited codec builder with default configuration","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8896618,"byte_end":8896693,"line_start":419,"line_end":419,"column_start":5,"column_end":80}},{"value":"/ values.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8896698,"byte_end":8896709,"line_start":420,"line_end":420,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":369},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8896950,"byte_end":8896966,"line_start":429,"line_end":429,"column_start":12,"column_end":28},"name":"max_frame_length","qualname":"<LengthDelimitedCodec>::max_frame_length","value":"pub fn max_frame_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current max frame setting","sig":null,"attributes":[{"value":"/ Returns the current max frame setting","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8896778,"byte_end":8896819,"line_start":425,"line_end":425,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8896824,"byte_end":8896827,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ This is the largest size this codec will accept from the wire. Larger","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8896832,"byte_end":8896905,"line_start":427,"line_end":427,"column_start":5,"column_end":78}},{"value":"/ frames will be rejected.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8896910,"byte_end":8896938,"line_start":428,"line_end":428,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":370},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8897387,"byte_end":8897407,"line_start":439,"line_end":439,"column_start":12,"column_end":32},"name":"set_max_frame_length","qualname":"<LengthDelimitedCodec>::set_max_frame_length","value":"pub fn set_max_frame_length(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Updates the max frame setting.","sig":null,"attributes":[{"value":"/ Updates the max frame setting.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8897031,"byte_end":8897065,"line_start":433,"line_end":433,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8897070,"byte_end":8897073,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ The change takes effect the next time a frame is decoded. In other","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8897078,"byte_end":8897148,"line_start":435,"line_end":435,"column_start":5,"column_end":75}},{"value":"/ words, if a frame is currently in process of being decoded with a frame","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8897153,"byte_end":8897228,"line_start":436,"line_end":436,"column_start":5,"column_end":80}},{"value":"/ size greater than `val` but less than the max frame length in effect","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8897233,"byte_end":8897305,"line_start":437,"line_end":437,"column_start":5,"column_end":77}},{"value":"/ before calling this function, then the frame will be allowed.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8897310,"byte_end":8897375,"line_start":438,"line_end":438,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":385},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8902717,"byte_end":8902720,"line_start":622,"line_end":622,"column_start":12,"column_end":15},"name":"new","qualname":"<Builder>::new","value":"pub fn new() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new length delimited codec builder with default configuration\n values.","sig":null,"attributes":[{"value":"/ Creates a new length delimited codec builder with default configuration","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8902175,"byte_end":8902250,"line_start":603,"line_end":603,"column_start":5,"column_end":80}},{"value":"/ values.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8902255,"byte_end":8902266,"line_start":604,"line_end":604,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8902271,"byte_end":8902274,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8902279,"byte_end":8902293,"line_start":606,"line_end":606,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8902298,"byte_end":8902301,"line_start":607,"line_end":607,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8902306,"byte_end":8902313,"line_start":608,"line_end":608,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8902318,"byte_end":8902349,"line_start":609,"line_end":609,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8902354,"byte_end":8902402,"line_start":610,"line_end":610,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8902407,"byte_end":8902410,"line_start":611,"line_end":611,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8902415,"byte_end":8902456,"line_start":612,"line_end":612,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8902461,"byte_end":8902496,"line_start":613,"line_end":613,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8902501,"byte_end":8902532,"line_start":614,"line_end":614,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8902537,"byte_end":8902568,"line_start":615,"line_end":615,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8902573,"byte_end":8902602,"line_start":616,"line_end":616,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8902607,"byte_end":8902627,"line_start":617,"line_end":617,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8902632,"byte_end":8902654,"line_start":618,"line_end":618,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8902659,"byte_end":8902666,"line_start":619,"line_end":619,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8902671,"byte_end":8902693,"line_start":620,"line_end":620,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8902698,"byte_end":8902705,"line_start":621,"line_end":621,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":386},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8903905,"byte_end":8903915,"line_start":663,"line_end":663,"column_start":12,"column_end":22},"name":"big_endian","qualname":"<Builder>::big_endian","value":"pub fn big_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a big endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a big endian integer","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8903384,"byte_end":8903433,"line_start":644,"line_end":644,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8903438,"byte_end":8903441,"line_start":645,"line_end":645,"column_start":5,"column_end":8}},{"value":"/ This is the default setting.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8903446,"byte_end":8903478,"line_start":646,"line_end":646,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8903483,"byte_end":8903486,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8903491,"byte_end":8903559,"line_start":648,"line_end":648,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8903564,"byte_end":8903567,"line_start":649,"line_end":649,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8903572,"byte_end":8903586,"line_start":650,"line_end":650,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8903591,"byte_end":8903594,"line_start":651,"line_end":651,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8903599,"byte_end":8903606,"line_start":652,"line_end":652,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8903611,"byte_end":8903642,"line_start":653,"line_end":653,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8903647,"byte_end":8903695,"line_start":654,"line_end":654,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8903700,"byte_end":8903703,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8903708,"byte_end":8903749,"line_start":656,"line_end":656,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8903754,"byte_end":8903789,"line_start":657,"line_end":657,"column_start":5,"column_end":40}},{"value":"/     .big_endian()","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8903794,"byte_end":8903815,"line_start":658,"line_end":658,"column_start":5,"column_end":26}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8903820,"byte_end":8903842,"line_start":659,"line_end":659,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8903847,"byte_end":8903854,"line_start":660,"line_end":660,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8903859,"byte_end":8903881,"line_start":661,"line_end":661,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8903886,"byte_end":8903893,"line_start":662,"line_end":662,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":387},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8904547,"byte_end":8904560,"line_start":687,"line_end":687,"column_start":12,"column_end":25},"name":"little_endian","qualname":"<Builder>::little_endian","value":"pub fn little_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a little endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a little endian integer","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8904014,"byte_end":8904066,"line_start":668,"line_end":668,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8904071,"byte_end":8904074,"line_start":669,"line_end":669,"column_start":5,"column_end":8}},{"value":"/ The default setting is big endian.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8904079,"byte_end":8904117,"line_start":670,"line_end":670,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8904122,"byte_end":8904125,"line_start":671,"line_end":671,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8904130,"byte_end":8904198,"line_start":672,"line_end":672,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8904203,"byte_end":8904206,"line_start":673,"line_end":673,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8904211,"byte_end":8904225,"line_start":674,"line_end":674,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8904230,"byte_end":8904233,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8904238,"byte_end":8904245,"line_start":676,"line_end":676,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8904250,"byte_end":8904281,"line_start":677,"line_end":677,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8904286,"byte_end":8904334,"line_start":678,"line_end":678,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8904339,"byte_end":8904342,"line_start":679,"line_end":679,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8904347,"byte_end":8904388,"line_start":680,"line_end":680,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8904393,"byte_end":8904428,"line_start":681,"line_end":681,"column_start":5,"column_end":40}},{"value":"/     .little_endian()","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8904433,"byte_end":8904457,"line_start":682,"line_end":682,"column_start":5,"column_end":29}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8904462,"byte_end":8904484,"line_start":683,"line_end":683,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8904489,"byte_end":8904496,"line_start":684,"line_end":684,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8904501,"byte_end":8904523,"line_start":685,"line_end":685,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8904528,"byte_end":8904535,"line_start":686,"line_end":686,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":388},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8905193,"byte_end":8905206,"line_start":711,"line_end":711,"column_start":12,"column_end":25},"name":"native_endian","qualname":"<Builder>::native_endian","value":"pub fn native_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a native endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a native endian integer","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8904660,"byte_end":8904712,"line_start":692,"line_end":692,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8904717,"byte_end":8904720,"line_start":693,"line_end":693,"column_start":5,"column_end":8}},{"value":"/ The default setting is big endian.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8904725,"byte_end":8904763,"line_start":694,"line_end":694,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8904768,"byte_end":8904771,"line_start":695,"line_end":695,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8904776,"byte_end":8904844,"line_start":696,"line_end":696,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8904849,"byte_end":8904852,"line_start":697,"line_end":697,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8904857,"byte_end":8904871,"line_start":698,"line_end":698,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8904876,"byte_end":8904879,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8904884,"byte_end":8904891,"line_start":700,"line_end":700,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8904896,"byte_end":8904927,"line_start":701,"line_end":701,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8904932,"byte_end":8904980,"line_start":702,"line_end":702,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8904985,"byte_end":8904988,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8904993,"byte_end":8905034,"line_start":704,"line_end":704,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8905039,"byte_end":8905074,"line_start":705,"line_end":705,"column_start":5,"column_end":40}},{"value":"/     .native_endian()","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8905079,"byte_end":8905103,"line_start":706,"line_end":706,"column_start":5,"column_end":29}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8905108,"byte_end":8905130,"line_start":707,"line_end":707,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8905135,"byte_end":8905142,"line_start":708,"line_end":708,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8905147,"byte_end":8905169,"line_start":709,"line_end":709,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8905174,"byte_end":8905181,"line_start":710,"line_end":710,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":389},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8906287,"byte_end":8906303,"line_start":745,"line_end":745,"column_start":12,"column_end":28},"name":"max_frame_length","qualname":"<Builder>::max_frame_length","value":"pub fn max_frame_length(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the max frame length","sig":null,"attributes":[{"value":"/ Sets the max frame length","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8905375,"byte_end":8905404,"line_start":719,"line_end":719,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8905409,"byte_end":8905412,"line_start":720,"line_end":720,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding. The","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8905417,"byte_end":8905489,"line_start":721,"line_end":721,"column_start":5,"column_end":77}},{"value":"/ default value is 8MB.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8905494,"byte_end":8905519,"line_start":722,"line_end":722,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8905524,"byte_end":8905527,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/ When decoding, the length field read from the byte stream is checked","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8905532,"byte_end":8905604,"line_start":724,"line_end":724,"column_start":5,"column_end":77}},{"value":"/ against this setting **before** any adjustments are applied. When","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8905609,"byte_end":8905678,"line_start":725,"line_end":725,"column_start":5,"column_end":74}},{"value":"/ encoding, the length of the submitted payload is checked against this","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8905683,"byte_end":8905756,"line_start":726,"line_end":726,"column_start":5,"column_end":78}},{"value":"/ setting.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8905761,"byte_end":8905773,"line_start":727,"line_end":727,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8905778,"byte_end":8905781,"line_start":728,"line_end":728,"column_start":5,"column_end":8}},{"value":"/ When frames exceed the max length, an `io::Error` with the custom value","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8905786,"byte_end":8905861,"line_start":729,"line_end":729,"column_start":5,"column_end":80}},{"value":"/ of the `LengthDelimitedCodecError` type will be returned.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8905866,"byte_end":8905927,"line_start":730,"line_end":730,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8905932,"byte_end":8905935,"line_start":731,"line_end":731,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8905940,"byte_end":8905954,"line_start":732,"line_end":732,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8905959,"byte_end":8905962,"line_start":733,"line_end":733,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8905967,"byte_end":8905974,"line_start":734,"line_end":734,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8905979,"byte_end":8906010,"line_start":735,"line_end":735,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8906015,"byte_end":8906063,"line_start":736,"line_end":736,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8906068,"byte_end":8906071,"line_start":737,"line_end":737,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8906076,"byte_end":8906117,"line_start":738,"line_end":738,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8906122,"byte_end":8906157,"line_start":739,"line_end":739,"column_start":5,"column_end":40}},{"value":"/     .max_frame_length(8 * 1024)","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8906162,"byte_end":8906197,"line_start":740,"line_end":740,"column_start":5,"column_end":40}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8906202,"byte_end":8906224,"line_start":741,"line_end":741,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8906229,"byte_end":8906236,"line_start":742,"line_end":742,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8906241,"byte_end":8906263,"line_start":743,"line_end":743,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8906268,"byte_end":8906275,"line_start":744,"line_end":744,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":390},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8906964,"byte_end":8906983,"line_start":769,"line_end":769,"column_start":12,"column_end":31},"name":"length_field_length","qualname":"<Builder>::length_field_length","value":"pub fn length_field_length(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes used to represent the length field","sig":null,"attributes":[{"value":"/ Sets the number of bytes used to represent the length field","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8906400,"byte_end":8906463,"line_start":750,"line_end":750,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8906468,"byte_end":8906471,"line_start":751,"line_end":751,"column_start":5,"column_end":8}},{"value":"/ The default value is `4`. The max value is `8`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8906476,"byte_end":8906527,"line_start":752,"line_end":752,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8906532,"byte_end":8906535,"line_start":753,"line_end":753,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8906540,"byte_end":8906608,"line_start":754,"line_end":754,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8906613,"byte_end":8906616,"line_start":755,"line_end":755,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8906621,"byte_end":8906635,"line_start":756,"line_end":756,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8906640,"byte_end":8906643,"line_start":757,"line_end":757,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8906648,"byte_end":8906655,"line_start":758,"line_end":758,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8906660,"byte_end":8906691,"line_start":759,"line_end":759,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8906696,"byte_end":8906744,"line_start":760,"line_end":760,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8906749,"byte_end":8906752,"line_start":761,"line_end":761,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8906757,"byte_end":8906798,"line_start":762,"line_end":762,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8906803,"byte_end":8906838,"line_start":763,"line_end":763,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(4)","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8906843,"byte_end":8906874,"line_start":764,"line_end":764,"column_start":5,"column_end":36}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8906879,"byte_end":8906901,"line_start":765,"line_end":765,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8906906,"byte_end":8906913,"line_start":766,"line_end":766,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8906918,"byte_end":8906940,"line_start":767,"line_end":767,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8906945,"byte_end":8906952,"line_start":768,"line_end":768,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":391},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8907642,"byte_end":8907661,"line_start":792,"line_end":792,"column_start":12,"column_end":31},"name":"length_field_offset","qualname":"<Builder>::length_field_offset","value":"pub fn length_field_offset(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes in the header before the length field","sig":null,"attributes":[{"value":"/ Sets the number of bytes in the header before the length field","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8907152,"byte_end":8907218,"line_start":775,"line_end":775,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8907223,"byte_end":8907226,"line_start":776,"line_end":776,"column_start":5,"column_end":8}},{"value":"/ This configuration option only applies to decoding.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8907231,"byte_end":8907286,"line_start":777,"line_end":777,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8907291,"byte_end":8907294,"line_start":778,"line_end":778,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8907299,"byte_end":8907313,"line_start":779,"line_end":779,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8907318,"byte_end":8907321,"line_start":780,"line_end":780,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8907326,"byte_end":8907333,"line_start":781,"line_end":781,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8907338,"byte_end":8907369,"line_start":782,"line_end":782,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8907374,"byte_end":8907422,"line_start":783,"line_end":783,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8907427,"byte_end":8907430,"line_start":784,"line_end":784,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8907435,"byte_end":8907476,"line_start":785,"line_end":785,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8907481,"byte_end":8907516,"line_start":786,"line_end":786,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(1)","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8907521,"byte_end":8907552,"line_start":787,"line_end":787,"column_start":5,"column_end":36}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8907557,"byte_end":8907579,"line_start":788,"line_end":788,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8907584,"byte_end":8907591,"line_start":789,"line_end":789,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8907596,"byte_end":8907618,"line_start":790,"line_end":790,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8907623,"byte_end":8907630,"line_start":791,"line_end":791,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":392},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8908215,"byte_end":8908232,"line_start":813,"line_end":813,"column_start":12,"column_end":29},"name":"length_adjustment","qualname":"<Builder>::length_adjustment","value":"pub fn length_adjustment(&mut Self, isize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Delta between the payload length specified in the header and the real\n payload length","sig":null,"attributes":[{"value":"/ Delta between the payload length specified in the header and the real","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8907764,"byte_end":8907837,"line_start":797,"line_end":797,"column_start":5,"column_end":78}},{"value":"/ payload length","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8907842,"byte_end":8907860,"line_start":798,"line_end":798,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8907865,"byte_end":8907868,"line_start":799,"line_end":799,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8907873,"byte_end":8907887,"line_start":800,"line_end":800,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8907892,"byte_end":8907895,"line_start":801,"line_end":801,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8907900,"byte_end":8907907,"line_start":802,"line_end":802,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8907912,"byte_end":8907943,"line_start":803,"line_end":803,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8907948,"byte_end":8907996,"line_start":804,"line_end":804,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8908001,"byte_end":8908004,"line_start":805,"line_end":805,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8908009,"byte_end":8908050,"line_start":806,"line_end":806,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8908055,"byte_end":8908090,"line_start":807,"line_end":807,"column_start":5,"column_end":40}},{"value":"/     .length_adjustment(-2)","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8908095,"byte_end":8908125,"line_start":808,"line_end":808,"column_start":5,"column_end":35}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8908130,"byte_end":8908152,"line_start":809,"line_end":809,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8908157,"byte_end":8908164,"line_start":810,"line_end":810,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8908169,"byte_end":8908191,"line_start":811,"line_end":811,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8908196,"byte_end":8908203,"line_start":812,"line_end":812,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":393},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8908882,"byte_end":8908890,"line_start":837,"line_end":837,"column_start":12,"column_end":20},"name":"num_skip","qualname":"<Builder>::num_skip","value":"pub fn num_skip(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes to skip before reading the payload","sig":null,"attributes":[{"value":"/ Sets the number of bytes to skip before reading the payload","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8908333,"byte_end":8908396,"line_start":818,"line_end":818,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8908401,"byte_end":8908404,"line_start":819,"line_end":819,"column_start":5,"column_end":8}},{"value":"/ Default value is `length_field_len + length_field_offset`","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8908409,"byte_end":8908470,"line_start":820,"line_end":820,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8908475,"byte_end":8908478,"line_start":821,"line_end":821,"column_start":5,"column_end":8}},{"value":"/ This configuration option only applies to decoding","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8908483,"byte_end":8908537,"line_start":822,"line_end":822,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8908542,"byte_end":8908545,"line_start":823,"line_end":823,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8908550,"byte_end":8908564,"line_start":824,"line_end":824,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8908569,"byte_end":8908572,"line_start":825,"line_end":825,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8908577,"byte_end":8908584,"line_start":826,"line_end":826,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8908589,"byte_end":8908620,"line_start":827,"line_end":827,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8908625,"byte_end":8908673,"line_start":828,"line_end":828,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8908678,"byte_end":8908681,"line_start":829,"line_end":829,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8908686,"byte_end":8908727,"line_start":830,"line_end":830,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8908732,"byte_end":8908767,"line_start":831,"line_end":831,"column_start":5,"column_end":40}},{"value":"/     .num_skip(4)","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8908772,"byte_end":8908792,"line_start":832,"line_end":832,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8908797,"byte_end":8908819,"line_start":833,"line_end":833,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8908824,"byte_end":8908831,"line_start":834,"line_end":834,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8908836,"byte_end":8908858,"line_start":835,"line_end":835,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8908863,"byte_end":8908870,"line_start":836,"line_end":836,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":394},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8909410,"byte_end":8909419,"line_start":857,"line_end":857,"column_start":12,"column_end":21},"name":"new_codec","qualname":"<Builder>::new_codec","value":"pub fn new_codec(&Self) -> LengthDelimitedCodec","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `LengthDelimitedCodec`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `LengthDelimitedCodec`","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8908988,"byte_end":8909051,"line_start":842,"line_end":842,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8909056,"byte_end":8909059,"line_start":843,"line_end":843,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8909064,"byte_end":8909078,"line_start":844,"line_end":844,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8909083,"byte_end":8909086,"line_start":845,"line_end":845,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8909091,"byte_end":8909098,"line_start":846,"line_end":846,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8909103,"byte_end":8909151,"line_start":847,"line_end":847,"column_start":5,"column_end":53}},{"value":"/ # pub fn main() {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8909156,"byte_end":8909177,"line_start":848,"line_end":848,"column_start":5,"column_end":26}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8909182,"byte_end":8909217,"line_start":849,"line_end":849,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8909222,"byte_end":8909253,"line_start":850,"line_end":850,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8909258,"byte_end":8909289,"line_start":851,"line_end":851,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8909294,"byte_end":8909323,"line_start":852,"line_end":852,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8909328,"byte_end":8909348,"line_start":853,"line_end":853,"column_start":5,"column_end":25}},{"value":"/     .new_codec();","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8909353,"byte_end":8909374,"line_start":854,"line_end":854,"column_start":5,"column_end":26}},{"value":"/ # }","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8909379,"byte_end":8909386,"line_start":855,"line_end":855,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8909391,"byte_end":8909398,"line_start":856,"line_end":856,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":395},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8910075,"byte_end":8910083,"line_start":882,"line_end":882,"column_start":12,"column_end":20},"name":"new_read","qualname":"<Builder>::new_read","value":"pub fn new_read<T>(&Self, T) -> FramedRead<T, LengthDelimitedCodec> where\nT: AsyncRead","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `FramedRead`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `FramedRead`","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8909571,"byte_end":8909624,"line_start":864,"line_end":864,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8909629,"byte_end":8909632,"line_start":865,"line_end":865,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8909637,"byte_end":8909651,"line_start":866,"line_end":866,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8909656,"byte_end":8909659,"line_start":867,"line_end":867,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8909664,"byte_end":8909671,"line_start":868,"line_end":868,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8909676,"byte_end":8909707,"line_start":869,"line_end":869,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8909712,"byte_end":8909760,"line_start":870,"line_end":870,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8909765,"byte_end":8909768,"line_start":871,"line_end":871,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8909773,"byte_end":8909814,"line_start":872,"line_end":872,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8909819,"byte_end":8909854,"line_start":873,"line_end":873,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8909859,"byte_end":8909890,"line_start":874,"line_end":874,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8909895,"byte_end":8909926,"line_start":875,"line_end":875,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8909931,"byte_end":8909960,"line_start":876,"line_end":876,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8909965,"byte_end":8909985,"line_start":877,"line_end":877,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8909990,"byte_end":8910012,"line_start":878,"line_end":878,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8910017,"byte_end":8910024,"line_start":879,"line_end":879,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8910029,"byte_end":8910051,"line_start":880,"line_end":880,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8910056,"byte_end":8910063,"line_start":881,"line_end":881,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":397},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8910656,"byte_end":8910665,"line_start":903,"line_end":903,"column_start":12,"column_end":21},"name":"new_write","qualname":"<Builder>::new_write","value":"pub fn new_write<T>(&Self, T) -> FramedWrite<T, LengthDelimitedCodec> where\nT: AsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `FramedWrite`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `FramedWrite`","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8910247,"byte_end":8910301,"line_start":889,"line_end":889,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8910306,"byte_end":8910309,"line_start":890,"line_end":890,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8910314,"byte_end":8910328,"line_start":891,"line_end":891,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8910333,"byte_end":8910336,"line_start":892,"line_end":892,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8910341,"byte_end":8910348,"line_start":893,"line_end":893,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncWrite;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8910353,"byte_end":8910385,"line_start":894,"line_end":894,"column_start":5,"column_end":37}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8910390,"byte_end":8910440,"line_start":895,"line_end":895,"column_start":5,"column_end":55}},{"value":"/ # fn write_frame<T: AsyncWrite>(io: T) {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8910445,"byte_end":8910489,"line_start":896,"line_end":896,"column_start":5,"column_end":49}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8910494,"byte_end":8910529,"line_start":897,"line_end":897,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8910534,"byte_end":8910565,"line_start":898,"line_end":898,"column_start":5,"column_end":36}},{"value":"/     .new_write(io);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8910570,"byte_end":8910593,"line_start":899,"line_end":899,"column_start":5,"column_end":28}},{"value":"/ # }","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8910598,"byte_end":8910605,"line_start":900,"line_end":900,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8910610,"byte_end":8910632,"line_start":901,"line_end":901,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8910637,"byte_end":8910644,"line_start":902,"line_end":902,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":399},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8911274,"byte_end":8911284,"line_start":925,"line_end":925,"column_start":12,"column_end":22},"name":"new_framed","qualname":"<Builder>::new_framed","value":"pub fn new_framed<T>(&Self, T) -> Framed<T, LengthDelimitedCodec> where\nT: AsyncRead + AsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `Framed`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `Framed`","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8910826,"byte_end":8910875,"line_start":910,"line_end":910,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8910880,"byte_end":8910883,"line_start":911,"line_end":911,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8910888,"byte_end":8910902,"line_start":912,"line_end":912,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8910907,"byte_end":8910910,"line_start":913,"line_end":913,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8910915,"byte_end":8910922,"line_start":914,"line_end":914,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8910927,"byte_end":8910972,"line_start":915,"line_end":915,"column_start":5,"column_end":50}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8910977,"byte_end":8911027,"line_start":916,"line_end":916,"column_start":5,"column_end":55}},{"value":"/ # fn write_frame<T: AsyncRead + AsyncWrite>(io: T) {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8911032,"byte_end":8911088,"line_start":917,"line_end":917,"column_start":5,"column_end":61}},{"value":"/ # let _ =","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8911093,"byte_end":8911106,"line_start":918,"line_end":918,"column_start":5,"column_end":18}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8911111,"byte_end":8911146,"line_start":919,"line_end":919,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8911151,"byte_end":8911182,"line_start":920,"line_end":920,"column_start":5,"column_end":36}},{"value":"/     .new_framed(io);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8911187,"byte_end":8911211,"line_start":921,"line_end":921,"column_start":5,"column_end":29}},{"value":"/ # }","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8911216,"byte_end":8911223,"line_start":922,"line_end":922,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8911228,"byte_end":8911250,"line_start":923,"line_end":923,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8911255,"byte_end":8911262,"line_start":924,"line_end":924,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":521},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":8912561,"byte_end":8912571,"line_start":9,"line_end":9,"column_start":12,"column_end":22},"name":"LinesCodec","qualname":"::codec::lines_codec::LinesCodec","value":"LinesCodec {  }","parent":null,"children":[{"krate":0,"index":522},{"krate":0,"index":523},{"krate":0,"index":524}],"decl_id":null,"docs":" A simple `Codec` implementation that splits up data into lines.\n","sig":null,"attributes":[{"value":"/ A simple `Codec` implementation that splits up data into lines.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":8912420,"byte_end":8912487,"line_start":7,"line_end":7,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":427},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":8913651,"byte_end":8913654,"line_start":37,"line_end":37,"column_start":12,"column_end":15},"name":"new","qualname":"<LinesCodec>::new","value":"pub fn new() -> LinesCodec","parent":null,"children":[],"decl_id":null,"docs":" Returns a `LinesCodec` for splitting up data into lines.","sig":null,"attributes":[{"value":"/ Returns a `LinesCodec` for splitting up data into lines.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":8913252,"byte_end":8913312,"line_start":28,"line_end":28,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":8913317,"byte_end":8913320,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":8913325,"byte_end":8913335,"line_start":30,"line_end":30,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":8913340,"byte_end":8913343,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ The returned `LinesCodec` will not have an upper bound on the length","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":8913348,"byte_end":8913420,"line_start":32,"line_end":32,"column_start":5,"column_end":77}},{"value":"/ of a buffered line. See the documentation for [`new_with_max_length`]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":8913425,"byte_end":8913498,"line_start":33,"line_end":33,"column_start":5,"column_end":78}},{"value":"/ for information on why this could be a potential security risk.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":8913503,"byte_end":8913570,"line_start":34,"line_end":34,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":8913575,"byte_end":8913578,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ [`new_with_max_length`]: #method.new_with_max_length","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":8913583,"byte_end":8913639,"line_start":36,"line_end":36,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":428},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":8914769,"byte_end":8914788,"line_start":63,"line_end":63,"column_start":12,"column_end":31},"name":"new_with_max_length","qualname":"<LinesCodec>::new_with_max_length","value":"pub fn new_with_max_length(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `LinesCodec` with a maximum line length limit.","sig":null,"attributes":[{"value":"/ Returns a `LinesCodec` with a maximum line length limit.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":8913812,"byte_end":8913872,"line_start":45,"line_end":45,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":8913877,"byte_end":8913880,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ If this is set, calls to `LinesCodec::decode` will return a","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":8913885,"byte_end":8913948,"line_start":47,"line_end":47,"column_start":5,"column_end":68}},{"value":"/ [`LengthError`] when a line exceeds the length limit. Subsequent calls","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":8913953,"byte_end":8914027,"line_start":48,"line_end":48,"column_start":5,"column_end":79}},{"value":"/ will discard up to `limit` bytes from that line until a newline","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":8914032,"byte_end":8914099,"line_start":49,"line_end":49,"column_start":5,"column_end":72}},{"value":"/ character is reached, returning `None` until the line over the limit","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":8914104,"byte_end":8914176,"line_start":50,"line_end":50,"column_start":5,"column_end":77}},{"value":"/ has been fully discarded. After that point, calls to `decode` will","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":8914181,"byte_end":8914251,"line_start":51,"line_end":51,"column_start":5,"column_end":75}},{"value":"/ function as normal.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":8914256,"byte_end":8914279,"line_start":52,"line_end":52,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":8914284,"byte_end":8914287,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":8914292,"byte_end":8914302,"line_start":54,"line_end":54,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":8914307,"byte_end":8914310,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ Setting a length limit is highly recommended for any `LinesCodec` which","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":8914315,"byte_end":8914390,"line_start":56,"line_end":56,"column_start":5,"column_end":80}},{"value":"/ will be exposed to untrusted input. Otherwise, the size of the buffer","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":8914395,"byte_end":8914468,"line_start":57,"line_end":57,"column_start":5,"column_end":78}},{"value":"/ that holds the line currently being read is unbounded. An attacker could","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":8914473,"byte_end":8914549,"line_start":58,"line_end":58,"column_start":5,"column_end":81}},{"value":"/ exploit this unbounded buffer by sending an unbounded amount of input","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":8914554,"byte_end":8914627,"line_start":59,"line_end":59,"column_start":5,"column_end":78}},{"value":"/ without any `\\n` characters, causing unbounded memory consumption.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":8914632,"byte_end":8914702,"line_start":60,"line_end":60,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":8914707,"byte_end":8914710,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ [`LengthError`]: ../struct.LengthError","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":8914715,"byte_end":8914757,"line_start":62,"line_end":62,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":429},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":8915354,"byte_end":8915364,"line_start":85,"line_end":85,"column_start":12,"column_end":22},"name":"max_length","qualname":"<LinesCodec>::max_length","value":"pub fn max_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum line length when decoding.","sig":null,"attributes":[{"value":"/ Returns the maximum line length when decoding.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":8914916,"byte_end":8914966,"line_start":70,"line_end":70,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":8914971,"byte_end":8914974,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":8914979,"byte_end":8914986,"line_start":72,"line_end":72,"column_start":5,"column_end":12}},{"value":"/ use std::usize;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":8914991,"byte_end":8915010,"line_start":73,"line_end":73,"column_start":5,"column_end":24}},{"value":"/ use tokio_util::codec::LinesCodec;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":8915015,"byte_end":8915053,"line_start":74,"line_end":74,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":8915058,"byte_end":8915061,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ let codec = LinesCodec::new();","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":8915066,"byte_end":8915100,"line_start":76,"line_end":76,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(codec.max_length(), usize::MAX);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":8915105,"byte_end":8915152,"line_start":77,"line_end":77,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":8915157,"byte_end":8915164,"line_start":78,"line_end":78,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":8915169,"byte_end":8915176,"line_start":79,"line_end":79,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::LinesCodec;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":8915181,"byte_end":8915219,"line_start":80,"line_end":80,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":8915224,"byte_end":8915227,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ let codec = LinesCodec::new_with_max_length(256);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":8915232,"byte_end":8915285,"line_start":82,"line_end":82,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(codec.max_length(), 256);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":8915290,"byte_end":8915330,"line_start":83,"line_end":83,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":8915335,"byte_end":8915342,"line_start":84,"line_end":84,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":556},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":8919688,"byte_end":8919709,"line_start":204,"line_end":204,"column_start":5,"column_end":26},"name":"MaxLineLengthExceeded","qualname":"::codec::lines_codec::LinesCodecError::MaxLineLengthExceeded","value":"LinesCodecError::MaxLineLengthExceeded","parent":{"krate":0,"index":555},"children":[],"decl_id":null,"docs":" The maximum line length was exceeded.\n","sig":null,"attributes":[{"value":"/ The maximum line length was exceeded.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":8919642,"byte_end":8919683,"line_start":203,"line_end":203,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":558},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":8919744,"byte_end":8919746,"line_start":206,"line_end":206,"column_start":5,"column_end":7},"name":"Io","qualname":"::codec::lines_codec::LinesCodecError::Io","value":"LinesCodecError::Io(io::Error)","parent":{"krate":0,"index":555},"children":[],"decl_id":null,"docs":" An IO error occured.\n","sig":null,"attributes":[{"value":"/ An IO error occured.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":8919715,"byte_end":8919739,"line_start":205,"line_end":205,"column_start":5,"column_end":29}}]},{"kind":"Enum","id":{"krate":0,"index":555},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":8919620,"byte_end":8919635,"line_start":202,"line_end":202,"column_start":10,"column_end":25},"name":"LinesCodecError","qualname":"::codec::lines_codec::LinesCodecError","value":"pub enum LinesCodecError {\n\n    /// The maximum line length was exceeded.\n    MaxLineLengthExceeded,\n\n    /// An IO error occured.\n    Io(io::Error),\n}","parent":null,"children":[{"krate":0,"index":556},{"krate":0,"index":558}],"decl_id":null,"docs":" An error occured while encoding or decoding a line.\n","sig":null,"attributes":[{"value":"/ An error occured while encoding or decoding a line.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":8919538,"byte_end":8919593,"line_start":200,"line_end":200,"column_start":1,"column_end":56}}]},{"kind":"Mod","id":{"krate":0,"index":563},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/udp/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"udp","qualname":"::udp","value":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/udp/mod.rs","parent":null,"children":[{"krate":0,"index":564},{"krate":0,"index":605}],"decl_id":null,"docs":" UDP framing\n","sig":null,"attributes":[{"value":"cfg(all(feature = \"udp\", feature = \"codec\"))","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/cfg.rs","byte_start":767,"byte_end":814,"line_start":14,"line_end":14,"column_start":13,"column_end":60}},{"value":"/ UDP framing","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/udp/mod.rs","byte_start":9967023,"byte_end":9967038,"line_start":1,"line_end":1,"column_start":1,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":606},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/udp/frame.rs","byte_start":9968450,"byte_end":9968459,"line_start":32,"line_end":32,"column_start":12,"column_end":21},"name":"UdpFramed","qualname":"::udp::frame::UdpFramed","value":"UdpFramed {  }","parent":null,"children":[{"krate":0,"index":608},{"krate":0,"index":609},{"krate":0,"index":610},{"krate":0,"index":611},{"krate":0,"index":612},{"krate":0,"index":613}],"decl_id":null,"docs":" A unified `Stream` and `Sink` interface to an underlying `UdpSocket`, using\n the `Encoder` and `Decoder` traits to encode and decode frames.","sig":null,"attributes":[{"value":"/ A unified `Stream` and `Sink` interface to an underlying `UdpSocket`, using","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/udp/frame.rs","byte_start":9967358,"byte_end":9967437,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ the `Encoder` and `Decoder` traits to encode and decode frames.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/udp/frame.rs","byte_start":9967438,"byte_end":9967505,"line_start":14,"line_end":14,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/udp/frame.rs","byte_start":9967506,"byte_end":9967509,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Raw UDP sockets work with datagrams, but higher-level code usually wants to","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/udp/frame.rs","byte_start":9967510,"byte_end":9967589,"line_start":16,"line_end":16,"column_start":1,"column_end":80}},{"value":"/ batch these into meaningful chunks, called \"frames\". This method layers","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/udp/frame.rs","byte_start":9967590,"byte_end":9967665,"line_start":17,"line_end":17,"column_start":1,"column_end":76}},{"value":"/ framing on top of this socket by using the `Encoder` and `Decoder` traits to","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/udp/frame.rs","byte_start":9967666,"byte_end":9967746,"line_start":18,"line_end":18,"column_start":1,"column_end":81}},{"value":"/ handle encoding and decoding of messages frames. Note that the incoming and","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/udp/frame.rs","byte_start":9967747,"byte_end":9967826,"line_start":19,"line_end":19,"column_start":1,"column_end":80}},{"value":"/ outgoing frame types may be distinct.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/udp/frame.rs","byte_start":9967827,"byte_end":9967868,"line_start":20,"line_end":20,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/udp/frame.rs","byte_start":9967869,"byte_end":9967872,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ This function returns a *single* object that is both `Stream` and `Sink`;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/udp/frame.rs","byte_start":9967873,"byte_end":9967950,"line_start":22,"line_end":22,"column_start":1,"column_end":78}},{"value":"/ grouping this into a single object is often useful for layering things which","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/udp/frame.rs","byte_start":9967951,"byte_end":9968031,"line_start":23,"line_end":23,"column_start":1,"column_end":81}},{"value":"/ require both read and write access to the underlying object.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/udp/frame.rs","byte_start":9968032,"byte_end":9968096,"line_start":24,"line_end":24,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/udp/frame.rs","byte_start":9968097,"byte_end":9968100,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/udp/frame.rs","byte_start":9968101,"byte_end":9968174,"line_start":26,"line_end":26,"column_start":1,"column_end":74}},{"value":"/ calling `split` on the `UdpFramed` returned by this method, which will break","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/udp/frame.rs","byte_start":9968175,"byte_end":9968255,"line_start":27,"line_end":27,"column_start":1,"column_end":81}},{"value":"/ them into separate objects, allowing them to interact more easily.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/udp/frame.rs","byte_start":9968256,"byte_end":9968326,"line_start":28,"line_end":28,"column_start":1,"column_end":71}},{"value":"must_use = \"sinks do nothing unless polled\"","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/udp/frame.rs","byte_start":9968327,"byte_end":9968373,"line_start":29,"line_end":29,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":601},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/udp/frame.rs","byte_start":9971550,"byte_end":9971553,"line_start":143,"line_end":143,"column_start":12,"column_end":15},"name":"new","qualname":"<UdpFramed<C>>::new","value":"pub fn new(UdpSocket, C) -> UdpFramed<C>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `UdpFramed` backed by the given socket and codec.","sig":null,"attributes":[{"value":"/ Create a new `UdpFramed` backed by the given socket and codec.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/udp/frame.rs","byte_start":9971407,"byte_end":9971473,"line_start":140,"line_end":140,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/udp/frame.rs","byte_start":9971478,"byte_end":9971481,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ See struct level documentation for more details.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/udp/frame.rs","byte_start":9971486,"byte_end":9971538,"line_start":142,"line_end":142,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":602},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/udp/frame.rs","byte_start":9972207,"byte_end":9972214,"line_start":161,"line_end":161,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<UdpFramed<C>>::get_ref","value":"pub fn get_ref(&Self) -> &UdpSocket","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by `Framed`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by `Framed`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/udp/frame.rs","byte_start":9971919,"byte_end":9971992,"line_start":154,"line_end":154,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/udp/frame.rs","byte_start":9971997,"byte_end":9972000,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/udp/frame.rs","byte_start":9972005,"byte_end":9972015,"line_start":156,"line_end":156,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/udp/frame.rs","byte_start":9972020,"byte_end":9972023,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to not tamper with the underlying stream of data","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/udp/frame.rs","byte_start":9972028,"byte_end":9972101,"line_start":158,"line_end":158,"column_start":5,"column_end":78}},{"value":"/ coming in as it may corrupt the stream of frames otherwise being worked","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/udp/frame.rs","byte_start":9972106,"byte_end":9972181,"line_start":159,"line_end":159,"column_start":5,"column_end":80}},{"value":"/ with.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/udp/frame.rs","byte_start":9972186,"byte_end":9972195,"line_start":160,"line_end":160,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":603},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/udp/frame.rs","byte_start":9972574,"byte_end":9972581,"line_start":173,"line_end":173,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<UdpFramed<C>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut UdpSocket","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/udp/frame.rs","byte_start":9972270,"byte_end":9972341,"line_start":165,"line_end":165,"column_start":5,"column_end":76}},{"value":"/ `Framed`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/udp/frame.rs","byte_start":9972346,"byte_end":9972359,"line_start":166,"line_end":166,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/udp/frame.rs","byte_start":9972364,"byte_end":9972367,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/udp/frame.rs","byte_start":9972372,"byte_end":9972382,"line_start":168,"line_end":168,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/udp/frame.rs","byte_start":9972387,"byte_end":9972390,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to not tamper with the underlying stream of data","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/udp/frame.rs","byte_start":9972395,"byte_end":9972468,"line_start":170,"line_end":170,"column_start":5,"column_end":78}},{"value":"/ coming in as it may corrupt the stream of frames otherwise being worked","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/udp/frame.rs","byte_start":9972473,"byte_end":9972548,"line_start":171,"line_end":171,"column_start":5,"column_end":80}},{"value":"/ with.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/udp/frame.rs","byte_start":9972553,"byte_end":9972562,"line_start":172,"line_end":172,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":604},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/udp/frame.rs","byte_start":9972724,"byte_end":9972734,"line_start":178,"line_end":178,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<UdpFramed<C>>::into_inner","value":"pub fn into_inner(Self) -> UdpSocket","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Framed`, returning its underlying I/O stream.\n","sig":null,"attributes":[{"value":"/ Consumes the `Framed`, returning its underlying I/O stream.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/udp/frame.rs","byte_start":9972649,"byte_end":9972712,"line_start":177,"line_end":177,"column_start":5,"column_end":68}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/bytes_codec.rs","byte_start":8845673,"byte_end":8845683,"line_start":11,"line_end":11,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":16}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/bytes_codec.rs","byte_start":8845834,"byte_end":8845844,"line_start":18,"line_end":18,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/bytes_codec.rs","byte_start":8846164,"byte_end":8846174,"line_start":32,"line_end":32,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8855342,"byte_end":8855346,"line_start":46,"line_end":46,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8855617,"byte_end":8855623,"line_start":59,"line_end":59,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":93}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8856924,"byte_end":8856930,"line_start":88,"line_end":88,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8861146,"byte_end":8861152,"line_start":196,"line_end":196,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":108},{"krate":0,"index":109}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8861414,"byte_end":8861420,"line_start":208,"line_end":208,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":118}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8862198,"byte_end":8862204,"line_start":233,"line_end":233,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":122}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8862564,"byte_end":8862568,"line_start":248,"line_end":248,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":126}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8862706,"byte_end":8862710,"line_start":254,"line_end":254,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":130},{"krate":0,"index":131}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8862917,"byte_end":8862921,"line_start":264,"line_end":264,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":135},{"krate":0,"index":136}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8863316,"byte_end":8863320,"line_start":278,"line_end":278,"column_start":43,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":140},{"krate":0,"index":141}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8863601,"byte_end":8863605,"line_start":288,"line_end":288,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":145},{"krate":0,"index":146}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8863822,"byte_end":8863826,"line_start":298,"line_end":298,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":152}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8864355,"byte_end":8864359,"line_start":316,"line_end":316,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":159}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8864731,"byte_end":8864735,"line_start":329,"line_end":329,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8865629,"byte_end":8865640,"line_start":360,"line_end":360,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":169}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":8866644,"byte_end":8866654,"line_start":37,"line_end":37,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":193}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":8866988,"byte_end":8866998,"line_start":53,"line_end":53,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":201},{"krate":0,"index":202}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":8868490,"byte_end":8868500,"line_start":99,"line_end":99,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":206},{"krate":0,"index":207}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":8868813,"byte_end":8868823,"line_start":112,"line_end":112,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":216}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":8869913,"byte_end":8869923,"line_start":159,"line_end":159,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":220}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":8870979,"byte_end":8870990,"line_start":199,"line_end":199,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":232}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":8871508,"byte_end":8871519,"line_start":225,"line_end":225,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":235},{"krate":0,"index":236}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":8874569,"byte_end":8874580,"line_start":37,"line_end":37,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":270}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":8874919,"byte_end":8874930,"line_start":53,"line_end":53,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":274},{"krate":0,"index":275},{"krate":0,"index":276},{"krate":0,"index":277},{"krate":0,"index":278}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":8876358,"byte_end":8876369,"line_start":95,"line_end":95,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":283},{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":286},{"krate":0,"index":287}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":8877087,"byte_end":8877098,"line_start":120,"line_end":120,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":291},{"krate":0,"index":292}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":8877430,"byte_end":8877441,"line_start":137,"line_end":137,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":296}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":8878284,"byte_end":8878296,"line_start":168,"line_end":168,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":303},{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":306}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":8878638,"byte_end":8878650,"line_start":186,"line_end":186,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":312},{"krate":0,"index":313},{"krate":0,"index":314}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":8881008,"byte_end":8881020,"line_start":258,"line_end":258,"column_start":30,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":317},{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":320}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":8881356,"byte_end":8881368,"line_start":271,"line_end":271,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":323}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":8881503,"byte_end":8881515,"line_start":277,"line_end":277,"column_start":30,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":326},{"krate":0,"index":327}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":8881722,"byte_end":8881734,"line_start":287,"line_end":287,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":330},{"krate":0,"index":331}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":8882129,"byte_end":8882141,"line_start":301,"line_end":301,"column_start":40,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":334},{"krate":0,"index":335}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":8882421,"byte_end":8882433,"line_start":311,"line_end":311,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":338},{"krate":0,"index":339},{"krate":0,"index":340}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8896373,"byte_end":8896393,"line_start":410,"line_end":410,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":367},{"krate":0,"index":368},{"krate":0,"index":369},{"krate":0,"index":370},{"krate":0,"index":371},{"krate":0,"index":372}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8899755,"byte_end":8899775,"line_start":518,"line_end":518,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":374},{"krate":0,"index":375},{"krate":0,"index":376}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8900655,"byte_end":8900675,"line_start":549,"line_end":549,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":378},{"krate":0,"index":379},{"krate":0,"index":380}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8902048,"byte_end":8902068,"line_start":594,"line_end":594,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":383}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8902161,"byte_end":8902168,"line_start":602,"line_end":602,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":385},{"krate":0,"index":386},{"krate":0,"index":387},{"krate":0,"index":388},{"krate":0,"index":389},{"krate":0,"index":390},{"krate":0,"index":391},{"krate":0,"index":392},{"krate":0,"index":393},{"krate":0,"index":394},{"krate":0,"index":395},{"krate":0,"index":397},{"krate":0,"index":399},{"krate":0,"index":401},{"krate":0,"index":402}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8911767,"byte_end":8911774,"line_start":943,"line_end":943,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":404}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8911900,"byte_end":8911925,"line_start":951,"line_end":951,"column_start":21,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":406}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8912083,"byte_end":8912108,"line_start":957,"line_end":957,"column_start":23,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":408}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8912243,"byte_end":8912268,"line_start":963,"line_end":963,"column_start":19,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":8913235,"byte_end":8913245,"line_start":27,"line_end":27,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":427},{"krate":0,"index":428},{"krate":0,"index":429}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":8915751,"byte_end":8915761,"line_start":103,"line_end":103,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":434},{"krate":0,"index":435},{"krate":0,"index":436},{"krate":0,"index":438}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":8919166,"byte_end":8919176,"line_start":182,"line_end":182,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":440},{"krate":0,"index":441},{"krate":0,"index":442}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":8919469,"byte_end":8919479,"line_start":194,"line_end":194,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":444}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":8919784,"byte_end":8919799,"line_start":209,"line_end":209,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":446}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":8920081,"byte_end":8920096,"line_start":218,"line_end":218,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":448}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":8920213,"byte_end":8920228,"line_start":224,"line_end":224,"column_start":28,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/udp/frame.rs","byte_start":9968622,"byte_end":9968631,"line_start":41,"line_end":41,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":587},{"krate":0,"index":588}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/udp/frame.rs","byte_start":9969692,"byte_end":9969701,"line_start":73,"line_end":73,"column_start":58,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":592},{"krate":0,"index":593},{"krate":0,"index":594},{"krate":0,"index":595},{"krate":0,"index":596}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/udp/frame.rs","byte_start":9971388,"byte_end":9971397,"line_start":139,"line_end":139,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":601},{"krate":0,"index":602},{"krate":0,"index":603},{"krate":0,"index":604}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/lib.rs","byte_start":455,"byte_end":460,"line_start":21,"line_end":21,"column_start":13,"column_end":18},"ref_id":{"krate":0,"index":6}},{"kind":"Mod","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/mod.rs","byte_start":8845194,"byte_end":8845210,"line_start":30,"line_end":30,"column_start":9,"column_end":25},"ref_id":{"krate":0,"index":342}},{"kind":"Mod","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/lib.rs","byte_start":488,"byte_end":491,"line_start":25,"line_end":25,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":563}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/bytes_codec.rs","byte_start":8845673,"byte_end":8845683,"line_start":11,"line_end":11,"column_start":6,"column_end":16},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":453},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/bytes_codec.rs","byte_start":8845834,"byte_end":8845844,"line_start":18,"line_end":18,"column_start":18,"column_end":28},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":453},"to":{"krate":0,"index":34}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/bytes_codec.rs","byte_start":8846164,"byte_end":8846174,"line_start":32,"line_end":32,"column_start":18,"column_end":28},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":453},"to":{"krate":0,"index":45}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8855342,"byte_end":8855346,"line_start":46,"line_end":46,"column_start":28,"column_end":32},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":781},"to":{"krate":0,"index":80}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8855617,"byte_end":8855623,"line_start":59,"line_end":59,"column_start":12,"column_end":18},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":826},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8856924,"byte_end":8856930,"line_start":88,"line_end":88,"column_start":12,"column_end":18},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":826},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8861146,"byte_end":8861152,"line_start":196,"line_end":196,"column_start":23,"column_end":29},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":826},"to":{"krate":20,"index":68}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8861414,"byte_end":8861420,"line_start":208,"line_end":208,"column_start":27,"column_end":33},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":826},"to":{"krate":35,"index":9}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8862198,"byte_end":8862204,"line_start":233,"line_end":233,"column_start":27,"column_end":33},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":826},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8862564,"byte_end":8862568,"line_start":248,"line_end":248,"column_start":27,"column_end":31},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":781},"to":{"krate":1,"index":3190}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8862706,"byte_end":8862710,"line_start":254,"line_end":254,"column_start":33,"column_end":37},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":781},"to":{"krate":1,"index":3275}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8862917,"byte_end":8862921,"line_start":264,"line_end":264,"column_start":37,"column_end":41},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":781},"to":{"krate":17,"index":186}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8863316,"byte_end":8863320,"line_start":278,"line_end":278,"column_start":43,"column_end":47},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":781},"to":{"krate":17,"index":157}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8863601,"byte_end":8863605,"line_start":288,"line_end":288,"column_start":29,"column_end":33},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":781},"to":{"krate":1,"index":3251}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8863822,"byte_end":8863826,"line_start":298,"line_end":298,"column_start":39,"column_end":43},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":781},"to":{"krate":17,"index":242}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8864355,"byte_end":8864359,"line_start":316,"line_end":316,"column_start":33,"column_end":37},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":781},"to":{"krate":0,"index":34}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8864731,"byte_end":8864735,"line_start":329,"line_end":329,"column_start":33,"column_end":37},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":781},"to":{"krate":0,"index":45}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":8865629,"byte_end":8865640,"line_start":360,"line_end":360,"column_start":12,"column_end":23},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":481},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":8866644,"byte_end":8866654,"line_start":37,"line_end":37,"column_start":12,"column_end":22},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":740},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":8866988,"byte_end":8866998,"line_start":53,"line_end":53,"column_start":12,"column_end":22},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":740},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":8868490,"byte_end":8868500,"line_start":99,"line_end":99,"column_start":23,"column_end":33},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":740},"to":{"krate":20,"index":68}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":8868813,"byte_end":8868823,"line_start":112,"line_end":112,"column_start":27,"column_end":37},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":740},"to":{"krate":35,"index":9}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":8869913,"byte_end":8869923,"line_start":159,"line_end":159,"column_start":27,"column_end":37},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":740},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":8870979,"byte_end":8870990,"line_start":199,"line_end":199,"column_start":9,"column_end":20},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":695},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":8871508,"byte_end":8871519,"line_start":225,"line_end":225,"column_start":20,"column_end":31},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":695},"to":{"krate":20,"index":68}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":8874569,"byte_end":8874580,"line_start":37,"line_end":37,"column_start":12,"column_end":23},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":654},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":8874919,"byte_end":8874930,"line_start":53,"line_end":53,"column_start":12,"column_end":23},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":654},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":8876358,"byte_end":8876369,"line_start":95,"line_end":95,"column_start":27,"column_end":38},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":654},"to":{"krate":35,"index":9}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":8877087,"byte_end":8877098,"line_start":120,"line_end":120,"column_start":23,"column_end":34},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":654},"to":{"krate":20,"index":68}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":8877430,"byte_end":8877441,"line_start":137,"line_end":137,"column_start":27,"column_end":38},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":654},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":8878284,"byte_end":8878296,"line_start":168,"line_end":168,"column_start":9,"column_end":21},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":617},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":8878638,"byte_end":8878650,"line_start":186,"line_end":186,"column_start":24,"column_end":36},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":617},"to":{"krate":35,"index":9}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":8881008,"byte_end":8881020,"line_start":258,"line_end":258,"column_start":30,"column_end":42},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":617},"to":{"krate":0,"index":34}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":8881356,"byte_end":8881368,"line_start":271,"line_end":271,"column_start":24,"column_end":36},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":617},"to":{"krate":1,"index":3190}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":8881503,"byte_end":8881515,"line_start":277,"line_end":277,"column_start":30,"column_end":42},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":617},"to":{"krate":1,"index":3275}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":8881722,"byte_end":8881734,"line_start":287,"line_end":287,"column_start":34,"column_end":46},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":617},"to":{"krate":17,"index":186}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":8882129,"byte_end":8882141,"line_start":301,"line_end":301,"column_start":40,"column_end":52},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":617},"to":{"krate":17,"index":157}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":8882421,"byte_end":8882433,"line_start":311,"line_end":311,"column_start":25,"column_end":37},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":617},"to":{"krate":0,"index":80}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8896373,"byte_end":8896393,"line_start":410,"line_end":410,"column_start":6,"column_end":26},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":505},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8899755,"byte_end":8899775,"line_start":518,"line_end":518,"column_start":18,"column_end":38},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":505},"to":{"krate":0,"index":34}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8900655,"byte_end":8900675,"line_start":549,"line_end":549,"column_start":18,"column_end":38},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":505},"to":{"krate":0,"index":45}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8902048,"byte_end":8902068,"line_start":594,"line_end":594,"column_start":18,"column_end":38},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":505},"to":{"krate":2,"index":2069}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8902161,"byte_end":8902168,"line_start":602,"line_end":602,"column_start":6,"column_end":13},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":493},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8911767,"byte_end":8911774,"line_start":943,"line_end":943,"column_start":18,"column_end":25},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":493},"to":{"krate":2,"index":2069}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8911900,"byte_end":8911925,"line_start":951,"line_end":951,"column_start":21,"column_end":46},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":364},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8912083,"byte_end":8912108,"line_start":957,"line_end":957,"column_start":23,"column_end":48},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":364},"to":{"krate":2,"index":6958}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":8912243,"byte_end":8912268,"line_start":963,"line_end":963,"column_start":19,"column_end":44},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":364},"to":{"krate":1,"index":1750}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":8913235,"byte_end":8913245,"line_start":27,"line_end":27,"column_start":6,"column_end":16},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":521},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":8915751,"byte_end":8915761,"line_start":103,"line_end":103,"column_start":18,"column_end":28},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":521},"to":{"krate":0,"index":34}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":8919166,"byte_end":8919176,"line_start":182,"line_end":182,"column_start":18,"column_end":28},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":521},"to":{"krate":0,"index":45}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":8919469,"byte_end":8919479,"line_start":194,"line_end":194,"column_start":18,"column_end":28},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":521},"to":{"krate":2,"index":2069}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":8919784,"byte_end":8919799,"line_start":209,"line_end":209,"column_start":23,"column_end":38},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":555},"to":{"krate":2,"index":6958}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":8920081,"byte_end":8920096,"line_start":218,"line_end":218,"column_start":26,"column_end":41},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":555},"to":{"krate":2,"index":1997}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":8920213,"byte_end":8920228,"line_start":224,"line_end":224,"column_start":28,"column_end":43},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":555},"to":{"krate":1,"index":1750}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/udp/frame.rs","byte_start":9968622,"byte_end":9968631,"line_start":41,"line_end":41,"column_start":37,"column_end":46},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":606},"to":{"krate":20,"index":68}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/udp/frame.rs","byte_start":9969692,"byte_end":9969701,"line_start":73,"line_end":73,"column_start":58,"column_end":67},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":606},"to":{"krate":35,"index":9}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/udp/frame.rs","byte_start":9971388,"byte_end":9971397,"line_start":139,"line_end":139,"column_start":9,"column_end":18},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":606},"to":{"krate":4294967295,"index":4294967295}}]}