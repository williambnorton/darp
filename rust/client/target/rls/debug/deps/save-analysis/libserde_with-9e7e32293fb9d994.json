{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4","program":"/Users/wbn/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","serde_with","--edition=2018","/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"macros\"","--cfg","feature=\"serde_with_macros\"","-C","metadata=9e7e32293fb9d994","-C","extra-filename=-9e7e32293fb9d994","--out-dir","/Users/wbn/Dropbox/Development/darp_rust/tokio_udp_rate_test-master/client/target/rls/debug/deps","-L","dependency=/Users/wbn/Dropbox/Development/darp_rust/tokio_udp_rate_test-master/client/target/rls/debug/deps","--extern","serde=/Users/wbn/Dropbox/Development/darp_rust/tokio_udp_rate_test-master/client/target/rls/debug/deps/libserde-2552d50d42cfed47.rmeta","--extern","serde_with_macros=/Users/wbn/Dropbox/Development/darp_rust/tokio_udp_rate_test-master/client/target/rls/debug/deps/libserde_with_macros-f93b979de9a68559.dylib","--cap-lints","allow","--error-format=json","--sysroot","/Users/wbn/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/wbn/Dropbox/Development/darp_rust/tokio_udp_rate_test-master/client/target/rls/debug/deps/libserde_with-9e7e32293fb9d994.rmeta"},"prelude":{"crate_id":{"name":"serde_with","disambiguator":[12005641725595366127,2629413797410812658]},"crate_root":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src","external_crates":[{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[16125995874279485955,8748768413821387129]}},{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[16348493018826829365,4805211970644213659]}},{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[8279628881989909837,14733107812838978533]}},{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[17646096667663791084,12272231044852301253]}},{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[4565760717972533866,4473905522437311200]}},{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[7551666766599439458,2782226154556471377]}},{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[11632633256475535999,13776501019579249840]}},{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[4897607742433192731,640426136460610934]}},{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[15534826887064733014,5612939005974764181]}},{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[1175232612468424282,18163295741730709113]}},{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[15721596154046543409,2249662874474360977]}},{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[7768511099061914688,4128344505014859734]}},{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[15048206832849992118,3387758009953732431]}},{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[13751153714556823430,9887373550715096268]}},{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[13432701172845674020,17161827416142858739]}},{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","num":16,"id":{"name":"serde","disambiguator":[17646523830638734079,582109485289821214]}},{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","num":17,"id":{"name":"serde_derive","disambiguator":[14874506400289128549,6832260736117622432]}},{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","num":18,"id":{"name":"serde_with_macros","disambiguator":[6007143676913768525,13786101654243312940]}}],"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":0,"byte_end":51065,"line_start":1,"line_end":1321,"column_start":1,"column_end":38}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":129},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":9592,"byte_end":9605,"line_start":268,"line_end":268,"column_start":21,"column_end":34},"alias_span":null,"name":"DeserializeAs","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3732},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":9613,"byte_end":9632,"line_start":268,"line_end":268,"column_start":42,"column_end":61},"alias_span":null,"name":"StringWithSeparator","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":767},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":9639,"byte_end":9650,"line_start":268,"line_end":268,"column_start":68,"column_end":79},"alias_span":null,"name":"SerializeAs","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":9871,"byte_end":9872,"line_start":273,"line_end":273,"column_start":28,"column_end":29},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":0,"byte_end":51065,"line_start":1,"line_end":1321,"column_start":1,"column_end":38},"name":"","qualname":"::","value":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":146},{"krate":0,"index":256},{"krate":0,"index":258},{"krate":0,"index":265},{"krate":0,"index":682},{"krate":0,"index":787},{"krate":0,"index":996},{"krate":0,"index":1157},{"krate":0,"index":1158},{"krate":0,"index":1159},{"krate":0,"index":1160},{"krate":0,"index":1161},{"krate":0,"index":1162},{"krate":0,"index":6531},{"krate":0,"index":1163},{"krate":0,"index":1164},{"krate":0,"index":6535},{"krate":0,"index":1165},{"krate":0,"index":1166},{"krate":0,"index":1167},{"krate":0,"index":6539},{"krate":0,"index":1168},{"krate":0,"index":5682},{"krate":0,"index":5703},{"krate":0,"index":5701},{"krate":0,"index":5698},{"krate":0,"index":5699},{"krate":0,"index":5695},{"krate":0,"index":5696},{"krate":0,"index":5693},{"krate":0,"index":5691},{"krate":0,"index":5688},{"krate":0,"index":5686},{"krate":0,"index":5684},{"krate":0,"index":1170},{"krate":0,"index":5704},{"krate":0,"index":5725},{"krate":0,"index":5723},{"krate":0,"index":5720},{"krate":0,"index":5721},{"krate":0,"index":5717},{"krate":0,"index":5718},{"krate":0,"index":5715},{"krate":0,"index":5713},{"krate":0,"index":5710},{"krate":0,"index":5708},{"krate":0,"index":5706},{"krate":0,"index":1172},{"krate":0,"index":5726},{"krate":0,"index":5739},{"krate":0,"index":5736},{"krate":0,"index":5733},{"krate":0,"index":5730},{"krate":0,"index":1174},{"krate":0,"index":5741},{"krate":0,"index":5749},{"krate":0,"index":5747},{"krate":0,"index":5745},{"krate":0,"index":5743},{"krate":0,"index":5750},{"krate":0,"index":5758},{"krate":0,"index":5756},{"krate":0,"index":5754},{"krate":0,"index":5752},{"krate":0,"index":5759},{"krate":0,"index":5767},{"krate":0,"index":5765},{"krate":0,"index":5763},{"krate":0,"index":5761},{"krate":0,"index":5768},{"krate":0,"index":5781},{"krate":0,"index":5778},{"krate":0,"index":5775},{"krate":0,"index":5772},{"krate":0,"index":5783},{"krate":0,"index":5796},{"krate":0,"index":5793},{"krate":0,"index":5790},{"krate":0,"index":5787},{"krate":0,"index":5798},{"krate":0,"index":5806},{"krate":0,"index":5804},{"krate":0,"index":5802},{"krate":0,"index":5800},{"krate":0,"index":5807},{"krate":0,"index":5824},{"krate":0,"index":5820},{"krate":0,"index":5816},{"krate":0,"index":5812},{"krate":0,"index":5827},{"krate":0,"index":5844},{"krate":0,"index":5840},{"krate":0,"index":5836},{"krate":0,"index":5832},{"krate":0,"index":5847},{"krate":0,"index":5864},{"krate":0,"index":5860},{"krate":0,"index":5856},{"krate":0,"index":5852},{"krate":0,"index":5867},{"krate":0,"index":5884},{"krate":0,"index":5880},{"krate":0,"index":5876},{"krate":0,"index":5872},{"krate":0,"index":5887},{"krate":0,"index":5904},{"krate":0,"index":5900},{"krate":0,"index":5896},{"krate":0,"index":5892},{"krate":0,"index":5907},{"krate":0,"index":5924},{"krate":0,"index":5920},{"krate":0,"index":5916},{"krate":0,"index":5912},{"krate":0,"index":5927},{"krate":0,"index":5944},{"krate":0,"index":5940},{"krate":0,"index":5936},{"krate":0,"index":5932},{"krate":0,"index":5947},{"krate":0,"index":5964},{"krate":0,"index":5960},{"krate":0,"index":5956},{"krate":0,"index":5952},{"krate":0,"index":5967},{"krate":0,"index":5984},{"krate":0,"index":5980},{"krate":0,"index":5976},{"krate":0,"index":5972},{"krate":0,"index":5987},{"krate":0,"index":6004},{"krate":0,"index":6000},{"krate":0,"index":5996},{"krate":0,"index":5992},{"krate":0,"index":6007},{"krate":0,"index":6024},{"krate":0,"index":6020},{"krate":0,"index":6016},{"krate":0,"index":6012},{"krate":0,"index":6027},{"krate":0,"index":6044},{"krate":0,"index":6040},{"krate":0,"index":6036},{"krate":0,"index":6032},{"krate":0,"index":6047},{"krate":0,"index":6064},{"krate":0,"index":6060},{"krate":0,"index":6056},{"krate":0,"index":6052},{"krate":0,"index":6067},{"krate":0,"index":6084},{"krate":0,"index":6080},{"krate":0,"index":6076},{"krate":0,"index":6072},{"krate":0,"index":6087},{"krate":0,"index":6104},{"krate":0,"index":6100},{"krate":0,"index":6096},{"krate":0,"index":6092},{"krate":0,"index":6107},{"krate":0,"index":6124},{"krate":0,"index":6120},{"krate":0,"index":6116},{"krate":0,"index":6112}],"decl_id":null,"docs":" [![docs.rs badge](https://docs.rs/serde_with/badge.svg)](https://docs.rs/serde_with/)\n [![crates.io badge](https://img.shields.io/crates/v/serde_with.svg)](https://crates.io/crates/serde_with/)\n [![Build Status](https://github.com/jonasbb/serde_with/workflows/Rust%20CI/badge.svg)](https://github.com/jonasbb/serde_with)\n [![codecov](https://codecov.io/gh/jonasbb/serde_with/branch/master/graph/badge.svg)](https://codecov.io/gh/jonasbb/serde_with)","sig":null,"attributes":[{"value":"deny(missing_copy_implementations, missing_debug_implementations,\n       missing_docs, trivial_casts, trivial_numeric_casts,\n       unused_extern_crates, unused_import_braces, unused_qualifications,\n       variant_size_differences)","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":0,"byte_end":252,"line_start":1,"line_end":11,"column_start":1,"column_end":3}},{"value":"warn(rust_2018_idioms)","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":253,"byte_end":279,"line_start":12,"line_end":12,"column_start":1,"column_end":27}},{"value":"allow(renamed_and_removed_lints)","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":819,"byte_end":855,"line_start":28,"line_end":28,"column_start":1,"column_end":37}},{"value":"allow(clippy :: unknown_clippy_lints)","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":930,"byte_end":969,"line_start":30,"line_end":30,"column_start":1,"column_end":40}},{"value":"/ [![docs.rs badge](https://docs.rs/serde_with/badge.svg)](https://docs.rs/serde_with/)","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":971,"byte_end":1060,"line_start":32,"line_end":32,"column_start":1,"column_end":90}},{"value":"/ [![crates.io badge](https://img.shields.io/crates/v/serde_with.svg)](https://crates.io/crates/serde_with/)","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":1061,"byte_end":1171,"line_start":33,"line_end":33,"column_start":1,"column_end":111}},{"value":"/ [![Build Status](https://github.com/jonasbb/serde_with/workflows/Rust%20CI/badge.svg)](https://github.com/jonasbb/serde_with)","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":1172,"byte_end":1301,"line_start":34,"line_end":34,"column_start":1,"column_end":130}},{"value":"/ [![codecov](https://codecov.io/gh/jonasbb/serde_with/branch/master/graph/badge.svg)](https://codecov.io/gh/jonasbb/serde_with)","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":1302,"byte_end":1432,"line_start":35,"line_end":35,"column_start":1,"column_end":131}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":1433,"byte_end":1436,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ ---","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":1437,"byte_end":1444,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":1445,"byte_end":1448,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ This crate provides custom de/serialization helpers to use in combination with [serde's with-annotation][with-annotation] and with the improved [`serde_as`][user guide]-annotation.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":1449,"byte_end":1633,"line_start":39,"line_end":39,"column_start":1,"column_end":185}},{"value":"/ Some common use cases are:","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":1634,"byte_end":1664,"line_start":40,"line_end":40,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":1665,"byte_end":1668,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ * De/Serializing a type using the `Display` and `FromStr` traits, e.g., for `u8`, `url::Url`, or `mime::Mime`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":1669,"byte_end":1783,"line_start":42,"line_end":42,"column_start":1,"column_end":115}},{"value":"/      Check [`DisplayFromStr`][] or [`serde_with::rust::display_fromstr`][display_fromstr] for details.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":1784,"byte_end":1890,"line_start":43,"line_end":43,"column_start":1,"column_end":107}},{"value":"/ * Skip serializing all empty `Option` types with [`#[skip_serializing_none]`][skip_serializing_none].","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":1891,"byte_end":1996,"line_start":44,"line_end":44,"column_start":1,"column_end":106}},{"value":"/ * Apply a prefix to each field name of a struct, without changing the de/serialize implementations of the struct using [`with_prefix!`][].","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":1997,"byte_end":2139,"line_start":45,"line_end":45,"column_start":1,"column_end":143}},{"value":"/ * Deserialize a comma separated list like `#hash,#tags,#are,#great` into a `Vec<String>`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":2140,"byte_end":2233,"line_start":46,"line_end":46,"column_start":1,"column_end":94}},{"value":"/      Check the documentation for [`serde_with::rust::StringWithSeparator::<CommaSeparator>`][StringWithSeparator].","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":2234,"byte_end":2352,"line_start":47,"line_end":47,"column_start":1,"column_end":119}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":2353,"byte_end":2356,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ## Getting Help","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":2357,"byte_end":2376,"line_start":49,"line_end":49,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":2377,"byte_end":2380,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ **Check out the [user guide][user guide] to find out more tips and tricks about this crate.**","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":2381,"byte_end":2478,"line_start":51,"line_end":51,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":2479,"byte_end":2482,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ For further help using this crate you can [open a new discussion](https://github.com/jonasbb/serde_with/discussions/new) or ask on [users.rust-lang.org](https://users.rust-lang.org/).","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":2483,"byte_end":2670,"line_start":53,"line_end":53,"column_start":1,"column_end":188}},{"value":"/ For bugs please open a [new issue](https://github.com/jonasbb/serde_with/issues/new) on Github.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":2671,"byte_end":2770,"line_start":54,"line_end":54,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":2771,"byte_end":2774,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ # Use `serde_with` in your Project","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":2775,"byte_end":2813,"line_start":56,"line_end":56,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":2814,"byte_end":2817,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ Add this to your `Cargo.toml`:","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":2818,"byte_end":2852,"line_start":58,"line_end":58,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":2853,"byte_end":2856,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":2857,"byte_end":2868,"line_start":60,"line_end":60,"column_start":1,"column_end":12}},{"value":"/ [dependencies.serde_with]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":2869,"byte_end":2898,"line_start":61,"line_end":61,"column_start":1,"column_end":30}},{"value":"/ version = \"1.6.4\"","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":2899,"byte_end":2920,"line_start":62,"line_end":62,"column_start":1,"column_end":22}},{"value":"/ features = [ \"...\" ]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":2921,"byte_end":2945,"line_start":63,"line_end":63,"column_start":1,"column_end":25}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":2946,"byte_end":2953,"line_start":64,"line_end":64,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":2954,"byte_end":2957,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ The crate contains different features for integration with other common crates.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":2958,"byte_end":3041,"line_start":66,"line_end":66,"column_start":1,"column_end":84}},{"value":"/ Check the [feature flags][] section for information about all available features.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":3042,"byte_end":3127,"line_start":67,"line_end":67,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":3128,"byte_end":3131,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":3132,"byte_end":3146,"line_start":69,"line_end":69,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":3147,"byte_end":3150,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ Annotate your struct or enum to enable the custom de/serializer.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":3151,"byte_end":3219,"line_start":71,"line_end":71,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":3220,"byte_end":3223,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ ## `DisplayFromStr`","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":3224,"byte_end":3247,"line_start":73,"line_end":73,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":3248,"byte_end":3251,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":3252,"byte_end":3263,"line_start":75,"line_end":75,"column_start":1,"column_end":12}},{"value":"/ # #[cfg(feature = \"macros\")]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":3264,"byte_end":3296,"line_start":76,"line_end":76,"column_start":1,"column_end":33}},{"value":"/ # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":3297,"byte_end":3346,"line_start":77,"line_end":77,"column_start":1,"column_end":50}},{"value":"/ # #[cfg(feature = \"macros\")]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":3347,"byte_end":3379,"line_start":78,"line_end":78,"column_start":1,"column_end":33}},{"value":"/ # use serde_with::{serde_as, DisplayFromStr};","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":3380,"byte_end":3429,"line_start":79,"line_end":79,"column_start":1,"column_end":50}},{"value":"/ # #[cfg(feature = \"macros\")]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":3430,"byte_end":3462,"line_start":80,"line_end":80,"column_start":1,"column_end":33}},{"value":"/ #[serde_as]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":3463,"byte_end":3478,"line_start":81,"line_end":81,"column_start":1,"column_end":16}},{"value":"/ # #[derive(Debug, Eq, PartialEq)]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":3479,"byte_end":3516,"line_start":82,"line_end":82,"column_start":1,"column_end":38}},{"value":"/ #[derive(Deserialize, Serialize)]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":3517,"byte_end":3554,"line_start":83,"line_end":83,"column_start":1,"column_end":38}},{"value":"/ struct Foo {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":3555,"byte_end":3571,"line_start":84,"line_end":84,"column_start":1,"column_end":17}},{"value":"/     // Serialize with Display, deserialize with FromStr","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":3572,"byte_end":3631,"line_start":85,"line_end":85,"column_start":1,"column_end":60}},{"value":"/     #[serde_as(as = \"DisplayFromStr\")]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":3632,"byte_end":3674,"line_start":86,"line_end":86,"column_start":1,"column_end":43}},{"value":"/     bar: u8,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":3675,"byte_end":3691,"line_start":87,"line_end":87,"column_start":1,"column_end":17}},{"value":"/ }","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":3692,"byte_end":3697,"line_start":88,"line_end":88,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":3698,"byte_end":3701,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ # #[cfg(all(feature = \"macros\", feature = \"json\"))] {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":3702,"byte_end":3759,"line_start":90,"line_end":90,"column_start":1,"column_end":58}},{"value":"/ // This will serialize","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":3760,"byte_end":3786,"line_start":91,"line_end":91,"column_start":1,"column_end":27}},{"value":"/ # let foo =","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":3787,"byte_end":3802,"line_start":92,"line_end":92,"column_start":1,"column_end":16}},{"value":"/ Foo {bar: 12}","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":3803,"byte_end":3820,"line_start":93,"line_end":93,"column_start":1,"column_end":18}},{"value":"/ # ;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":3821,"byte_end":3828,"line_start":94,"line_end":94,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":3829,"byte_end":3832,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ // into this JSON","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":3833,"byte_end":3854,"line_start":96,"line_end":96,"column_start":1,"column_end":22}},{"value":"/ # let json = r#\"","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":3855,"byte_end":3875,"line_start":97,"line_end":97,"column_start":1,"column_end":21}},{"value":"/ {\"bar\": \"12\"}","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":3876,"byte_end":3893,"line_start":98,"line_end":98,"column_start":1,"column_end":18}},{"value":"/ # \"#;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":3894,"byte_end":3903,"line_start":99,"line_end":99,"column_start":1,"column_end":10}},{"value":"/ # assert_eq!(json.replace(\" \", \"\").replace(\"\\n\", \"\"), serde_json::to_string(&foo).unwrap());","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":3904,"byte_end":4000,"line_start":100,"line_end":100,"column_start":1,"column_end":97}},{"value":"/ # assert_eq!(foo, serde_json::from_str(&json).unwrap());","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":4001,"byte_end":4061,"line_start":101,"line_end":101,"column_start":1,"column_end":61}},{"value":"/ # }","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":4062,"byte_end":4069,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":4070,"byte_end":4077,"line_start":103,"line_end":103,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":4078,"byte_end":4081,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ ## `skip_serializing_none`","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":4082,"byte_end":4112,"line_start":105,"line_end":105,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":4113,"byte_end":4116,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ This situation often occurs with JSON, but other formats also support optional fields.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":4117,"byte_end":4207,"line_start":107,"line_end":107,"column_start":1,"column_end":91}},{"value":"/ If many fields are optional, putting the annotations on the structs can become tedious.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":4208,"byte_end":4299,"line_start":108,"line_end":108,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":4300,"byte_end":4303,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":4304,"byte_end":4315,"line_start":110,"line_end":110,"column_start":1,"column_end":12}},{"value":"/ # #[cfg(feature = \"macros\")]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":4316,"byte_end":4348,"line_start":111,"line_end":111,"column_start":1,"column_end":33}},{"value":"/ # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":4349,"byte_end":4398,"line_start":112,"line_end":112,"column_start":1,"column_end":50}},{"value":"/ # #[cfg(feature = \"macros\")]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":4399,"byte_end":4431,"line_start":113,"line_end":113,"column_start":1,"column_end":33}},{"value":"/ # use serde_with::skip_serializing_none;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":4432,"byte_end":4476,"line_start":114,"line_end":114,"column_start":1,"column_end":45}},{"value":"/ # #[cfg(feature = \"macros\")]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":4477,"byte_end":4509,"line_start":115,"line_end":115,"column_start":1,"column_end":33}},{"value":"/ #[skip_serializing_none]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":4510,"byte_end":4538,"line_start":116,"line_end":116,"column_start":1,"column_end":29}},{"value":"/ # #[derive(Debug, Eq, PartialEq)]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":4539,"byte_end":4576,"line_start":117,"line_end":117,"column_start":1,"column_end":38}},{"value":"/ #[derive(Deserialize, Serialize)]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":4577,"byte_end":4614,"line_start":118,"line_end":118,"column_start":1,"column_end":38}},{"value":"/ struct Foo {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":4615,"byte_end":4631,"line_start":119,"line_end":119,"column_start":1,"column_end":17}},{"value":"/     a: Option<usize>,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":4632,"byte_end":4657,"line_start":120,"line_end":120,"column_start":1,"column_end":26}},{"value":"/     b: Option<usize>,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":4658,"byte_end":4683,"line_start":121,"line_end":121,"column_start":1,"column_end":26}},{"value":"/     c: Option<usize>,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":4684,"byte_end":4709,"line_start":122,"line_end":122,"column_start":1,"column_end":26}},{"value":"/     d: Option<usize>,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":4710,"byte_end":4735,"line_start":123,"line_end":123,"column_start":1,"column_end":26}},{"value":"/     e: Option<usize>,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":4736,"byte_end":4761,"line_start":124,"line_end":124,"column_start":1,"column_end":26}},{"value":"/     f: Option<usize>,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":4762,"byte_end":4787,"line_start":125,"line_end":125,"column_start":1,"column_end":26}},{"value":"/     g: Option<usize>,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":4788,"byte_end":4813,"line_start":126,"line_end":126,"column_start":1,"column_end":26}},{"value":"/ }","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":4814,"byte_end":4819,"line_start":127,"line_end":127,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":4820,"byte_end":4823,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ # #[cfg(all(feature = \"macros\", feature = \"json\"))] {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":4824,"byte_end":4881,"line_start":129,"line_end":129,"column_start":1,"column_end":58}},{"value":"/ // This will serialize","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":4882,"byte_end":4908,"line_start":130,"line_end":130,"column_start":1,"column_end":27}},{"value":"/ # let foo =","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":4909,"byte_end":4924,"line_start":131,"line_end":131,"column_start":1,"column_end":16}},{"value":"/ Foo {a: None, b: None, c: None, d: Some(4), e: None, f: None, g: Some(7)}","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":4925,"byte_end":5002,"line_start":132,"line_end":132,"column_start":1,"column_end":78}},{"value":"/ # ;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":5003,"byte_end":5010,"line_start":133,"line_end":133,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":5011,"byte_end":5014,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ // into this JSON","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":5015,"byte_end":5036,"line_start":135,"line_end":135,"column_start":1,"column_end":22}},{"value":"/ # let json = r#\"","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":5037,"byte_end":5057,"line_start":136,"line_end":136,"column_start":1,"column_end":21}},{"value":"/ {\"d\": 4, \"g\": 7}","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":5058,"byte_end":5078,"line_start":137,"line_end":137,"column_start":1,"column_end":21}},{"value":"/ # \"#;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":5079,"byte_end":5088,"line_start":138,"line_end":138,"column_start":1,"column_end":10}},{"value":"/ # assert_eq!(json.replace(\" \", \"\").replace(\"\\n\", \"\"), serde_json::to_string(&foo).unwrap());","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":5089,"byte_end":5185,"line_start":139,"line_end":139,"column_start":1,"column_end":97}},{"value":"/ # assert_eq!(foo, serde_json::from_str(&json).unwrap());","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":5186,"byte_end":5246,"line_start":140,"line_end":140,"column_start":1,"column_end":61}},{"value":"/ # }","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":5247,"byte_end":5254,"line_start":141,"line_end":141,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":5255,"byte_end":5262,"line_start":142,"line_end":142,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":5263,"byte_end":5266,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ ## Advanced `serde_as` usage","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":5267,"byte_end":5299,"line_start":144,"line_end":144,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":5300,"byte_end":5303,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ This example is mainly supposed to highlight the flexibility of the `serde_as`-annotation compared to [serde's with-annotation][with-annotation].","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":5304,"byte_end":5453,"line_start":146,"line_end":146,"column_start":1,"column_end":150}},{"value":"/ More details about `serde_as` can be found in the [user guide][].","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":5454,"byte_end":5523,"line_start":147,"line_end":147,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":5524,"byte_end":5527,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":5528,"byte_end":5539,"line_start":149,"line_end":149,"column_start":1,"column_end":12}},{"value":"/ # #[cfg(all(feature = \"macros\", feature = \"hex\"))]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":5540,"byte_end":5594,"line_start":150,"line_end":150,"column_start":1,"column_end":55}},{"value":"/ # use {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":5595,"byte_end":5606,"line_start":151,"line_end":151,"column_start":1,"column_end":12}},{"value":"/ #     serde_derive::{Deserialize, Serialize},","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":5607,"byte_end":5656,"line_start":152,"line_end":152,"column_start":1,"column_end":50}},{"value":"/ #     serde_with::{serde_as, DisplayFromStr, DurationSeconds, hex::Hex},","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":5657,"byte_end":5733,"line_start":153,"line_end":153,"column_start":1,"column_end":77}},{"value":"/ #     std::time::Duration,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":5734,"byte_end":5764,"line_start":154,"line_end":154,"column_start":1,"column_end":31}},{"value":"/ #     std::collections::BTreeMap,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":5765,"byte_end":5802,"line_start":155,"line_end":155,"column_start":1,"column_end":38}},{"value":"/ # };","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":5803,"byte_end":5811,"line_start":156,"line_end":156,"column_start":1,"column_end":9}},{"value":"/ # #[cfg(all(feature = \"macros\", feature = \"hex\"))]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":5812,"byte_end":5866,"line_start":157,"line_end":157,"column_start":1,"column_end":55}},{"value":"/ #[serde_as]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":5867,"byte_end":5882,"line_start":158,"line_end":158,"column_start":1,"column_end":16}},{"value":"/ # #[derive(Debug, Eq, PartialEq)]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":5883,"byte_end":5920,"line_start":159,"line_end":159,"column_start":1,"column_end":38}},{"value":"/ #[derive(Deserialize, Serialize)]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":5921,"byte_end":5958,"line_start":160,"line_end":160,"column_start":1,"column_end":38}},{"value":"/ struct Foo {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":5959,"byte_end":5975,"line_start":161,"line_end":161,"column_start":1,"column_end":17}},{"value":"/      // Serialize them into a list of number as seconds","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":5976,"byte_end":6035,"line_start":162,"line_end":162,"column_start":1,"column_end":60}},{"value":"/      #[serde_as(as = \"Vec<DurationSeconds>\")]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":6036,"byte_end":6085,"line_start":163,"line_end":163,"column_start":1,"column_end":50}},{"value":"/      durations: Vec<Duration>,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":6086,"byte_end":6120,"line_start":164,"line_end":164,"column_start":1,"column_end":35}},{"value":"/      // We can treat a Vec like a map with duplicates.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":6121,"byte_end":6179,"line_start":165,"line_end":165,"column_start":1,"column_end":59}},{"value":"/      // JSON only allows string keys, so convert i32 to strings","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":6180,"byte_end":6247,"line_start":166,"line_end":166,"column_start":1,"column_end":68}},{"value":"/      // The bytes will be hex encoded","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":6248,"byte_end":6289,"line_start":167,"line_end":167,"column_start":1,"column_end":42}},{"value":"/      #[serde_as(as = \"BTreeMap<DisplayFromStr, Hex>\")]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":6290,"byte_end":6348,"line_start":168,"line_end":168,"column_start":1,"column_end":59}},{"value":"/      bytes: Vec<(i32, Vec<u8>)>,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":6349,"byte_end":6385,"line_start":169,"line_end":169,"column_start":1,"column_end":37}},{"value":"/ }","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":6386,"byte_end":6391,"line_start":170,"line_end":170,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":6392,"byte_end":6395,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ # #[cfg(all(feature = \"macros\", feature = \"json\", feature = \"hex\"))] {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":6396,"byte_end":6470,"line_start":172,"line_end":172,"column_start":1,"column_end":75}},{"value":"/ // This will serialize","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":6471,"byte_end":6497,"line_start":173,"line_end":173,"column_start":1,"column_end":27}},{"value":"/ # let foo =","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":6498,"byte_end":6513,"line_start":174,"line_end":174,"column_start":1,"column_end":16}},{"value":"/ Foo {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":6514,"byte_end":6523,"line_start":175,"line_end":175,"column_start":1,"column_end":10}},{"value":"/     durations: vec![Duration::new(5, 0), Duration::new(3600, 0), Duration::new(0, 0)],","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":6524,"byte_end":6614,"line_start":176,"line_end":176,"column_start":1,"column_end":91}},{"value":"/     bytes: vec![","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":6615,"byte_end":6635,"line_start":177,"line_end":177,"column_start":1,"column_end":21}},{"value":"/         (1, vec![0, 1, 2]),","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":6636,"byte_end":6667,"line_start":178,"line_end":178,"column_start":1,"column_end":32}},{"value":"/         (-100, vec![100, 200, 255]),","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":6668,"byte_end":6708,"line_start":179,"line_end":179,"column_start":1,"column_end":41}},{"value":"/         (1, vec![0, 111, 222]),","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":6709,"byte_end":6744,"line_start":180,"line_end":180,"column_start":1,"column_end":36}},{"value":"/     ],","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":6745,"byte_end":6755,"line_start":181,"line_end":181,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":6756,"byte_end":6761,"line_start":182,"line_end":182,"column_start":1,"column_end":6}},{"value":"/ # ;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":6762,"byte_end":6769,"line_start":183,"line_end":183,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":6770,"byte_end":6773,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ // into this JSON","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":6774,"byte_end":6795,"line_start":185,"line_end":185,"column_start":1,"column_end":22}},{"value":"/ # let json = r#\"","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":6796,"byte_end":6816,"line_start":186,"line_end":186,"column_start":1,"column_end":21}},{"value":"/ {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":6817,"byte_end":6822,"line_start":187,"line_end":187,"column_start":1,"column_end":6}},{"value":"/     \"durations\": [5, 3600, 0],","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":6823,"byte_end":6857,"line_start":188,"line_end":188,"column_start":1,"column_end":35}},{"value":"/     \"bytes\": {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":6858,"byte_end":6876,"line_start":189,"line_end":189,"column_start":1,"column_end":19}},{"value":"/         \"1\": \"000102\",","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":6877,"byte_end":6903,"line_start":190,"line_end":190,"column_start":1,"column_end":27}},{"value":"/         \"-100\": \"64c8ff\",","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":6904,"byte_end":6933,"line_start":191,"line_end":191,"column_start":1,"column_end":30}},{"value":"/         \"1\": \"006fde\"","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":6934,"byte_end":6959,"line_start":192,"line_end":192,"column_start":1,"column_end":26}},{"value":"/     }","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":6960,"byte_end":6969,"line_start":193,"line_end":193,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":6970,"byte_end":6975,"line_start":194,"line_end":194,"column_start":1,"column_end":6}},{"value":"/ # \"#;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":6976,"byte_end":6985,"line_start":195,"line_end":195,"column_start":1,"column_end":10}},{"value":"/ # assert_eq!(json.replace(\" \", \"\").replace(\"\\n\", \"\"), serde_json::to_string(&foo).unwrap());","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":6986,"byte_end":7082,"line_start":196,"line_end":196,"column_start":1,"column_end":97}},{"value":"/ # assert_eq!(foo, serde_json::from_str(&json).unwrap());","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":7083,"byte_end":7143,"line_start":197,"line_end":197,"column_start":1,"column_end":61}},{"value":"/ # }","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":7144,"byte_end":7151,"line_start":198,"line_end":198,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":7152,"byte_end":7159,"line_start":199,"line_end":199,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":7160,"byte_end":7163,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/ [`DisplayFromStr`]: https://docs.rs/serde_with/1.6.4/serde_with/struct.DisplayFromStr.html","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":7164,"byte_end":7258,"line_start":201,"line_end":201,"column_start":1,"column_end":95}},{"value":"/ [`with_prefix!`]: https://docs.rs/serde_with/1.6.4/serde_with/macro.with_prefix.html","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":7259,"byte_end":7347,"line_start":202,"line_end":202,"column_start":1,"column_end":89}},{"value":"/ [display_fromstr]: https://docs.rs/serde_with/1.6.4/serde_with/rust/display_fromstr/index.html","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":7348,"byte_end":7446,"line_start":203,"line_end":203,"column_start":1,"column_end":99}},{"value":"/ [feature flags]: https://docs.rs/serde_with/1.6.4/serde_with/guide/feature_flags/index.html","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":7447,"byte_end":7542,"line_start":204,"line_end":204,"column_start":1,"column_end":96}},{"value":"/ [skip_serializing_none]: https://docs.rs/serde_with/1.6.4/serde_with/attr.skip_serializing_none.html","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":7543,"byte_end":7647,"line_start":205,"line_end":205,"column_start":1,"column_end":105}},{"value":"/ [StringWithSeparator]: https://docs.rs/serde_with/1.6.4/serde_with/rust/struct.StringWithSeparator.html","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":7648,"byte_end":7755,"line_start":206,"line_end":206,"column_start":1,"column_end":108}},{"value":"/ [user guide]: https://docs.rs/serde_with/1.6.4/serde_with/guide/index.html","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":7756,"byte_end":7834,"line_start":207,"line_end":207,"column_start":1,"column_end":79}},{"value":"/ [with-annotation]: https://serde.rs/field-attrs.html#with","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":7835,"byte_end":7896,"line_start":208,"line_end":208,"column_start":1,"column_end":62}}]},{"kind":"Mod","id":{"krate":0,"index":4},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"de","qualname":"::de","value":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/mod.rs","parent":null,"children":[{"krate":0,"index":5},{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":3671},{"krate":0,"index":3676},{"krate":0,"index":134},{"krate":0,"index":139}],"decl_id":null,"docs":" Module for [`DeserializeAs`][] implementations","sig":null,"attributes":[{"value":"/ Module for [`DeserializeAs`][] implementations","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/mod.rs","byte_start":51067,"byte_end":51117,"line_start":1,"line_end":1,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/mod.rs","byte_start":51118,"byte_end":51121,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The module contains the [`DeserializeAs`][] trait and helper code.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/mod.rs","byte_start":51122,"byte_end":51192,"line_start":3,"line_end":3,"column_start":1,"column_end":71}},{"value":"/ Additionally, it contains implementations of [`DeserializeAs`][] for types defined in the Rust Standard Library or this crate.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/mod.rs","byte_start":51193,"byte_end":51323,"line_start":4,"line_end":4,"column_start":1,"column_end":131}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/mod.rs","byte_start":51324,"byte_end":51327,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ You can find more details on how to implement this trait for your types in the documentation of the [`DeserializeAs`][] trait and details about the usage in the [user guide][].","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/mod.rs","byte_start":51328,"byte_end":51508,"line_start":6,"line_end":6,"column_start":1,"column_end":181}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/mod.rs","byte_start":51509,"byte_end":51512,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ [user guide]: crate::guide","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/mod.rs","byte_start":51513,"byte_end":51543,"line_start":8,"line_end":8,"column_start":1,"column_end":31}}]},{"kind":"Trait","id":{"krate":0,"index":129},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/mod.rs","byte_start":55455,"byte_end":55468,"line_start":106,"line_end":106,"column_start":11,"column_end":24},"name":"DeserializeAs","qualname":"::de::DeserializeAs","value":"DeserializeAs<'de, T>: Sized","parent":null,"children":[{"krate":0,"index":132}],"decl_id":null,"docs":" A **data structure** that can be deserialized from any data format supported by Serde, analogue to [`Deserialize`].","sig":null,"attributes":[{"value":"/ A **data structure** that can be deserialized from any data format supported by Serde, analogue to [`Deserialize`].","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/mod.rs","byte_start":51583,"byte_end":51702,"line_start":14,"line_end":14,"column_start":1,"column_end":120}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/mod.rs","byte_start":51703,"byte_end":51706,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ The trait is analogue to the [`serde::Deserialize`][`Deserialize`] trait, with the same meaning of input and output arguments.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/mod.rs","byte_start":51707,"byte_end":51837,"line_start":16,"line_end":16,"column_start":1,"column_end":131}},{"value":"/ It can and should the implemented using the same code structure as the [`Deserialize`] trait.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/mod.rs","byte_start":51838,"byte_end":51935,"line_start":17,"line_end":17,"column_start":1,"column_end":98}},{"value":"/ As such, the same advice for [implementing `Deserialize`][impl-deserialize] applies here.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/mod.rs","byte_start":51936,"byte_end":52029,"line_start":18,"line_end":18,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/mod.rs","byte_start":52030,"byte_end":52033,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Differences to [`Deserialize`]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/mod.rs","byte_start":52034,"byte_end":52070,"line_start":20,"line_end":20,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/mod.rs","byte_start":52071,"byte_end":52074,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ The trait is only required for container-like types or types implementing specific conversion functions.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/mod.rs","byte_start":52075,"byte_end":52183,"line_start":22,"line_end":22,"column_start":1,"column_end":109}},{"value":"/ Container-like types are [`Vec`][], [`BTreeMap`][], but also [`Option`][] and [`Box`][].","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/mod.rs","byte_start":52184,"byte_end":52276,"line_start":23,"line_end":23,"column_start":1,"column_end":93}},{"value":"/ Conversion types deserialize into a different Rust type.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/mod.rs","byte_start":52277,"byte_end":52337,"line_start":24,"line_end":24,"column_start":1,"column_end":61}},{"value":"/ For example, [`DisplayFromStr`] uses the [`FromStr`] trait after deserializing a string and [`DurationSeconds`] creates a [`Duration`] from either String or integer values.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/mod.rs","byte_start":52338,"byte_end":52514,"line_start":25,"line_end":25,"column_start":1,"column_end":177}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/mod.rs","byte_start":52515,"byte_end":52518,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ This code shows how to implement [`Deserialize`] for [`Box`]:","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/mod.rs","byte_start":52519,"byte_end":52584,"line_start":27,"line_end":27,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/mod.rs","byte_start":52585,"byte_end":52588,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ```rust,ignore","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/mod.rs","byte_start":52589,"byte_end":52607,"line_start":29,"line_end":29,"column_start":1,"column_end":19}},{"value":"/ impl<'de, T: Deserialize<'de>> Deserialize<'de> for Box<T> {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/mod.rs","byte_start":52608,"byte_end":52672,"line_start":30,"line_end":30,"column_start":1,"column_end":65}},{"value":"/     fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/mod.rs","byte_start":52673,"byte_end":52741,"line_start":31,"line_end":31,"column_start":1,"column_end":69}},{"value":"/     where","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/mod.rs","byte_start":52742,"byte_end":52755,"line_start":32,"line_end":32,"column_start":1,"column_end":14}},{"value":"/         D: Deserializer<'de>,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/mod.rs","byte_start":52756,"byte_end":52789,"line_start":33,"line_end":33,"column_start":1,"column_end":34}},{"value":"/     {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/mod.rs","byte_start":52790,"byte_end":52799,"line_start":34,"line_end":34,"column_start":1,"column_end":10}},{"value":"/         Ok(Box::new(Deserialize::deserialize(deserializer)?))","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/mod.rs","byte_start":52800,"byte_end":52865,"line_start":35,"line_end":35,"column_start":1,"column_end":66}},{"value":"/     }","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/mod.rs","byte_start":52866,"byte_end":52875,"line_start":36,"line_end":36,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/mod.rs","byte_start":52876,"byte_end":52881,"line_start":37,"line_end":37,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/mod.rs","byte_start":52882,"byte_end":52889,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/mod.rs","byte_start":52890,"byte_end":52893,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ and this code shows how to do the same using [`DeserializeAs`][]:","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/mod.rs","byte_start":52894,"byte_end":52963,"line_start":40,"line_end":40,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/mod.rs","byte_start":52964,"byte_end":52967,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ ```rust,ignore","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/mod.rs","byte_start":52968,"byte_end":52986,"line_start":42,"line_end":42,"column_start":1,"column_end":19}},{"value":"/ impl<'de, T, U> DeserializeAs<'de, Box<T>> for Box<U>","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/mod.rs","byte_start":52987,"byte_end":53044,"line_start":43,"line_end":43,"column_start":1,"column_end":58}},{"value":"/ where","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/mod.rs","byte_start":53045,"byte_end":53054,"line_start":44,"line_end":44,"column_start":1,"column_end":10}},{"value":"/     U: DeserializeAs<'de, T>,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/mod.rs","byte_start":53055,"byte_end":53088,"line_start":45,"line_end":45,"column_start":1,"column_end":34}},{"value":"/ {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/mod.rs","byte_start":53089,"byte_end":53094,"line_start":46,"line_end":46,"column_start":1,"column_end":6}},{"value":"/     fn deserialize_as<D>(deserializer: D) -> Result<Box<T>, D::Error>","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/mod.rs","byte_start":53095,"byte_end":53168,"line_start":47,"line_end":47,"column_start":1,"column_end":74}},{"value":"/     where","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/mod.rs","byte_start":53169,"byte_end":53182,"line_start":48,"line_end":48,"column_start":1,"column_end":14}},{"value":"/         D: Deserializer<'de>,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/mod.rs","byte_start":53183,"byte_end":53216,"line_start":49,"line_end":49,"column_start":1,"column_end":34}},{"value":"/     {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/mod.rs","byte_start":53217,"byte_end":53226,"line_start":50,"line_end":50,"column_start":1,"column_end":10}},{"value":"/         Ok(Box::new(","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/mod.rs","byte_start":53227,"byte_end":53251,"line_start":51,"line_end":51,"column_start":1,"column_end":25}},{"value":"/             DeserializeAsWrap::<T, U>::deserialize(deserializer)?.into_inner(),","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/mod.rs","byte_start":53252,"byte_end":53335,"line_start":52,"line_end":52,"column_start":1,"column_end":84}},{"value":"/         ))","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/mod.rs","byte_start":53336,"byte_end":53350,"line_start":53,"line_end":53,"column_start":1,"column_end":15}},{"value":"/     }","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/mod.rs","byte_start":53351,"byte_end":53360,"line_start":54,"line_end":54,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/mod.rs","byte_start":53361,"byte_end":53366,"line_start":55,"line_end":55,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/mod.rs","byte_start":53367,"byte_end":53374,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/mod.rs","byte_start":53375,"byte_end":53378,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ It uses two type parameters, `T` and `U` instead of only one and performs the deserialization step using the `DeserializeAsWrap` type.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/mod.rs","byte_start":53379,"byte_end":53517,"line_start":58,"line_end":58,"column_start":1,"column_end":139}},{"value":"/ The `T` type is the on the Rust side after deserialization, whereas the `U` type determines how the value will be deserialized.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/mod.rs","byte_start":53518,"byte_end":53649,"line_start":59,"line_end":59,"column_start":1,"column_end":132}},{"value":"/ These two changes are usually enough to make a container type implement [`DeserializeAs`][].","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/mod.rs","byte_start":53650,"byte_end":53746,"line_start":60,"line_end":60,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/mod.rs","byte_start":53747,"byte_end":53750,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/mod.rs","byte_start":53751,"byte_end":53754,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ [`DeserializeAsWrap`] is a piece of glue code which turns [`DeserializeAs`] into a serde compatible datatype, by converting all calls to `deserialize` into `deserialize_as`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/mod.rs","byte_start":53755,"byte_end":53932,"line_start":63,"line_end":63,"column_start":1,"column_end":178}},{"value":"/ This allows us to implement [`DeserializeAs`] such that it can be applied recursively throughout the whole data structure.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/mod.rs","byte_start":53933,"byte_end":54059,"line_start":64,"line_end":64,"column_start":1,"column_end":127}},{"value":"/ This is mostly important for container types, such as `Vec` or `BTreeMap`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/mod.rs","byte_start":54060,"byte_end":54138,"line_start":65,"line_end":65,"column_start":1,"column_end":79}},{"value":"/ In a `BTreeMap` this allows us to specify two different serialization behaviors, one for key and one for value, using the [`DeserializeAs`] trait.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/mod.rs","byte_start":54139,"byte_end":54289,"line_start":66,"line_end":66,"column_start":1,"column_end":151}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/mod.rs","byte_start":54290,"byte_end":54293,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ ## Implementing a converter Type","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/mod.rs","byte_start":54294,"byte_end":54330,"line_start":68,"line_end":68,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/mod.rs","byte_start":54331,"byte_end":54334,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ This shows a simplified implementation for [`DisplayFromStr`].","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/mod.rs","byte_start":54335,"byte_end":54401,"line_start":70,"line_end":70,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/mod.rs","byte_start":54402,"byte_end":54405,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/mod.rs","byte_start":54406,"byte_end":54417,"line_start":72,"line_end":72,"column_start":1,"column_end":12}},{"value":"/ # #[cfg(all(feature = \"macros\"))] {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/mod.rs","byte_start":54418,"byte_end":54457,"line_start":73,"line_end":73,"column_start":1,"column_end":40}},{"value":"/ # use serde::Deserialize;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/mod.rs","byte_start":54458,"byte_end":54487,"line_start":74,"line_end":74,"column_start":1,"column_end":30}},{"value":"/ # use serde::de::Error;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/mod.rs","byte_start":54488,"byte_end":54515,"line_start":75,"line_end":75,"column_start":1,"column_end":28}},{"value":"/ # use serde_with::DeserializeAs;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/mod.rs","byte_start":54516,"byte_end":54552,"line_start":76,"line_end":76,"column_start":1,"column_end":37}},{"value":"/ # use std::str::FromStr;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/mod.rs","byte_start":54553,"byte_end":54581,"line_start":77,"line_end":77,"column_start":1,"column_end":29}},{"value":"/ # use std::fmt::Display;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/mod.rs","byte_start":54582,"byte_end":54610,"line_start":78,"line_end":78,"column_start":1,"column_end":29}},{"value":"/ struct DisplayFromStr;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/mod.rs","byte_start":54611,"byte_end":54637,"line_start":79,"line_end":79,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/mod.rs","byte_start":54638,"byte_end":54641,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ impl<'de, T> DeserializeAs<'de, T> for DisplayFromStr","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/mod.rs","byte_start":54642,"byte_end":54699,"line_start":81,"line_end":81,"column_start":1,"column_end":58}},{"value":"/ where","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/mod.rs","byte_start":54700,"byte_end":54709,"line_start":82,"line_end":82,"column_start":1,"column_end":10}},{"value":"/     T: FromStr,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/mod.rs","byte_start":54710,"byte_end":54729,"line_start":83,"line_end":83,"column_start":1,"column_end":20}},{"value":"/     T::Err: Display,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/mod.rs","byte_start":54730,"byte_end":54754,"line_start":84,"line_end":84,"column_start":1,"column_end":25}},{"value":"/ {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/mod.rs","byte_start":54755,"byte_end":54760,"line_start":85,"line_end":85,"column_start":1,"column_end":6}},{"value":"/     fn deserialize_as<D>(deserializer: D) -> Result<T, D::Error>","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/mod.rs","byte_start":54761,"byte_end":54829,"line_start":86,"line_end":86,"column_start":1,"column_end":69}},{"value":"/     where","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/mod.rs","byte_start":54830,"byte_end":54843,"line_start":87,"line_end":87,"column_start":1,"column_end":14}},{"value":"/         D: serde::Deserializer<'de>,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/mod.rs","byte_start":54844,"byte_end":54884,"line_start":88,"line_end":88,"column_start":1,"column_end":41}},{"value":"/     {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/mod.rs","byte_start":54885,"byte_end":54894,"line_start":89,"line_end":89,"column_start":1,"column_end":10}},{"value":"/         let s = String::deserialize(deserializer).map_err(Error::custom)?;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/mod.rs","byte_start":54895,"byte_end":54973,"line_start":90,"line_end":90,"column_start":1,"column_end":79}},{"value":"/         s.parse().map_err(Error::custom)","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/mod.rs","byte_start":54974,"byte_end":55018,"line_start":91,"line_end":91,"column_start":1,"column_end":45}},{"value":"/     }","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/mod.rs","byte_start":55019,"byte_end":55028,"line_start":92,"line_end":92,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/mod.rs","byte_start":55029,"byte_end":55034,"line_start":93,"line_end":93,"column_start":1,"column_end":6}},{"value":"/ #","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/mod.rs","byte_start":55035,"byte_end":55040,"line_start":94,"line_end":94,"column_start":1,"column_end":6}},{"value":"/ # #[serde_with::serde_as]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/mod.rs","byte_start":55041,"byte_end":55070,"line_start":95,"line_end":95,"column_start":1,"column_end":30}},{"value":"/ # #[derive(serde::Deserialize)]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/mod.rs","byte_start":55071,"byte_end":55106,"line_start":96,"line_end":96,"column_start":1,"column_end":36}},{"value":"/ # struct S (#[serde_as(as = \"DisplayFromStr\")] bool);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/mod.rs","byte_start":55107,"byte_end":55164,"line_start":97,"line_end":97,"column_start":1,"column_end":58}},{"value":"/ #","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/mod.rs","byte_start":55165,"byte_end":55170,"line_start":98,"line_end":98,"column_start":1,"column_end":6}},{"value":"/ # assert_eq!(false, serde_json::from_str::<S>(r#\"\"false\"\"#).unwrap().0);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/mod.rs","byte_start":55171,"byte_end":55247,"line_start":99,"line_end":99,"column_start":1,"column_end":77}},{"value":"/ # }","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/mod.rs","byte_start":55248,"byte_end":55255,"line_start":100,"line_end":100,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/mod.rs","byte_start":55256,"byte_end":55263,"line_start":101,"line_end":101,"column_start":1,"column_end":8}},{"value":"/ [`BTreeMap`]: std::collections::BTreeMap","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/mod.rs","byte_start":55264,"byte_end":55308,"line_start":102,"line_end":102,"column_start":1,"column_end":45}},{"value":"/ [`Duration`]: std::time::Duration","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/mod.rs","byte_start":55309,"byte_end":55346,"line_start":103,"line_end":103,"column_start":1,"column_end":38}},{"value":"/ [`FromStr`]: std::str::FromStr","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/mod.rs","byte_start":55347,"byte_end":55381,"line_start":104,"line_end":104,"column_start":1,"column_end":35}},{"value":"/ [impl-deserialize]: https://serde.rs/impl-deserialize.html","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/mod.rs","byte_start":55382,"byte_end":55444,"line_start":105,"line_end":105,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":132},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/mod.rs","byte_start":55559,"byte_end":55573,"line_start":108,"line_end":108,"column_start":8,"column_end":22},"name":"deserialize_as","qualname":"::de::DeserializeAs::deserialize_as","value":"pub fn deserialize_as<D>(D) -> Result<T, D::Error> where D: Deserializer","parent":{"krate":0,"index":129},"children":[],"decl_id":null,"docs":" Deserialize this value from the given Serde deserializer.\n","sig":null,"attributes":[{"value":"/ Deserialize this value from the given Serde deserializer.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/mod.rs","byte_start":55490,"byte_end":55551,"line_start":107,"line_end":107,"column_start":5,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":3671},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/mod.rs","byte_start":55761,"byte_end":55778,"line_start":115,"line_end":115,"column_start":12,"column_end":29},"name":"DeserializeAsWrap","qualname":"::de::DeserializeAsWrap","value":"DeserializeAsWrap {  }","parent":null,"children":[{"krate":0,"index":3674},{"krate":0,"index":3675}],"decl_id":null,"docs":" Helper type to implement [`DeserializeAs`] for container-like types.\n","sig":null,"attributes":[{"value":"/ Helper type to implement [`DeserializeAs`] for container-like types.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/mod.rs","byte_start":55660,"byte_end":55732,"line_start":113,"line_end":113,"column_start":1,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/mod.rs","byte_start":55929,"byte_end":55939,"line_start":122,"line_end":122,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<DeserializeAsWrap<T, U>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Return the inner value of type `T`.\n","sig":null,"attributes":[{"value":"/ Return the inner value of type `T`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/mod.rs","byte_start":55878,"byte_end":55917,"line_start":121,"line_end":121,"column_start":5,"column_end":44}}]},{"kind":"Trait","id":{"krate":0,"index":157},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/duplicate_key_impls/error_on_duplicate.rs","byte_start":84298,"byte_end":84324,"line_start":6,"line_end":6,"column_start":11,"column_end":37},"name":"PreventDuplicateInsertsSet","qualname":"::duplicate_key_impls::error_on_duplicate::PreventDuplicateInsertsSet","value":"PreventDuplicateInsertsSet<T>","parent":null,"children":[{"krate":0,"index":159},{"krate":0,"index":160}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":159},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/duplicate_key_impls/error_on_duplicate.rs","byte_start":84337,"byte_end":84340,"line_start":7,"line_end":7,"column_start":8,"column_end":11},"name":"new","qualname":"::duplicate_key_impls::error_on_duplicate::PreventDuplicateInsertsSet::new","value":"pub fn new(Option<usize>) -> Self","parent":{"krate":0,"index":157},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/duplicate_key_impls/error_on_duplicate.rs","byte_start":84472,"byte_end":84478,"line_start":10,"line_end":10,"column_start":8,"column_end":14},"name":"insert","qualname":"::duplicate_key_impls::error_on_duplicate::PreventDuplicateInsertsSet::insert","value":"pub fn insert(&mut Self, T) -> bool","parent":{"krate":0,"index":157},"children":[],"decl_id":null,"docs":" Return true if the insert was successful and the value did not exist in the set\n","sig":null,"attributes":[{"value":"/ Return true if the insert was successful and the value did not exist in the set","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/duplicate_key_impls/error_on_duplicate.rs","byte_start":84381,"byte_end":84464,"line_start":9,"line_end":9,"column_start":5,"column_end":88}}]},{"kind":"Trait","id":{"krate":0,"index":161},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/duplicate_key_impls/error_on_duplicate.rs","byte_start":84522,"byte_end":84548,"line_start":13,"line_end":13,"column_start":11,"column_end":37},"name":"PreventDuplicateInsertsMap","qualname":"::duplicate_key_impls::error_on_duplicate::PreventDuplicateInsertsMap","value":"PreventDuplicateInsertsMap<K, V>","parent":null,"children":[{"krate":0,"index":164},{"krate":0,"index":165}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/duplicate_key_impls/error_on_duplicate.rs","byte_start":84564,"byte_end":84567,"line_start":14,"line_end":14,"column_start":8,"column_end":11},"name":"new","qualname":"::duplicate_key_impls::error_on_duplicate::PreventDuplicateInsertsMap::new","value":"pub fn new(Option<usize>) -> Self","parent":{"krate":0,"index":161},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":165},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/duplicate_key_impls/error_on_duplicate.rs","byte_start":84697,"byte_end":84703,"line_start":17,"line_end":17,"column_start":8,"column_end":14},"name":"insert","qualname":"::duplicate_key_impls::error_on_duplicate::PreventDuplicateInsertsMap::insert","value":"pub fn insert(&mut Self, K, V) -> bool","parent":{"krate":0,"index":161},"children":[],"decl_id":null,"docs":" Return true if the insert was successful and the key did not exist in the map\n","sig":null,"attributes":[{"value":"/ Return true if the insert was successful and the key did not exist in the map","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/duplicate_key_impls/error_on_duplicate.rs","byte_start":84608,"byte_end":84689,"line_start":16,"line_end":16,"column_start":5,"column_end":86}}]},{"kind":"Trait","id":{"krate":0,"index":196},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/duplicate_key_impls/first_value_wins.rs","byte_start":86380,"byte_end":86408,"line_start":7,"line_end":7,"column_start":11,"column_end":39},"name":"DuplicateInsertsFirstWinsSet","qualname":"::duplicate_key_impls::first_value_wins::DuplicateInsertsFirstWinsSet","value":"DuplicateInsertsFirstWinsSet<T>","parent":null,"children":[{"krate":0,"index":198},{"krate":0,"index":199}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated = \"This is serde's default behavior.\"","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/duplicate_key_impls/first_value_wins.rs","byte_start":86318,"byte_end":86369,"line_start":6,"line_end":6,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":198},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/duplicate_key_impls/first_value_wins.rs","byte_start":86421,"byte_end":86424,"line_start":8,"line_end":8,"column_start":8,"column_end":11},"name":"new","qualname":"::duplicate_key_impls::first_value_wins::DuplicateInsertsFirstWinsSet::new","value":"pub fn new(Option<usize>) -> Self","parent":{"krate":0,"index":196},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":199},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/duplicate_key_impls/first_value_wins.rs","byte_start":86549,"byte_end":86555,"line_start":11,"line_end":11,"column_start":8,"column_end":14},"name":"insert","qualname":"::duplicate_key_impls::first_value_wins::DuplicateInsertsFirstWinsSet::insert","value":"pub fn insert(&mut Self, T)","parent":{"krate":0,"index":196},"children":[],"decl_id":null,"docs":" Insert the value into the set, if there is not already an existing value\n","sig":null,"attributes":[{"value":"/ Insert the value into the set, if there is not already an existing value","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/duplicate_key_impls/first_value_wins.rs","byte_start":86465,"byte_end":86541,"line_start":10,"line_end":10,"column_start":5,"column_end":81}}]},{"kind":"Trait","id":{"krate":0,"index":200},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/duplicate_key_impls/first_value_wins.rs","byte_start":86591,"byte_end":86619,"line_start":14,"line_end":14,"column_start":11,"column_end":39},"name":"DuplicateInsertsFirstWinsMap","qualname":"::duplicate_key_impls::first_value_wins::DuplicateInsertsFirstWinsMap","value":"DuplicateInsertsFirstWinsMap<K, V>","parent":null,"children":[{"krate":0,"index":203},{"krate":0,"index":204}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":203},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/duplicate_key_impls/first_value_wins.rs","byte_start":86635,"byte_end":86638,"line_start":15,"line_end":15,"column_start":8,"column_end":11},"name":"new","qualname":"::duplicate_key_impls::first_value_wins::DuplicateInsertsFirstWinsMap::new","value":"pub fn new(Option<usize>) -> Self","parent":{"krate":0,"index":200},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":204},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/duplicate_key_impls/first_value_wins.rs","byte_start":86763,"byte_end":86769,"line_start":18,"line_end":18,"column_start":8,"column_end":14},"name":"insert","qualname":"::duplicate_key_impls::first_value_wins::DuplicateInsertsFirstWinsMap::insert","value":"pub fn insert(&mut Self, K, V)","parent":{"krate":0,"index":200},"children":[],"decl_id":null,"docs":" Insert the value into the map, if there is not already an existing value\n","sig":null,"attributes":[{"value":"/ Insert the value into the map, if there is not already an existing value","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/duplicate_key_impls/first_value_wins.rs","byte_start":86679,"byte_end":86755,"line_start":17,"line_end":17,"column_start":5,"column_end":81}}]},{"kind":"Trait","id":{"krate":0,"index":235},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/duplicate_key_impls/last_value_wins.rs","byte_start":89027,"byte_end":89054,"line_start":6,"line_end":6,"column_start":11,"column_end":38},"name":"DuplicateInsertsLastWinsSet","qualname":"::duplicate_key_impls::last_value_wins::DuplicateInsertsLastWinsSet","value":"DuplicateInsertsLastWinsSet<T>","parent":null,"children":[{"krate":0,"index":237},{"krate":0,"index":238}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":237},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/duplicate_key_impls/last_value_wins.rs","byte_start":89067,"byte_end":89070,"line_start":7,"line_end":7,"column_start":8,"column_end":11},"name":"new","qualname":"::duplicate_key_impls::last_value_wins::DuplicateInsertsLastWinsSet::new","value":"pub fn new(Option<usize>) -> Self","parent":{"krate":0,"index":235},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/duplicate_key_impls/last_value_wins.rs","byte_start":89159,"byte_end":89166,"line_start":10,"line_end":10,"column_start":8,"column_end":15},"name":"replace","qualname":"::duplicate_key_impls::last_value_wins::DuplicateInsertsLastWinsSet::replace","value":"pub fn replace(&mut Self, T)","parent":{"krate":0,"index":235},"children":[],"decl_id":null,"docs":" Insert or replace the existing value\n","sig":null,"attributes":[{"value":"/ Insert or replace the existing value","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/duplicate_key_impls/last_value_wins.rs","byte_start":89111,"byte_end":89151,"line_start":9,"line_end":9,"column_start":5,"column_end":45}}]},{"kind":"Mod","id":{"krate":0,"index":258},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/formats.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"formats","qualname":"::formats","value":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/formats.rs","parent":null,"children":[{"krate":0,"index":259},{"krate":0,"index":3680},{"krate":0,"index":3681},{"krate":0,"index":3682},{"krate":0,"index":3683},{"krate":0,"index":3684},{"krate":0,"index":3685},{"krate":0,"index":3686},{"krate":0,"index":3687},{"krate":0,"index":3688},{"krate":0,"index":3689},{"krate":0,"index":3690},{"krate":0,"index":3691},{"krate":0,"index":3692},{"krate":0,"index":3693},{"krate":0,"index":3694},{"krate":0,"index":3702},{"krate":0,"index":3700},{"krate":0,"index":3698},{"krate":0,"index":3696},{"krate":0,"index":3703},{"krate":0,"index":3704},{"krate":0,"index":3712},{"krate":0,"index":3710},{"krate":0,"index":3708},{"krate":0,"index":3706},{"krate":0,"index":3713},{"krate":0,"index":262},{"krate":0,"index":3714},{"krate":0,"index":3722},{"krate":0,"index":3720},{"krate":0,"index":3718},{"krate":0,"index":3716},{"krate":0,"index":263},{"krate":0,"index":3723},{"krate":0,"index":3731},{"krate":0,"index":3729},{"krate":0,"index":3727},{"krate":0,"index":3725},{"krate":0,"index":264}],"decl_id":null,"docs":" Specify the format and how lenient the deserialization is\n","sig":null,"attributes":[{"value":"/ Specify the format and how lenient the deserialization is","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/formats.rs","byte_start":93178,"byte_end":93239,"line_start":1,"line_end":1,"column_start":1,"column_end":62}}]},{"kind":"Trait","id":{"krate":0,"index":259},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/formats.rs","byte_start":93667,"byte_end":93673,"line_start":8,"line_end":8,"column_start":11,"column_end":17},"name":"Format","qualname":"::formats::Format","value":"Format","parent":null,"children":[],"decl_id":null,"docs":" Specify how to serialize/deserialize a type","sig":null,"attributes":[{"value":"/ Specify how to serialize/deserialize a type","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/formats.rs","byte_start":93241,"byte_end":93288,"line_start":3,"line_end":3,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/formats.rs","byte_start":93289,"byte_end":93292,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ The format specifier allows to configure how a value is serialized/deserialized.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/formats.rs","byte_start":93293,"byte_end":93377,"line_start":5,"line_end":5,"column_start":1,"column_end":85}},{"value":"/ For example, you can serialize a timestamp as an integer using the UNIX epoch, as a string containing an integer, or as a string using ISO 8601.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/formats.rs","byte_start":93378,"byte_end":93526,"line_start":6,"line_end":6,"column_start":1,"column_end":149}},{"value":"/ This [`Format`] traits allows more flexibility in configuring the format without the need to create a new type for each case.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/formats.rs","byte_start":93527,"byte_end":93656,"line_start":7,"line_end":7,"column_start":1,"column_end":130}}]},{"kind":"Struct","id":{"krate":0,"index":3694},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/formats.rs","byte_start":94714,"byte_end":94723,"line_start":66,"line_end":66,"column_start":5,"column_end":14},"name":"Uppercase","qualname":"::formats::Uppercase","value":"","parent":null,"children":[],"decl_id":null,"docs":" Use uppercase characters\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3704},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/formats.rs","byte_start":94761,"byte_end":94770,"line_start":68,"line_end":68,"column_start":5,"column_end":14},"name":"Lowercase","qualname":"::formats::Lowercase","value":"","parent":null,"children":[],"decl_id":null,"docs":" Use lowercase characters\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":262},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/formats.rs","byte_start":94952,"byte_end":94962,"line_start":74,"line_end":74,"column_start":11,"column_end":21},"name":"Strictness","qualname":"::formats::Strictness","value":"Strictness","parent":null,"children":[],"decl_id":null,"docs":" Specify how lenient the deserialization process should be","sig":null,"attributes":[{"value":"/ Specify how lenient the deserialization process should be","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/formats.rs","byte_start":94775,"byte_end":94836,"line_start":71,"line_end":71,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/formats.rs","byte_start":94837,"byte_end":94840,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ Formats which make use of this trait should specify how it affects the deserialization behavior.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/formats.rs","byte_start":94841,"byte_end":94941,"line_start":73,"line_end":73,"column_start":1,"column_end":101}}]},{"kind":"Struct","id":{"krate":0,"index":3714},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/formats.rs","byte_start":95078,"byte_end":95084,"line_start":78,"line_end":78,"column_start":12,"column_end":18},"name":"Strict","qualname":"::formats::Strict","value":"","parent":null,"children":[],"decl_id":null,"docs":" Use strict deserialization behavior, see [`Strictness`].\n","sig":null,"attributes":[{"value":"/ Use strict deserialization behavior, see [`Strictness`].","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/formats.rs","byte_start":94967,"byte_end":95027,"line_start":76,"line_end":76,"column_start":1,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":3723},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/formats.rs","byte_start":95232,"byte_end":95240,"line_start":83,"line_end":83,"column_start":12,"column_end":20},"name":"Flexible","qualname":"::formats::Flexible","value":"","parent":null,"children":[],"decl_id":null,"docs":" Use a flexible deserialization behavior, see [`Strictness`].\n","sig":null,"attributes":[{"value":"/ Use a flexible deserialization behavior, see [`Strictness`].","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/formats.rs","byte_start":95117,"byte_end":95181,"line_start":81,"line_end":81,"column_start":1,"column_end":65}}]},{"kind":"Mod","id":{"krate":0,"index":265},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"rust","qualname":"::rust","value":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","parent":null,"children":[{"krate":0,"index":266},{"krate":0,"index":267},{"krate":0,"index":268},{"krate":0,"index":269},{"krate":0,"index":270},{"krate":0,"index":271},{"krate":0,"index":272},{"krate":0,"index":273},{"krate":0,"index":274},{"krate":0,"index":275},{"krate":0,"index":276},{"krate":0,"index":277},{"krate":0,"index":278},{"krate":0,"index":279},{"krate":0,"index":280},{"krate":0,"index":281},{"krate":0,"index":282},{"krate":0,"index":6241},{"krate":0,"index":283},{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":6253},{"krate":0,"index":292},{"krate":0,"index":293},{"krate":0,"index":6257},{"krate":0,"index":294},{"krate":0,"index":295},{"krate":0,"index":316},{"krate":0,"index":3732},{"krate":0,"index":3781},{"krate":0,"index":3777},{"krate":0,"index":3770},{"krate":0,"index":3773},{"krate":0,"index":3762},{"krate":0,"index":3765},{"krate":0,"index":3758},{"krate":0,"index":3750},{"krate":0,"index":3745},{"krate":0,"index":3741},{"krate":0,"index":3737},{"krate":0,"index":356},{"krate":0,"index":367},{"krate":0,"index":376},{"krate":0,"index":385},{"krate":0,"index":409},{"krate":0,"index":437},{"krate":0,"index":461},{"krate":0,"index":485},{"krate":0,"index":513},{"krate":0,"index":537},{"krate":0,"index":567},{"krate":0,"index":591},{"krate":0,"index":638},{"krate":0,"index":659},{"krate":0,"index":668},{"krate":0,"index":677}],"decl_id":null,"docs":" De/Serialization for Rust's builtin and std types\n","sig":null,"attributes":[{"value":"/ De/Serialization for Rust's builtin and std types","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":95275,"byte_end":95328,"line_start":1,"line_end":1,"column_start":1,"column_end":54}}]},{"kind":"Mod","id":{"krate":0,"index":295},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":97641,"byte_end":97656,"line_start":76,"line_end":76,"column_start":9,"column_end":24},"name":"display_fromstr","qualname":"::rust::display_fromstr","value":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","parent":null,"children":[{"krate":0,"index":296},{"krate":0,"index":297},{"krate":0,"index":298},{"krate":0,"index":313}],"decl_id":null,"docs":" De/Serialize using [`Display`] and [`FromStr`] implementation","sig":null,"attributes":[{"value":"/ De/Serialize using [`Display`] and [`FromStr`] implementation","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":95713,"byte_end":95778,"line_start":18,"line_end":18,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":95779,"byte_end":95782,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ This allows to deserialize a string as a number.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":95783,"byte_end":95835,"line_start":20,"line_end":20,"column_start":1,"column_end":53}},{"value":"/ It can be very useful for serialization formats like JSON, which do not support integer","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":95836,"byte_end":95927,"line_start":21,"line_end":21,"column_start":1,"column_end":92}},{"value":"/ numbers and have to resort to strings to represent them.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":95928,"byte_end":95988,"line_start":22,"line_end":22,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":95989,"byte_end":95992,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ If you control the type you want to de/serialize, you can instead use the two derive macros, [`SerializeDisplay`] and [`DeserializeFromStr`].","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":95993,"byte_end":96138,"line_start":24,"line_end":24,"column_start":1,"column_end":146}},{"value":"/ They properly implement the traits [`Serialize`] and [`Deserialize`] such that user of the type no longer have to use the with-attribute.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":96139,"byte_end":96280,"line_start":25,"line_end":25,"column_start":1,"column_end":142}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":96281,"byte_end":96284,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ## Converting to `serde_as`","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":96285,"byte_end":96316,"line_start":27,"line_end":27,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":96317,"byte_end":96320,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ The same functionality can be more clearly expressed via [`DisplayFromStr`] and using the [`serde_as`] macro.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":96321,"byte_end":96434,"line_start":29,"line_end":29,"column_start":1,"column_end":114}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":96435,"byte_end":96438,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":96439,"byte_end":96450,"line_start":31,"line_end":31,"column_start":1,"column_end":12}},{"value":"/ # #[cfg(feature = \"macros\")] {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":96451,"byte_end":96485,"line_start":32,"line_end":32,"column_start":1,"column_end":35}},{"value":"/ # use serde_derive::Deserialize;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":96486,"byte_end":96522,"line_start":33,"line_end":33,"column_start":1,"column_end":37}},{"value":"/ # use serde_with::{serde_as, DisplayFromStr};","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":96523,"byte_end":96572,"line_start":34,"line_end":34,"column_start":1,"column_end":50}},{"value":"/ #","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":96573,"byte_end":96578,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/ #[serde_as]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":96579,"byte_end":96594,"line_start":36,"line_end":36,"column_start":1,"column_end":16}},{"value":"/ #[derive(Deserialize)]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":96595,"byte_end":96621,"line_start":37,"line_end":37,"column_start":1,"column_end":27}},{"value":"/ struct A {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":96622,"byte_end":96636,"line_start":38,"line_end":38,"column_start":1,"column_end":15}},{"value":"/     #[serde_as(as = \"DisplayFromStr\")]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":96637,"byte_end":96679,"line_start":39,"line_end":39,"column_start":1,"column_end":43}},{"value":"/     value: mime::Mime,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":96680,"byte_end":96706,"line_start":40,"line_end":40,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":96707,"byte_end":96712,"line_start":41,"line_end":41,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":96713,"byte_end":96720,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":96721,"byte_end":96728,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":96729,"byte_end":96732,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":96733,"byte_end":96747,"line_start":45,"line_end":45,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":96748,"byte_end":96751,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":96752,"byte_end":96763,"line_start":47,"line_end":47,"column_start":1,"column_end":12}},{"value":"/ # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":96764,"byte_end":96813,"line_start":48,"line_end":48,"column_start":1,"column_end":50}},{"value":"/ #","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":96814,"byte_end":96819,"line_start":49,"line_end":49,"column_start":1,"column_end":6}},{"value":"/ #[derive(Deserialize, Serialize)]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":96820,"byte_end":96857,"line_start":50,"line_end":50,"column_start":1,"column_end":38}},{"value":"/ struct A {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":96858,"byte_end":96872,"line_start":51,"line_end":51,"column_start":1,"column_end":15}},{"value":"/     #[serde(with = \"serde_with::rust::display_fromstr\")]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":96873,"byte_end":96933,"line_start":52,"line_end":52,"column_start":1,"column_end":61}},{"value":"/     mime: mime::Mime,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":96934,"byte_end":96959,"line_start":53,"line_end":53,"column_start":1,"column_end":26}},{"value":"/     #[serde(with = \"serde_with::rust::display_fromstr\")]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":96960,"byte_end":97020,"line_start":54,"line_end":54,"column_start":1,"column_end":61}},{"value":"/     number: u32,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":97021,"byte_end":97041,"line_start":55,"line_end":55,"column_start":1,"column_end":21}},{"value":"/ }","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":97042,"byte_end":97047,"line_start":56,"line_end":56,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":97048,"byte_end":97051,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ let v: A = serde_json::from_str(r#\"{","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":97052,"byte_end":97092,"line_start":58,"line_end":58,"column_start":1,"column_end":41}},{"value":"/     \"mime\": \"text/plain\",","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":97093,"byte_end":97122,"line_start":59,"line_end":59,"column_start":1,"column_end":30}},{"value":"/     \"number\": \"159\"","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":97123,"byte_end":97146,"line_start":60,"line_end":60,"column_start":1,"column_end":24}},{"value":"/ }\"#).unwrap();","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":97147,"byte_end":97165,"line_start":61,"line_end":61,"column_start":1,"column_end":19}},{"value":"/ assert_eq!(mime::TEXT_PLAIN, v.mime);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":97166,"byte_end":97207,"line_start":62,"line_end":62,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(159, v.number);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":97208,"byte_end":97238,"line_start":63,"line_end":63,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":97239,"byte_end":97242,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ let x = A {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":97243,"byte_end":97258,"line_start":65,"line_end":65,"column_start":1,"column_end":16}},{"value":"/     mime: mime::STAR_STAR,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":97259,"byte_end":97289,"line_start":66,"line_end":66,"column_start":1,"column_end":31}},{"value":"/     number: 777,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":97290,"byte_end":97310,"line_start":67,"line_end":67,"column_start":1,"column_end":21}},{"value":"/ };","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":97311,"byte_end":97317,"line_start":68,"line_end":68,"column_start":1,"column_end":7}},{"value":"/ assert_eq!(r#\"{\"mime\":\"*/*\",\"number\":\"777\"}\"#, serde_json::to_string(&x).unwrap());","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":97318,"byte_end":97405,"line_start":69,"line_end":69,"column_start":1,"column_end":88}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":97406,"byte_end":97413,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":97414,"byte_end":97417,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ [`DeserializeFromStr`]: serde_with_macros::DeserializeFromStr","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":97418,"byte_end":97483,"line_start":72,"line_end":72,"column_start":1,"column_end":66}},{"value":"/ [`DisplayFromStr`]: crate::DisplayFromStr","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":97484,"byte_end":97529,"line_start":73,"line_end":73,"column_start":1,"column_end":46}},{"value":"/ [`serde_as`]: crate::guide::serde_as","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":97530,"byte_end":97570,"line_start":74,"line_end":74,"column_start":1,"column_end":41}},{"value":"/ [`SerializeDisplay`]: serde_with_macros::SerializeDisplay","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":97571,"byte_end":97632,"line_start":75,"line_end":75,"column_start":1,"column_end":62}}]},{"kind":"Function","id":{"krate":0,"index":298},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":97756,"byte_end":97767,"line_start":81,"line_end":81,"column_start":12,"column_end":23},"name":"deserialize","qualname":"::rust::display_fromstr::deserialize","value":"pub fn deserialize<'de, D, T>(D) -> Result<T, D::Error> where D: Deserializer,\nT: FromStr, T::Err: Display","parent":null,"children":[],"decl_id":null,"docs":" Deserialize T using [`FromStr`]\n","sig":null,"attributes":[{"value":"/ Deserialize T using [`FromStr`]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":97709,"byte_end":97744,"line_start":80,"line_end":80,"column_start":5,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":313},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":98602,"byte_end":98611,"line_start":112,"line_end":112,"column_start":12,"column_end":21},"name":"serialize","qualname":"::rust::display_fromstr::serialize","value":"pub fn serialize<T, S>(&T, S) -> Result<S::Ok, S::Error> where T: Display,\nS: Serializer","parent":null,"children":[],"decl_id":null,"docs":" Serialize T using [Display]\n","sig":null,"attributes":[{"value":"/ Serialize T using [Display]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":98559,"byte_end":98590,"line_start":111,"line_end":111,"column_start":5,"column_end":36}}]},{"kind":"Mod","id":{"krate":0,"index":316},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":101024,"byte_end":101043,"line_start":187,"line_end":187,"column_start":9,"column_end":28},"name":"seq_display_fromstr","qualname":"::rust::seq_display_fromstr","value":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","parent":null,"children":[{"krate":0,"index":317},{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":320},{"krate":0,"index":321},{"krate":0,"index":322},{"krate":0,"index":323},{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":329},{"krate":0,"index":330},{"krate":0,"index":331},{"krate":0,"index":332},{"krate":0,"index":333},{"krate":0,"index":6283},{"krate":0,"index":334},{"krate":0,"index":335},{"krate":0,"index":351}],"decl_id":null,"docs":" De/Serialize sequences using [`FromIterator`] and [`IntoIterator`] implementation for it and [`Display`] and [`FromStr`] implementation for each element","sig":null,"attributes":[{"value":"/ De/Serialize sequences using [`FromIterator`] and [`IntoIterator`] implementation for it and [`Display`] and [`FromStr`] implementation for each element","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":98793,"byte_end":98949,"line_start":121,"line_end":121,"column_start":1,"column_end":157}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":98950,"byte_end":98953,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ This allows to serialize and deserialize collections with elements which can be represented as strings.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":98954,"byte_end":99061,"line_start":123,"line_end":123,"column_start":1,"column_end":108}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":99062,"byte_end":99065,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ ## Converting to `serde_as`","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":99066,"byte_end":99097,"line_start":125,"line_end":125,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":99098,"byte_end":99101,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ The same functionality can be more clearly expressed via [`DisplayFromStr`] and using the [`serde_as`] macro.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":99102,"byte_end":99215,"line_start":127,"line_end":127,"column_start":1,"column_end":114}},{"value":"/ Instead of","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":99216,"byte_end":99230,"line_start":128,"line_end":128,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":99231,"byte_end":99234,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ ```rust,ignore","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":99235,"byte_end":99253,"line_start":130,"line_end":130,"column_start":1,"column_end":19}},{"value":"/ #[serde(with = \"serde_with::rust::seq_display_fromstr\")]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":99254,"byte_end":99314,"line_start":131,"line_end":131,"column_start":1,"column_end":61}},{"value":"/ addresses: BTreeSet<Ipv4Addr>,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":99315,"byte_end":99349,"line_start":132,"line_end":132,"column_start":1,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":99350,"byte_end":99357,"line_start":133,"line_end":133,"column_start":1,"column_end":8}},{"value":"/ you can write:","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":99358,"byte_end":99376,"line_start":134,"line_end":134,"column_start":1,"column_end":19}},{"value":"/ ```rust,ignore","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":99377,"byte_end":99395,"line_start":135,"line_end":135,"column_start":1,"column_end":19}},{"value":"/ #[serde_as(as = \"BTreeSet<DisplayFromStr>\")]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":99396,"byte_end":99444,"line_start":136,"line_end":136,"column_start":1,"column_end":49}},{"value":"/ addresses: BTreeSet<Ipv4Addr>,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":99445,"byte_end":99479,"line_start":137,"line_end":137,"column_start":1,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":99480,"byte_end":99487,"line_start":138,"line_end":138,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":99488,"byte_end":99491,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ This works for any container type, so also for `Vec`:","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":99492,"byte_end":99549,"line_start":140,"line_end":140,"column_start":1,"column_end":58}},{"value":"/ ```rust,ignore","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":99550,"byte_end":99568,"line_start":141,"line_end":141,"column_start":1,"column_end":19}},{"value":"/ #[serde_as(as = \"Vec<DisplayFromStr>\")]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":99569,"byte_end":99612,"line_start":142,"line_end":142,"column_start":1,"column_end":44}},{"value":"/ bs: Vec<bool>,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":99613,"byte_end":99631,"line_start":143,"line_end":143,"column_start":1,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":99632,"byte_end":99639,"line_start":144,"line_end":144,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":99640,"byte_end":99643,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":99644,"byte_end":99658,"line_start":146,"line_end":146,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":99659,"byte_end":99662,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":99663,"byte_end":99670,"line_start":148,"line_end":148,"column_start":1,"column_end":8}},{"value":"/ # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":99671,"byte_end":99720,"line_start":149,"line_end":149,"column_start":1,"column_end":50}},{"value":"/ #","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":99721,"byte_end":99726,"line_start":150,"line_end":150,"column_start":1,"column_end":6}},{"value":"/ use std::collections::BTreeSet;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":99727,"byte_end":99762,"line_start":151,"line_end":151,"column_start":1,"column_end":36}},{"value":"/ use std::net::Ipv4Addr;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":99763,"byte_end":99790,"line_start":152,"line_end":152,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":99791,"byte_end":99794,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ #[derive(Deserialize, Serialize)]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":99795,"byte_end":99832,"line_start":154,"line_end":154,"column_start":1,"column_end":38}},{"value":"/ struct A {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":99833,"byte_end":99847,"line_start":155,"line_end":155,"column_start":1,"column_end":15}},{"value":"/     #[serde(with = \"serde_with::rust::seq_display_fromstr\")]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":99848,"byte_end":99912,"line_start":156,"line_end":156,"column_start":1,"column_end":65}},{"value":"/     addresses: BTreeSet<Ipv4Addr>,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":99913,"byte_end":99951,"line_start":157,"line_end":157,"column_start":1,"column_end":39}},{"value":"/     #[serde(with = \"serde_with::rust::seq_display_fromstr\")]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":99952,"byte_end":100016,"line_start":158,"line_end":158,"column_start":1,"column_end":65}},{"value":"/     bs: Vec<bool>,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":100017,"byte_end":100039,"line_start":159,"line_end":159,"column_start":1,"column_end":23}},{"value":"/ }","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":100040,"byte_end":100045,"line_start":160,"line_end":160,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":100046,"byte_end":100049,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ let v: A = serde_json::from_str(r#\"{","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":100050,"byte_end":100090,"line_start":162,"line_end":162,"column_start":1,"column_end":41}},{"value":"/     \"addresses\": [\"192.168.2.1\", \"192.168.2.2\", \"192.168.1.1\", \"192.168.2.2\"],","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":100091,"byte_end":100173,"line_start":163,"line_end":163,"column_start":1,"column_end":83}},{"value":"/     \"bs\": [\"true\", \"false\"]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":100174,"byte_end":100205,"line_start":164,"line_end":164,"column_start":1,"column_end":32}},{"value":"/ }\"#).unwrap();","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":100206,"byte_end":100224,"line_start":165,"line_end":165,"column_start":1,"column_end":19}},{"value":"/ assert_eq!(v.addresses.len(), 3);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":100225,"byte_end":100262,"line_start":166,"line_end":166,"column_start":1,"column_end":38}},{"value":"/ assert!(v.addresses.contains(&Ipv4Addr::new(192, 168, 2, 1)));","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":100263,"byte_end":100329,"line_start":167,"line_end":167,"column_start":1,"column_end":67}},{"value":"/ assert!(v.addresses.contains(&Ipv4Addr::new(192, 168, 2, 2)));","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":100330,"byte_end":100396,"line_start":168,"line_end":168,"column_start":1,"column_end":67}},{"value":"/ assert!(!v.addresses.contains(&Ipv4Addr::new(192, 168, 1, 2)));","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":100397,"byte_end":100464,"line_start":169,"line_end":169,"column_start":1,"column_end":68}},{"value":"/ assert_eq!(v.bs.len(), 2);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":100465,"byte_end":100495,"line_start":170,"line_end":170,"column_start":1,"column_end":31}},{"value":"/ assert!(v.bs[0]);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":100496,"byte_end":100517,"line_start":171,"line_end":171,"column_start":1,"column_end":22}},{"value":"/ assert!(!v.bs[1]);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":100518,"byte_end":100540,"line_start":172,"line_end":172,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":100541,"byte_end":100544,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ let x = A {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":100545,"byte_end":100560,"line_start":174,"line_end":174,"column_start":1,"column_end":16}},{"value":"/     addresses: vec![","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":100561,"byte_end":100585,"line_start":175,"line_end":175,"column_start":1,"column_end":25}},{"value":"/         Ipv4Addr::new(127, 53, 0, 1),","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":100586,"byte_end":100627,"line_start":176,"line_end":176,"column_start":1,"column_end":42}},{"value":"/         Ipv4Addr::new(127, 53, 1, 1),","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":100628,"byte_end":100669,"line_start":177,"line_end":177,"column_start":1,"column_end":42}},{"value":"/         Ipv4Addr::new(127, 53, 0, 2)","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":100670,"byte_end":100710,"line_start":178,"line_end":178,"column_start":1,"column_end":41}},{"value":"/     ].into_iter().collect(),","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":100711,"byte_end":100743,"line_start":179,"line_end":179,"column_start":1,"column_end":33}},{"value":"/     bs: vec![false, true],","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":100744,"byte_end":100774,"line_start":180,"line_end":180,"column_start":1,"column_end":31}},{"value":"/ };","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":100775,"byte_end":100781,"line_start":181,"line_end":181,"column_start":1,"column_end":7}},{"value":"/ assert_eq!(r#\"{\"addresses\":[\"127.53.0.1\",\"127.53.0.2\",\"127.53.1.1\"],\"bs\":[\"false\",\"true\"]}\"#, serde_json::to_string(&x).unwrap());","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":100782,"byte_end":100916,"line_start":182,"line_end":182,"column_start":1,"column_end":135}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":100917,"byte_end":100924,"line_start":183,"line_end":183,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":100925,"byte_end":100928,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ [`DisplayFromStr`]: crate::DisplayFromStr","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":100929,"byte_end":100974,"line_start":185,"line_end":185,"column_start":1,"column_end":46}},{"value":"/ [`serde_as`]: crate::guide::serde_as","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":100975,"byte_end":101015,"line_start":186,"line_end":186,"column_start":1,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":335},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":101410,"byte_end":101421,"line_start":200,"line_end":200,"column_start":12,"column_end":23},"name":"deserialize","qualname":"::rust::seq_display_fromstr::deserialize","value":"pub fn deserialize<'de, D, T, I>(D) -> Result<T, D::Error> where\nD: Deserializer, T: FromIterator<I> + Sized, I: FromStr, I::Err: Display","parent":null,"children":[],"decl_id":null,"docs":" Deserialize collection T using [FromIterator] and [FromStr] for each element\n","sig":null,"attributes":[{"value":"/ Deserialize collection T using [FromIterator] and [FromStr] for each element","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":101318,"byte_end":101398,"line_start":199,"line_end":199,"column_start":5,"column_end":85}}]},{"kind":"Function","id":{"krate":0,"index":351},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":102721,"byte_end":102730,"line_start":243,"line_end":243,"column_start":12,"column_end":21},"name":"serialize","qualname":"::rust::seq_display_fromstr::serialize","value":"pub fn serialize<S, T, I>(&T, S) -> Result<S::Ok, S::Error> where\nS: Serializer, for<'a> &'a T: IntoIterator<Item = &'a I>, I: Display","parent":null,"children":[],"decl_id":null,"docs":" Serialize collection T using [IntoIterator] and [Display] for each element\n","sig":null,"attributes":[{"value":"/ Serialize collection T using [IntoIterator] and [Display] for each element","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":102631,"byte_end":102709,"line_start":242,"line_end":242,"column_start":5,"column_end":83}}]},{"kind":"Struct","id":{"krate":0,"index":3732},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":105215,"byte_end":105234,"line_start":318,"line_end":318,"column_start":12,"column_end":31},"name":"StringWithSeparator","qualname":"::rust::StringWithSeparator","value":"","parent":null,"children":[],"decl_id":null,"docs":" De/Serialize a delimited collection using [`Display`] and [`FromStr`] implementation","sig":null,"attributes":[{"value":"/ De/Serialize a delimited collection using [`Display`] and [`FromStr`] implementation","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":103153,"byte_end":103241,"line_start":259,"line_end":259,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":103242,"byte_end":103245,"line_start":260,"line_end":260,"column_start":1,"column_end":4}},{"value":"/ You can define an arbitrary separator, by specifying a type which implements [`Separator`].","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":103246,"byte_end":103341,"line_start":261,"line_end":261,"column_start":1,"column_end":96}},{"value":"/ Some common ones, like space and comma are already predefined and you can find them [here][Separator].","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":103342,"byte_end":103448,"line_start":262,"line_end":262,"column_start":1,"column_end":107}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":103449,"byte_end":103452,"line_start":263,"line_end":263,"column_start":1,"column_end":4}},{"value":"/ An empty string deserializes as an empty collection.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":103453,"byte_end":103509,"line_start":264,"line_end":264,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":103510,"byte_end":103513,"line_start":265,"line_end":265,"column_start":1,"column_end":4}},{"value":"/ ## Converting to `serde_as`","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":103514,"byte_end":103545,"line_start":266,"line_end":266,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":103546,"byte_end":103549,"line_start":267,"line_end":267,"column_start":1,"column_end":4}},{"value":"/ The same functionality can also be expressed using the [`serde_as`] macro.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":103550,"byte_end":103628,"line_start":268,"line_end":268,"column_start":1,"column_end":79}},{"value":"/ The usage is slightly different.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":103629,"byte_end":103665,"line_start":269,"line_end":269,"column_start":1,"column_end":37}},{"value":"/ `StringWithSeparator` takes a second type, which needs to implement [`Display`]+[`FromStr`] and constitutes the inner type of the collection.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":103666,"byte_end":103811,"line_start":270,"line_end":270,"column_start":1,"column_end":146}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":103812,"byte_end":103815,"line_start":271,"line_end":271,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":103816,"byte_end":103827,"line_start":272,"line_end":272,"column_start":1,"column_end":12}},{"value":"/ # #[cfg(feature = \"macros\")] {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":103828,"byte_end":103862,"line_start":273,"line_end":273,"column_start":1,"column_end":35}},{"value":"/ # use serde_derive::Deserialize;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":103863,"byte_end":103899,"line_start":274,"line_end":274,"column_start":1,"column_end":37}},{"value":"/ # use serde_with::{serde_as, SpaceSeparator, StringWithSeparator};","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":103900,"byte_end":103970,"line_start":275,"line_end":275,"column_start":1,"column_end":71}},{"value":"/ #","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":103971,"byte_end":103976,"line_start":276,"line_end":276,"column_start":1,"column_end":6}},{"value":"/ #[serde_as]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":103977,"byte_end":103992,"line_start":277,"line_end":277,"column_start":1,"column_end":16}},{"value":"/ #[derive(Deserialize)]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":103993,"byte_end":104019,"line_start":278,"line_end":278,"column_start":1,"column_end":27}},{"value":"/ struct A {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":104020,"byte_end":104034,"line_start":279,"line_end":279,"column_start":1,"column_end":15}},{"value":"/     #[serde_as(as = \"StringWithSeparator::<SpaceSeparator, String>\")]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":104035,"byte_end":104108,"line_start":280,"line_end":280,"column_start":1,"column_end":74}},{"value":"/     tags: Vec<String>,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":104109,"byte_end":104135,"line_start":281,"line_end":281,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":104136,"byte_end":104141,"line_start":282,"line_end":282,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":104142,"byte_end":104149,"line_start":283,"line_end":283,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":104150,"byte_end":104157,"line_start":284,"line_end":284,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":104158,"byte_end":104161,"line_start":285,"line_end":285,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":104162,"byte_end":104176,"line_start":286,"line_end":286,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":104177,"byte_end":104180,"line_start":287,"line_end":287,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":104181,"byte_end":104188,"line_start":288,"line_end":288,"column_start":1,"column_end":8}},{"value":"/ # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":104189,"byte_end":104238,"line_start":289,"line_end":289,"column_start":1,"column_end":50}},{"value":"/ #","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":104239,"byte_end":104244,"line_start":290,"line_end":290,"column_start":1,"column_end":6}},{"value":"/ use serde_with::{CommaSeparator, SpaceSeparator};","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":104245,"byte_end":104298,"line_start":291,"line_end":291,"column_start":1,"column_end":54}},{"value":"/ use std::collections::BTreeSet;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":104299,"byte_end":104334,"line_start":292,"line_end":292,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":104335,"byte_end":104338,"line_start":293,"line_end":293,"column_start":1,"column_end":4}},{"value":"/ #[derive(Deserialize, Serialize)]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":104339,"byte_end":104376,"line_start":294,"line_end":294,"column_start":1,"column_end":38}},{"value":"/ struct A {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":104377,"byte_end":104391,"line_start":295,"line_end":295,"column_start":1,"column_end":15}},{"value":"/     #[serde(with = \"serde_with::rust::StringWithSeparator::<SpaceSeparator>\")]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":104392,"byte_end":104474,"line_start":296,"line_end":296,"column_start":1,"column_end":83}},{"value":"/     tags: Vec<String>,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":104475,"byte_end":104501,"line_start":297,"line_end":297,"column_start":1,"column_end":27}},{"value":"/     #[serde(with = \"serde_with::rust::StringWithSeparator::<CommaSeparator>\")]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":104502,"byte_end":104584,"line_start":298,"line_end":298,"column_start":1,"column_end":83}},{"value":"/     more_tags: BTreeSet<String>,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":104585,"byte_end":104621,"line_start":299,"line_end":299,"column_start":1,"column_end":37}},{"value":"/ }","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":104622,"byte_end":104627,"line_start":300,"line_end":300,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":104628,"byte_end":104631,"line_start":301,"line_end":301,"column_start":1,"column_end":4}},{"value":"/ let v: A = serde_json::from_str(r##\"{","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":104632,"byte_end":104673,"line_start":302,"line_end":302,"column_start":1,"column_end":42}},{"value":"/     \"tags\": \"#hello #world\",","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":104674,"byte_end":104706,"line_start":303,"line_end":303,"column_start":1,"column_end":33}},{"value":"/     \"more_tags\": \"foo,bar,bar\"","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":104707,"byte_end":104741,"line_start":304,"line_end":304,"column_start":1,"column_end":35}},{"value":"/ }\"##).unwrap();","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":104742,"byte_end":104761,"line_start":305,"line_end":305,"column_start":1,"column_end":20}},{"value":"/ assert_eq!(vec![\"#hello\", \"#world\"], v.tags);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":104762,"byte_end":104811,"line_start":306,"line_end":306,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(2, v.more_tags.len());","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":104812,"byte_end":104849,"line_start":307,"line_end":307,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":104850,"byte_end":104853,"line_start":308,"line_end":308,"column_start":1,"column_end":4}},{"value":"/ let x = A {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":104854,"byte_end":104869,"line_start":309,"line_end":309,"column_start":1,"column_end":16}},{"value":"/     tags: vec![\"1\".to_string(), \"2\".to_string(), \"3\".to_string()],","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":104870,"byte_end":104940,"line_start":310,"line_end":310,"column_start":1,"column_end":71}},{"value":"/     more_tags: BTreeSet::new(),","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":104941,"byte_end":104976,"line_start":311,"line_end":311,"column_start":1,"column_end":36}},{"value":"/ };","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":104977,"byte_end":104983,"line_start":312,"line_end":312,"column_start":1,"column_end":7}},{"value":"/ assert_eq!(r#\"{\"tags\":\"1 2 3\",\"more_tags\":\"\"}\"#, serde_json::to_string(&x).unwrap());","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":104984,"byte_end":105073,"line_start":313,"line_end":313,"column_start":1,"column_end":90}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":105074,"byte_end":105081,"line_start":314,"line_end":314,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":105082,"byte_end":105085,"line_start":315,"line_end":315,"column_start":1,"column_end":4}},{"value":"/ [`serde_as`]: crate::guide::serde_as","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":105086,"byte_end":105126,"line_start":316,"line_end":316,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":358},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":105412,"byte_end":105421,"line_start":325,"line_end":325,"column_start":12,"column_end":21},"name":"serialize","qualname":"<StringWithSeparator<Sep>>::serialize","value":"pub fn serialize<S, T, V>(T, S) -> Result<S::Ok, S::Error> where\nS: Serializer, T: IntoIterator<Item = V>, V: Display","parent":null,"children":[],"decl_id":null,"docs":" Serialize collection into a string with separator symbol\n","sig":null,"attributes":[{"value":"/ Serialize collection into a string with separator symbol","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":105340,"byte_end":105400,"line_start":324,"line_end":324,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":362},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":106021,"byte_end":106032,"line_start":345,"line_end":345,"column_start":12,"column_end":23},"name":"deserialize","qualname":"<StringWithSeparator<Sep>>::deserialize","value":"pub fn deserialize<'de, D, T, V>(D) -> Result<T, D::Error> where\nD: Deserializer, T: FromIterator<V>, V: FromStr, V::Err: Display","parent":null,"children":[],"decl_id":null,"docs":" Deserialize a collection from a string with separator symbol\n","sig":null,"attributes":[{"value":"/ Deserialize a collection from a string with separator symbol","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":105945,"byte_end":106009,"line_start":344,"line_end":344,"column_start":5,"column_end":69}}]},{"kind":"Mod","id":{"krate":0,"index":367},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":108236,"byte_end":108249,"line_start":406,"line_end":406,"column_start":9,"column_end":22},"name":"double_option","qualname":"::rust::double_option","value":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","parent":null,"children":[{"krate":0,"index":368},{"krate":0,"index":369},{"krate":0,"index":373}],"decl_id":null,"docs":" Makes a distinction between a missing, unset, or existing value","sig":null,"attributes":[{"value":"/ Makes a distinction between a missing, unset, or existing value","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":106524,"byte_end":106591,"line_start":364,"line_end":364,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":106592,"byte_end":106595,"line_start":365,"line_end":365,"column_start":1,"column_end":4}},{"value":"/ Some serialization formats make a distinction between missing fields, fields with a `null`","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":106596,"byte_end":106690,"line_start":366,"line_end":366,"column_start":1,"column_end":95}},{"value":"/ value, and existing values. One such format is JSON. By default it is not easily possible to","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":106691,"byte_end":106787,"line_start":367,"line_end":367,"column_start":1,"column_end":97}},{"value":"/ differentiate between a missing value and a field which is `null`, as they deserialize to the","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":106788,"byte_end":106885,"line_start":368,"line_end":368,"column_start":1,"column_end":98}},{"value":"/ same value. This helper changes it, by using an `Option<Option<T>>` to deserialize into.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":106886,"byte_end":106978,"line_start":369,"line_end":369,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":106979,"byte_end":106982,"line_start":370,"line_end":370,"column_start":1,"column_end":4}},{"value":"/ * `None`: Represents a missing value.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":106983,"byte_end":107024,"line_start":371,"line_end":371,"column_start":1,"column_end":42}},{"value":"/ * `Some(None)`: Represents a `null` value.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":107025,"byte_end":107071,"line_start":372,"line_end":372,"column_start":1,"column_end":47}},{"value":"/ * `Some(Some(value))`: Represents an existing value.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":107072,"byte_end":107128,"line_start":373,"line_end":373,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":107129,"byte_end":107132,"line_start":374,"line_end":374,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":107133,"byte_end":107147,"line_start":375,"line_end":375,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":107148,"byte_end":107151,"line_start":376,"line_end":376,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":107152,"byte_end":107163,"line_start":377,"line_end":377,"column_start":1,"column_end":12}},{"value":"/ # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":107164,"byte_end":107213,"line_start":378,"line_end":378,"column_start":1,"column_end":50}},{"value":"/ #","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":107214,"byte_end":107219,"line_start":379,"line_end":379,"column_start":1,"column_end":6}},{"value":"/ # #[derive(Debug, PartialEq, Eq)]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":107220,"byte_end":107257,"line_start":380,"line_end":380,"column_start":1,"column_end":38}},{"value":"/ #[derive(Deserialize, Serialize)]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":107258,"byte_end":107295,"line_start":381,"line_end":381,"column_start":1,"column_end":38}},{"value":"/ struct Doc {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":107296,"byte_end":107312,"line_start":382,"line_end":382,"column_start":1,"column_end":17}},{"value":"/     #[serde(","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":107313,"byte_end":107329,"line_start":383,"line_end":383,"column_start":1,"column_end":17}},{"value":"/         default,                                    // <- important for deserialization","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":107330,"byte_end":107421,"line_start":384,"line_end":384,"column_start":1,"column_end":92}},{"value":"/         skip_serializing_if = \"Option::is_none\",    // <- important for serialization","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":107422,"byte_end":107511,"line_start":385,"line_end":385,"column_start":1,"column_end":90}},{"value":"/         with = \"::serde_with::rust::double_option\",","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":107512,"byte_end":107567,"line_start":386,"line_end":386,"column_start":1,"column_end":56}},{"value":"/     )]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":107568,"byte_end":107578,"line_start":387,"line_end":387,"column_start":1,"column_end":11}},{"value":"/     a: Option<Option<u8>>,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":107579,"byte_end":107609,"line_start":388,"line_end":388,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":107610,"byte_end":107615,"line_start":389,"line_end":389,"column_start":1,"column_end":6}},{"value":"/ // Missing Value","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":107616,"byte_end":107636,"line_start":390,"line_end":390,"column_start":1,"column_end":21}},{"value":"/ let s = r#\"{}\"#;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":107637,"byte_end":107657,"line_start":391,"line_end":391,"column_start":1,"column_end":21}},{"value":"/ assert_eq!(Doc {a: None}, serde_json::from_str(s).unwrap());","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":107658,"byte_end":107722,"line_start":392,"line_end":392,"column_start":1,"column_end":65}},{"value":"/ assert_eq!(s, serde_json::to_string(&Doc {a: None}).unwrap());","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":107723,"byte_end":107789,"line_start":393,"line_end":393,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":107790,"byte_end":107793,"line_start":394,"line_end":394,"column_start":1,"column_end":4}},{"value":"/ // Unset Value","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":107794,"byte_end":107812,"line_start":395,"line_end":395,"column_start":1,"column_end":19}},{"value":"/ let s = r#\"{\"a\":null}\"#;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":107813,"byte_end":107841,"line_start":396,"line_end":396,"column_start":1,"column_end":29}},{"value":"/ assert_eq!(Doc {a: Some(None)}, serde_json::from_str(s).unwrap());","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":107842,"byte_end":107912,"line_start":397,"line_end":397,"column_start":1,"column_end":71}},{"value":"/ assert_eq!(s, serde_json::to_string(&Doc {a: Some(None)}).unwrap());","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":107913,"byte_end":107985,"line_start":398,"line_end":398,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":107986,"byte_end":107989,"line_start":399,"line_end":399,"column_start":1,"column_end":4}},{"value":"/ // Existing Value","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":107990,"byte_end":108011,"line_start":400,"line_end":400,"column_start":1,"column_end":22}},{"value":"/ let s = r#\"{\"a\":5}\"#;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":108012,"byte_end":108037,"line_start":401,"line_end":401,"column_start":1,"column_end":26}},{"value":"/ assert_eq!(Doc {a: Some(Some(5))}, serde_json::from_str(s).unwrap());","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":108038,"byte_end":108111,"line_start":402,"line_end":402,"column_start":1,"column_end":74}},{"value":"/ assert_eq!(s, serde_json::to_string(&Doc {a: Some(Some(5))}).unwrap());","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":108112,"byte_end":108187,"line_start":403,"line_end":403,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":108188,"byte_end":108195,"line_start":404,"line_end":404,"column_start":1,"column_end":8}},{"value":"allow(clippy :: option_option)","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":108196,"byte_end":108227,"line_start":405,"line_end":405,"column_start":1,"column_end":32}}]},{"kind":"Function","id":{"krate":0,"index":369},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":108342,"byte_end":108353,"line_start":410,"line_end":410,"column_start":12,"column_end":23},"name":"deserialize","qualname":"::rust::double_option::deserialize","value":"pub fn deserialize<'de, T, D>(D) -> Result<Option<Option<T>>, D::Error> where\nT: Deserialize, D: Deserializer","parent":null,"children":[],"decl_id":null,"docs":" Deserialize potentially non-existing optional value\n","sig":null,"attributes":[{"value":"/ Deserialize potentially non-existing optional value","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":108275,"byte_end":108330,"line_start":409,"line_end":409,"column_start":5,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":373},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":108604,"byte_end":108613,"line_start":419,"line_end":419,"column_start":12,"column_end":21},"name":"serialize","qualname":"::rust::double_option::serialize","value":"pub fn serialize<S, T>(&Option<Option<T>>, S) -> Result<S::Ok, S::Error> where\nS: Serializer, T: Serialize","parent":null,"children":[],"decl_id":null,"docs":" Serialize optional value\n","sig":null,"attributes":[{"value":"/ Serialize optional value","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":108564,"byte_end":108592,"line_start":418,"line_end":418,"column_start":5,"column_end":33}}]},{"kind":"Mod","id":{"krate":0,"index":376},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":111078,"byte_end":111092,"line_start":491,"line_end":491,"column_start":9,"column_end":23},"name":"unwrap_or_skip","qualname":"::rust::unwrap_or_skip","value":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","parent":null,"children":[{"krate":0,"index":377},{"krate":0,"index":378},{"krate":0,"index":382}],"decl_id":null,"docs":" Serialize inner value if [`Some`]`(T)`. If [`None`], serialize the unit struct `()`.","sig":null,"attributes":[{"value":"/ Serialize inner value if [`Some`]`(T)`. If [`None`], serialize the unit struct `()`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":108957,"byte_end":109045,"line_start":432,"line_end":432,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":109046,"byte_end":109049,"line_start":433,"line_end":433,"column_start":1,"column_end":4}},{"value":"/ When used in conjunction with `skip_serializing_if = \"Option::is_none\"` and","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":109050,"byte_end":109129,"line_start":434,"line_end":434,"column_start":1,"column_end":80}},{"value":"/ `default`, you can build an optional value by skipping if it is [`None`], or serializing its","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":109130,"byte_end":109226,"line_start":435,"line_end":435,"column_start":1,"column_end":97}},{"value":"/ inner value if [`Some`]`(T)`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":109227,"byte_end":109260,"line_start":436,"line_end":436,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":109261,"byte_end":109264,"line_start":437,"line_end":437,"column_start":1,"column_end":4}},{"value":"/ Not all serialization formats easily support optional values.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":109265,"byte_end":109330,"line_start":438,"line_end":438,"column_start":1,"column_end":66}},{"value":"/ While JSON uses the [`Option`] type to represent optional values and only serializes the inner","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":109331,"byte_end":109429,"line_start":439,"line_end":439,"column_start":1,"column_end":99}},{"value":"/ part of the [`Some`]`()`, other serialization formats, such as [RON][], choose to serialize the","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":109430,"byte_end":109529,"line_start":440,"line_end":440,"column_start":1,"column_end":100}},{"value":"/ [`Some`] around a value.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":109530,"byte_end":109558,"line_start":441,"line_end":441,"column_start":1,"column_end":29}},{"value":"/ This helper helps building a truly optional value for such serializers.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":109559,"byte_end":109634,"line_start":442,"line_end":442,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":109635,"byte_end":109638,"line_start":443,"line_end":443,"column_start":1,"column_end":4}},{"value":"/ [RON]: https://github.com/ron-rs/ron","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":109639,"byte_end":109679,"line_start":444,"line_end":444,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":109680,"byte_end":109683,"line_start":445,"line_end":445,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":109684,"byte_end":109697,"line_start":446,"line_end":446,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":109698,"byte_end":109701,"line_start":447,"line_end":447,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":109702,"byte_end":109713,"line_start":448,"line_end":448,"column_start":1,"column_end":12}},{"value":"/ # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":109714,"byte_end":109763,"line_start":449,"line_end":449,"column_start":1,"column_end":50}},{"value":"/ #","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":109764,"byte_end":109769,"line_start":450,"line_end":450,"column_start":1,"column_end":6}},{"value":"/ # #[derive(Debug, Eq, PartialEq)]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":109770,"byte_end":109807,"line_start":451,"line_end":451,"column_start":1,"column_end":38}},{"value":"/ #[derive(Deserialize, Serialize)]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":109808,"byte_end":109845,"line_start":452,"line_end":452,"column_start":1,"column_end":38}},{"value":"/ struct Doc {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":109846,"byte_end":109862,"line_start":453,"line_end":453,"column_start":1,"column_end":17}},{"value":"/     mandatory: usize,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":109863,"byte_end":109888,"line_start":454,"line_end":454,"column_start":1,"column_end":26}},{"value":"/     #[serde(","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":109889,"byte_end":109905,"line_start":455,"line_end":455,"column_start":1,"column_end":17}},{"value":"/         default,                                    // <- important for deserialization","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":109906,"byte_end":109997,"line_start":456,"line_end":456,"column_start":1,"column_end":92}},{"value":"/         skip_serializing_if = \"Option::is_none\",    // <- important for serialization","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":109998,"byte_end":110087,"line_start":457,"line_end":457,"column_start":1,"column_end":90}},{"value":"/         with = \"::serde_with::rust::unwrap_or_skip\",","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":110088,"byte_end":110144,"line_start":458,"line_end":458,"column_start":1,"column_end":57}},{"value":"/     )]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":110145,"byte_end":110155,"line_start":459,"line_end":459,"column_start":1,"column_end":11}},{"value":"/     optional: Option<usize>,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":110156,"byte_end":110188,"line_start":460,"line_end":460,"column_start":1,"column_end":33}},{"value":"/ }","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":110189,"byte_end":110194,"line_start":461,"line_end":461,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":110195,"byte_end":110198,"line_start":462,"line_end":462,"column_start":1,"column_end":4}},{"value":"/ // Transparently add/remove Some() wrapper","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":110199,"byte_end":110245,"line_start":463,"line_end":463,"column_start":1,"column_end":47}},{"value":"/ # let pretty_config = ron::ser::PrettyConfig::new()","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":110246,"byte_end":110301,"line_start":464,"line_end":464,"column_start":1,"column_end":56}},{"value":"/ #     .with_new_line(\"\\n\".into());","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":110302,"byte_end":110340,"line_start":465,"line_end":465,"column_start":1,"column_end":39}},{"value":"/ let s = r#\"(","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":110341,"byte_end":110357,"line_start":466,"line_end":466,"column_start":1,"column_end":17}},{"value":"/     mandatory: 1,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":110358,"byte_end":110379,"line_start":467,"line_end":467,"column_start":1,"column_end":22}},{"value":"/     optional: 2,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":110380,"byte_end":110400,"line_start":468,"line_end":468,"column_start":1,"column_end":21}},{"value":"/ )\"#;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":110401,"byte_end":110409,"line_start":469,"line_end":469,"column_start":1,"column_end":9}},{"value":"/ let v = Doc {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":110410,"byte_end":110427,"line_start":470,"line_end":470,"column_start":1,"column_end":18}},{"value":"/     mandatory: 1,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":110428,"byte_end":110449,"line_start":471,"line_end":471,"column_start":1,"column_end":22}},{"value":"/     optional: Some(2),","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":110450,"byte_end":110476,"line_start":472,"line_end":472,"column_start":1,"column_end":27}},{"value":"/ };","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":110477,"byte_end":110483,"line_start":473,"line_end":473,"column_start":1,"column_end":7}},{"value":"/ assert_eq!(v, ron::de::from_str(s).unwrap());","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":110484,"byte_end":110533,"line_start":474,"line_end":474,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(s, ron::ser::to_string_pretty(&v, pretty_config).unwrap());","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":110534,"byte_end":110608,"line_start":475,"line_end":475,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":110609,"byte_end":110612,"line_start":476,"line_end":476,"column_start":1,"column_end":4}},{"value":"/ // Missing values are deserialized as `None`","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":110613,"byte_end":110661,"line_start":477,"line_end":477,"column_start":1,"column_end":49}},{"value":"/ // while `None` values are skipped during serialization.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":110662,"byte_end":110722,"line_start":478,"line_end":478,"column_start":1,"column_end":61}},{"value":"/ # let pretty_config = ron::ser::PrettyConfig::new()","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":110723,"byte_end":110778,"line_start":479,"line_end":479,"column_start":1,"column_end":56}},{"value":"/ #     .with_new_line(\"\\n\".into());","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":110779,"byte_end":110817,"line_start":480,"line_end":480,"column_start":1,"column_end":39}},{"value":"/ let s = r#\"(","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":110818,"byte_end":110834,"line_start":481,"line_end":481,"column_start":1,"column_end":17}},{"value":"/     mandatory: 1,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":110835,"byte_end":110856,"line_start":482,"line_end":482,"column_start":1,"column_end":22}},{"value":"/ )\"#;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":110857,"byte_end":110865,"line_start":483,"line_end":483,"column_start":1,"column_end":9}},{"value":"/ let v = Doc {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":110866,"byte_end":110883,"line_start":484,"line_end":484,"column_start":1,"column_end":18}},{"value":"/     mandatory: 1,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":110884,"byte_end":110905,"line_start":485,"line_end":485,"column_start":1,"column_end":22}},{"value":"/     optional: None,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":110906,"byte_end":110929,"line_start":486,"line_end":486,"column_start":1,"column_end":24}},{"value":"/ };","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":110930,"byte_end":110936,"line_start":487,"line_end":487,"column_start":1,"column_end":7}},{"value":"/ assert_eq!(v, ron::de::from_str(s).unwrap());","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":110937,"byte_end":110986,"line_start":488,"line_end":488,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(s, ron::ser::to_string_pretty(&v, pretty_config).unwrap());","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":110987,"byte_end":111061,"line_start":489,"line_end":489,"column_start":1,"column_end":75}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":111062,"byte_end":111069,"line_start":490,"line_end":490,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":378},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":111170,"byte_end":111181,"line_start":495,"line_end":495,"column_start":12,"column_end":23},"name":"deserialize","qualname":"::rust::unwrap_or_skip::deserialize","value":"pub fn deserialize<'de, D, T>(D) -> Result<Option<T>, D::Error> where\nD: Deserializer, T: DeserializeOwned","parent":null,"children":[],"decl_id":null,"docs":" Deserialize value wrapped in Some(T)\n","sig":null,"attributes":[{"value":"/ Deserialize value wrapped in Some(T)","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":111118,"byte_end":111158,"line_start":494,"line_end":494,"column_start":5,"column_end":45}}]},{"kind":"Function","id":{"krate":0,"index":382},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":111437,"byte_end":111446,"line_start":504,"line_end":504,"column_start":12,"column_end":21},"name":"serialize","qualname":"::rust::unwrap_or_skip::serialize","value":"pub fn serialize<T, S>(&Option<T>, S) -> Result<S::Ok, S::Error> where\nT: Serialize, S: Serializer","parent":null,"children":[],"decl_id":null,"docs":" Serialize value if Some(T), unit struct if None\n","sig":null,"attributes":[{"value":"/ Serialize value if Some(T), unit struct if None","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":111374,"byte_end":111425,"line_start":503,"line_end":503,"column_start":5,"column_end":56}}]},{"kind":"Mod","id":{"krate":0,"index":385},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":113058,"byte_end":113087,"line_start":555,"line_end":555,"column_start":9,"column_end":38},"name":"sets_duplicate_value_is_error","qualname":"::rust::sets_duplicate_value_is_error","value":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","parent":null,"children":[{"krate":0,"index":386},{"krate":0,"index":387},{"krate":0,"index":388},{"krate":0,"index":406}],"decl_id":null,"docs":" Ensure no duplicate values exist in a set.","sig":null,"attributes":[{"value":"/ Ensure no duplicate values exist in a set.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":111727,"byte_end":111773,"line_start":517,"line_end":517,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":111774,"byte_end":111777,"line_start":518,"line_end":518,"column_start":1,"column_end":4}},{"value":"/ By default serde has a last-value-wins implementation, if duplicate values for a set exist.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":111778,"byte_end":111873,"line_start":519,"line_end":519,"column_start":1,"column_end":96}},{"value":"/ Sometimes it is desirable to know when such an event happens, as the first value is overwritten","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":111874,"byte_end":111973,"line_start":520,"line_end":520,"column_start":1,"column_end":100}},{"value":"/ and it can indicate an error in the serialized data.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":111974,"byte_end":112030,"line_start":521,"line_end":521,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":112031,"byte_end":112034,"line_start":522,"line_end":522,"column_start":1,"column_end":4}},{"value":"/ This helper returns an error if two identical values exist in a set.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":112035,"byte_end":112107,"line_start":523,"line_end":523,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":112108,"byte_end":112111,"line_start":524,"line_end":524,"column_start":1,"column_end":4}},{"value":"/ The implementation supports both the [`HashSet`] and the [`BTreeSet`] from the standard library.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":112112,"byte_end":112212,"line_start":525,"line_end":525,"column_start":1,"column_end":101}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":112213,"byte_end":112216,"line_start":526,"line_end":526,"column_start":1,"column_end":4}},{"value":"/ [`HashSet`]: std::collections::HashSet","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":112217,"byte_end":112259,"line_start":527,"line_end":527,"column_start":1,"column_end":43}},{"value":"/ [`BTreeSet`]: std::collections::HashSet","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":112260,"byte_end":112303,"line_start":528,"line_end":528,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":112304,"byte_end":112307,"line_start":529,"line_end":529,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":112308,"byte_end":112321,"line_start":530,"line_end":530,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":112322,"byte_end":112325,"line_start":531,"line_end":531,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":112326,"byte_end":112337,"line_start":532,"line_end":532,"column_start":1,"column_end":12}},{"value":"/ # use std::{collections::HashSet, iter::FromIterator};","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":112338,"byte_end":112396,"line_start":533,"line_end":533,"column_start":1,"column_end":59}},{"value":"/ # use serde_derive::Deserialize;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":112397,"byte_end":112433,"line_start":534,"line_end":534,"column_start":1,"column_end":37}},{"value":"/ #","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":112434,"byte_end":112439,"line_start":535,"line_end":535,"column_start":1,"column_end":6}},{"value":"/ # #[derive(Debug, Eq, PartialEq)]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":112440,"byte_end":112477,"line_start":536,"line_end":536,"column_start":1,"column_end":38}},{"value":"/ #[derive(Deserialize)]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":112478,"byte_end":112504,"line_start":537,"line_end":537,"column_start":1,"column_end":27}},{"value":"/ struct Doc {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":112505,"byte_end":112521,"line_start":538,"line_end":538,"column_start":1,"column_end":17}},{"value":"/     #[serde(with = \"::serde_with::rust::sets_duplicate_value_is_error\")]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":112522,"byte_end":112598,"line_start":539,"line_end":539,"column_start":1,"column_end":77}},{"value":"/     set: HashSet<usize>,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":112599,"byte_end":112627,"line_start":540,"line_end":540,"column_start":1,"column_end":29}},{"value":"/ }","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":112628,"byte_end":112633,"line_start":541,"line_end":541,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":112634,"byte_end":112637,"line_start":542,"line_end":542,"column_start":1,"column_end":4}},{"value":"/ // Sets are serialized normally,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":112638,"byte_end":112674,"line_start":543,"line_end":543,"column_start":1,"column_end":37}},{"value":"/ let s = r#\"{\"set\": [1, 2, 3, 4]}\"#;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":112675,"byte_end":112714,"line_start":544,"line_end":544,"column_start":1,"column_end":40}},{"value":"/ let v = Doc {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":112715,"byte_end":112732,"line_start":545,"line_end":545,"column_start":1,"column_end":18}},{"value":"/     set: HashSet::from_iter(vec![1, 2, 3, 4]),","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":112733,"byte_end":112783,"line_start":546,"line_end":546,"column_start":1,"column_end":51}},{"value":"/ };","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":112784,"byte_end":112790,"line_start":547,"line_end":547,"column_start":1,"column_end":7}},{"value":"/ assert_eq!(v, serde_json::from_str(s).unwrap());","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":112791,"byte_end":112843,"line_start":548,"line_end":548,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":112844,"byte_end":112847,"line_start":549,"line_end":549,"column_start":1,"column_end":4}},{"value":"/ // but create an error if duplicate values, like the `1`, exist.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":112848,"byte_end":112916,"line_start":550,"line_end":550,"column_start":1,"column_end":69}},{"value":"/ let s = r#\"{\"set\": [1, 2, 3, 4, 1]}\"#;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":112917,"byte_end":112959,"line_start":551,"line_end":551,"column_start":1,"column_end":43}},{"value":"/ let res: Result<Doc, _> = serde_json::from_str(s);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":112960,"byte_end":113014,"line_start":552,"line_end":552,"column_start":1,"column_end":55}},{"value":"/ assert!(res.is_err());","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":113015,"byte_end":113041,"line_start":553,"line_end":553,"column_start":1,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":113042,"byte_end":113049,"line_start":554,"line_end":554,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":388},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":113250,"byte_end":113261,"line_start":560,"line_end":560,"column_start":12,"column_end":23},"name":"deserialize","qualname":"::rust::sets_duplicate_value_is_error::deserialize","value":"pub fn deserialize<'de, D, T, V>(D) -> Result<T, D::Error> where\nT: PreventDuplicateInsertsSet<V>, V: Deserialize, D: Deserializer","parent":null,"children":[],"decl_id":null,"docs":" Deserialize a set and return an error on duplicate values\n","sig":null,"attributes":[{"value":"/ Deserialize a set and return an error on duplicate values","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":113177,"byte_end":113238,"line_start":559,"line_end":559,"column_start":5,"column_end":66}}]},{"kind":"Function","id":{"krate":0,"index":406},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":114674,"byte_end":114683,"line_start":607,"line_end":607,"column_start":12,"column_end":21},"name":"serialize","qualname":"::rust::sets_duplicate_value_is_error::serialize","value":"pub fn serialize<T, S>(&T, S) -> Result<S::Ok, S::Error> where T: Serialize,\nS: Serializer","parent":null,"children":[],"decl_id":null,"docs":" Serialize the set with the default serializer\n","sig":null,"attributes":[{"value":"/ Serialize the set with the default serializer","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":114613,"byte_end":114662,"line_start":606,"line_end":606,"column_start":5,"column_end":54}}]},{"kind":"Mod","id":{"krate":0,"index":409},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":116230,"byte_end":116257,"line_start":657,"line_end":657,"column_start":9,"column_end":36},"name":"maps_duplicate_key_is_error","qualname":"::rust::maps_duplicate_key_is_error","value":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","parent":null,"children":[{"krate":0,"index":410},{"krate":0,"index":411},{"krate":0,"index":412},{"krate":0,"index":434}],"decl_id":null,"docs":" Ensure no duplicate keys exist in a map.","sig":null,"attributes":[{"value":"/ Ensure no duplicate keys exist in a map.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":114849,"byte_end":114893,"line_start":616,"line_end":616,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":114894,"byte_end":114897,"line_start":617,"line_end":617,"column_start":1,"column_end":4}},{"value":"/ By default serde has a last-value-wins implementation, if duplicate keys for a map exist.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":114898,"byte_end":114991,"line_start":618,"line_end":618,"column_start":1,"column_end":94}},{"value":"/ Sometimes it is desirable to know when such an event happens, as the first value is overwritten","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":114992,"byte_end":115091,"line_start":619,"line_end":619,"column_start":1,"column_end":100}},{"value":"/ and it can indicate an error in the serialized data.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":115092,"byte_end":115148,"line_start":620,"line_end":620,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":115149,"byte_end":115152,"line_start":621,"line_end":621,"column_start":1,"column_end":4}},{"value":"/ This helper returns an error if two identical keys exist in a map.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":115153,"byte_end":115223,"line_start":622,"line_end":622,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":115224,"byte_end":115227,"line_start":623,"line_end":623,"column_start":1,"column_end":4}},{"value":"/ The implementation supports both the [`HashMap`] and the [`BTreeMap`] from the standard library.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":115228,"byte_end":115328,"line_start":624,"line_end":624,"column_start":1,"column_end":101}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":115329,"byte_end":115332,"line_start":625,"line_end":625,"column_start":1,"column_end":4}},{"value":"/ [`HashMap`]: std::collections::HashMap","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":115333,"byte_end":115375,"line_start":626,"line_end":626,"column_start":1,"column_end":43}},{"value":"/ [`BTreeMap`]: std::collections::HashMap","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":115376,"byte_end":115419,"line_start":627,"line_end":627,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":115420,"byte_end":115423,"line_start":628,"line_end":628,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":115424,"byte_end":115437,"line_start":629,"line_end":629,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":115438,"byte_end":115441,"line_start":630,"line_end":630,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":115442,"byte_end":115453,"line_start":631,"line_end":631,"column_start":1,"column_end":12}},{"value":"/ # use serde_derive::Deserialize;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":115454,"byte_end":115490,"line_start":632,"line_end":632,"column_start":1,"column_end":37}},{"value":"/ # use std::collections::HashMap;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":115491,"byte_end":115527,"line_start":633,"line_end":633,"column_start":1,"column_end":37}},{"value":"/ #","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":115528,"byte_end":115533,"line_start":634,"line_end":634,"column_start":1,"column_end":6}},{"value":"/ # #[derive(Debug, Eq, PartialEq)]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":115534,"byte_end":115571,"line_start":635,"line_end":635,"column_start":1,"column_end":38}},{"value":"/ #[derive(Deserialize)]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":115572,"byte_end":115598,"line_start":636,"line_end":636,"column_start":1,"column_end":27}},{"value":"/ struct Doc {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":115599,"byte_end":115615,"line_start":637,"line_end":637,"column_start":1,"column_end":17}},{"value":"/     #[serde(with = \"::serde_with::rust::maps_duplicate_key_is_error\")]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":115616,"byte_end":115690,"line_start":638,"line_end":638,"column_start":1,"column_end":75}},{"value":"/     map: HashMap<usize, usize>,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":115691,"byte_end":115726,"line_start":639,"line_end":639,"column_start":1,"column_end":36}},{"value":"/ }","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":115727,"byte_end":115732,"line_start":640,"line_end":640,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":115733,"byte_end":115736,"line_start":641,"line_end":641,"column_start":1,"column_end":4}},{"value":"/ // Maps are serialized normally,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":115737,"byte_end":115773,"line_start":642,"line_end":642,"column_start":1,"column_end":37}},{"value":"/ let s = r#\"{\"map\": {\"1\": 1, \"2\": 2, \"3\": 3}}\"#;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":115774,"byte_end":115825,"line_start":643,"line_end":643,"column_start":1,"column_end":52}},{"value":"/ let mut v = Doc {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":115826,"byte_end":115847,"line_start":644,"line_end":644,"column_start":1,"column_end":22}},{"value":"/     map: HashMap::new(),","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":115848,"byte_end":115876,"line_start":645,"line_end":645,"column_start":1,"column_end":29}},{"value":"/ };","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":115877,"byte_end":115883,"line_start":646,"line_end":646,"column_start":1,"column_end":7}},{"value":"/ v.map.insert(1, 1);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":115884,"byte_end":115907,"line_start":647,"line_end":647,"column_start":1,"column_end":24}},{"value":"/ v.map.insert(2, 2);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":115908,"byte_end":115931,"line_start":648,"line_end":648,"column_start":1,"column_end":24}},{"value":"/ v.map.insert(3, 3);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":115932,"byte_end":115955,"line_start":649,"line_end":649,"column_start":1,"column_end":24}},{"value":"/ assert_eq!(v, serde_json::from_str(s).unwrap());","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":115956,"byte_end":116008,"line_start":650,"line_end":650,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":116009,"byte_end":116012,"line_start":651,"line_end":651,"column_start":1,"column_end":4}},{"value":"/ // but create an error if duplicate keys, like the `1`, exist.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":116013,"byte_end":116079,"line_start":652,"line_end":652,"column_start":1,"column_end":67}},{"value":"/ let s = r#\"{\"map\": {\"1\": 1, \"2\": 2, \"1\": 3}}\"#;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":116080,"byte_end":116131,"line_start":653,"line_end":653,"column_start":1,"column_end":52}},{"value":"/ let res: Result<Doc, _> = serde_json::from_str(s);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":116132,"byte_end":116186,"line_start":654,"line_end":654,"column_start":1,"column_end":55}},{"value":"/ assert!(res.is_err());","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":116187,"byte_end":116213,"line_start":655,"line_end":655,"column_start":1,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":116214,"byte_end":116221,"line_start":656,"line_end":656,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":412},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":116418,"byte_end":116429,"line_start":662,"line_end":662,"column_start":12,"column_end":23},"name":"deserialize","qualname":"::rust::maps_duplicate_key_is_error::deserialize","value":"pub fn deserialize<'de, D, T, K, V>(D) -> Result<T, D::Error> where\nT: PreventDuplicateInsertsMap<K, V>, K: Deserialize, V: Deserialize,\nD: Deserializer","parent":null,"children":[],"decl_id":null,"docs":" Deserialize a map and return an error on duplicate keys\n","sig":null,"attributes":[{"value":"/ Deserialize a map and return an error on duplicate keys","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":116347,"byte_end":116406,"line_start":661,"line_end":661,"column_start":5,"column_end":64}}]},{"kind":"Function","id":{"krate":0,"index":434},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":118008,"byte_end":118017,"line_start":713,"line_end":713,"column_start":12,"column_end":21},"name":"serialize","qualname":"::rust::maps_duplicate_key_is_error::serialize","value":"pub fn serialize<T, S>(&T, S) -> Result<S::Ok, S::Error> where T: Serialize,\nS: Serializer","parent":null,"children":[],"decl_id":null,"docs":" Serialize the map with the default serializer\n","sig":null,"attributes":[{"value":"/ Serialize the map with the default serializer","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":117947,"byte_end":117996,"line_start":712,"line_end":712,"column_start":5,"column_end":54}}]},{"kind":"Mod","id":{"krate":0,"index":437},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":118498,"byte_end":118519,"line_start":727,"line_end":727,"column_start":9,"column_end":30},"name":"sets_first_value_wins","qualname":"::rust::sets_first_value_wins","value":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","parent":null,"children":[{"krate":0,"index":438},{"krate":0,"index":439},{"krate":0,"index":440},{"krate":0,"index":458}],"decl_id":null,"docs":" *DEPRECATED* Ensure that the first value is taken, if duplicate values exist","sig":null,"attributes":[{"value":"/ *DEPRECATED* Ensure that the first value is taken, if duplicate values exist","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":118183,"byte_end":118263,"line_start":722,"line_end":722,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":118264,"byte_end":118267,"line_start":723,"line_end":723,"column_start":1,"column_end":4}},{"value":"/ This module implements the default behavior in serde.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":118268,"byte_end":118325,"line_start":724,"line_end":724,"column_start":1,"column_end":58}},{"value":"deprecated =\n  \"This module does nothing. Remove the attribute. Serde's default behavior is to use the first value when deserializing a set.\"","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":118326,"byte_end":118468,"line_start":725,"line_end":725,"column_start":1,"column_end":143}},{"value":"allow(deprecated)","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":118469,"byte_end":118489,"line_start":726,"line_end":726,"column_start":1,"column_end":21}}]},{"kind":"Function","id":{"krate":0,"index":440},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":118828,"byte_end":118839,"line_start":733,"line_end":733,"column_start":12,"column_end":23},"name":"deserialize","qualname":"::rust::sets_first_value_wins::deserialize","value":"pub fn deserialize<'de, D, T, V>(D) -> Result<T, D::Error> where\nT: DuplicateInsertsFirstWinsSet<V>, V: Deserialize, D: Deserializer","parent":null,"children":[],"decl_id":null,"docs":" Deserialize a set and keep the first of equal values\n","sig":null,"attributes":[{"value":"/ Deserialize a set and keep the first of equal values","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":118611,"byte_end":118667,"line_start":731,"line_end":731,"column_start":5,"column_end":61}},{"value":"deprecated =\n  \"This function does nothing. Remove the attribute. Serde's default behavior is to use the first value when deserializing a set.\"","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":118672,"byte_end":118816,"line_start":732,"line_end":732,"column_start":5,"column_end":149}}]},{"kind":"Function","id":{"krate":0,"index":458},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":120286,"byte_end":120295,"line_start":779,"line_end":779,"column_start":12,"column_end":21},"name":"serialize","qualname":"::rust::sets_first_value_wins::serialize","value":"pub fn serialize<T, S>(&T, S) -> Result<S::Ok, S::Error> where T: Serialize,\nS: Serializer","parent":null,"children":[],"decl_id":null,"docs":" Serialize the set with the default serializer\n","sig":null,"attributes":[{"value":"/ Serialize the set with the default serializer","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":120076,"byte_end":120125,"line_start":777,"line_end":777,"column_start":5,"column_end":54}},{"value":"deprecated =\n  \"This function does nothing. Remove the attribute. Serde's default behavior is to use the first value when deserializing a set.\"","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":120130,"byte_end":120274,"line_start":778,"line_end":778,"column_start":5,"column_end":149}}]},{"kind":"Mod","id":{"krate":0,"index":461},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":120931,"byte_end":120951,"line_start":797,"line_end":797,"column_start":9,"column_end":29},"name":"sets_last_value_wins","qualname":"::rust::sets_last_value_wins","value":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","parent":null,"children":[{"krate":0,"index":462},{"krate":0,"index":463},{"krate":0,"index":464},{"krate":0,"index":482}],"decl_id":null,"docs":" Ensure that the last value is taken, if duplicate values exist","sig":null,"attributes":[{"value":"/ Ensure that the last value is taken, if duplicate values exist","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":120461,"byte_end":120527,"line_start":788,"line_end":788,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":120528,"byte_end":120531,"line_start":789,"line_end":789,"column_start":1,"column_end":4}},{"value":"/ By default serde has a first-value-wins implementation, if duplicate keys for a set exist.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":120532,"byte_end":120626,"line_start":790,"line_end":790,"column_start":1,"column_end":95}},{"value":"/ Sometimes the opposite strategy is desired. This helper implements a first-value-wins strategy.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":120627,"byte_end":120726,"line_start":791,"line_end":791,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":120727,"byte_end":120730,"line_start":792,"line_end":792,"column_start":1,"column_end":4}},{"value":"/ The implementation supports both the [`HashSet`] and the [`BTreeSet`] from the standard library.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":120731,"byte_end":120831,"line_start":793,"line_end":793,"column_start":1,"column_end":101}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":120832,"byte_end":120835,"line_start":794,"line_end":794,"column_start":1,"column_end":4}},{"value":"/ [`HashSet`]: std::collections::HashSet","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":120836,"byte_end":120878,"line_start":795,"line_end":795,"column_start":1,"column_end":43}},{"value":"/ [`BTreeSet`]: std::collections::HashSet","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":120879,"byte_end":120922,"line_start":796,"line_end":796,"column_start":1,"column_end":44}}]},{"kind":"Function","id":{"krate":0,"index":464},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":121109,"byte_end":121120,"line_start":802,"line_end":802,"column_start":12,"column_end":23},"name":"deserialize","qualname":"::rust::sets_last_value_wins::deserialize","value":"pub fn deserialize<'de, D, T, V>(D) -> Result<T, D::Error> where\nT: DuplicateInsertsLastWinsSet<V>, V: Deserialize, D: Deserializer","parent":null,"children":[],"decl_id":null,"docs":" Deserialize a set and keep the last of equal values\n","sig":null,"attributes":[{"value":"/ Deserialize a set and keep the last of equal values","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":121042,"byte_end":121097,"line_start":801,"line_end":801,"column_start":5,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":482},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":122417,"byte_end":122426,"line_start":847,"line_end":847,"column_start":12,"column_end":21},"name":"serialize","qualname":"::rust::sets_last_value_wins::serialize","value":"pub fn serialize<T, S>(&T, S) -> Result<S::Ok, S::Error> where T: Serialize,\nS: Serializer","parent":null,"children":[],"decl_id":null,"docs":" Serialize the set with the default serializer\n","sig":null,"attributes":[{"value":"/ Serialize the set with the default serializer","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":122356,"byte_end":122405,"line_start":846,"line_end":846,"column_start":5,"column_end":54}}]},{"kind":"Mod","id":{"krate":0,"index":485},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":123925,"byte_end":123944,"line_start":898,"line_end":898,"column_start":9,"column_end":28},"name":"maps_first_key_wins","qualname":"::rust::maps_first_key_wins","value":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","parent":null,"children":[{"krate":0,"index":486},{"krate":0,"index":487},{"krate":0,"index":488},{"krate":0,"index":510}],"decl_id":null,"docs":" Ensure that the first key is taken, if duplicate keys exist","sig":null,"attributes":[{"value":"/ Ensure that the first key is taken, if duplicate keys exist","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":122592,"byte_end":122655,"line_start":856,"line_end":856,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":122656,"byte_end":122659,"line_start":857,"line_end":857,"column_start":1,"column_end":4}},{"value":"/ By default serde has a last-key-wins implementation, if duplicate keys for a map exist.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":122660,"byte_end":122751,"line_start":858,"line_end":858,"column_start":1,"column_end":92}},{"value":"/ Sometimes the opposite strategy is desired. This helper implements a first-key-wins strategy.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":122752,"byte_end":122849,"line_start":859,"line_end":859,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":122850,"byte_end":122853,"line_start":860,"line_end":860,"column_start":1,"column_end":4}},{"value":"/ The implementation supports both the [`HashMap`] and the [`BTreeMap`] from the standard library.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":122854,"byte_end":122954,"line_start":861,"line_end":861,"column_start":1,"column_end":101}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":122955,"byte_end":122958,"line_start":862,"line_end":862,"column_start":1,"column_end":4}},{"value":"/ [`HashMap`]: std::collections::HashMap","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":122959,"byte_end":123001,"line_start":863,"line_end":863,"column_start":1,"column_end":43}},{"value":"/ [`BTreeMap`]: std::collections::HashMap","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":123002,"byte_end":123045,"line_start":864,"line_end":864,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":123046,"byte_end":123049,"line_start":865,"line_end":865,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":123050,"byte_end":123063,"line_start":866,"line_end":866,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":123064,"byte_end":123067,"line_start":867,"line_end":867,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":123068,"byte_end":123079,"line_start":868,"line_end":868,"column_start":1,"column_end":12}},{"value":"/ # use serde_derive::Deserialize;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":123080,"byte_end":123116,"line_start":869,"line_end":869,"column_start":1,"column_end":37}},{"value":"/ # use std::collections::HashMap;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":123117,"byte_end":123153,"line_start":870,"line_end":870,"column_start":1,"column_end":37}},{"value":"/ #","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":123154,"byte_end":123159,"line_start":871,"line_end":871,"column_start":1,"column_end":6}},{"value":"/ # #[derive(Debug, Eq, PartialEq)]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":123160,"byte_end":123197,"line_start":872,"line_end":872,"column_start":1,"column_end":38}},{"value":"/ #[derive(Deserialize)]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":123198,"byte_end":123224,"line_start":873,"line_end":873,"column_start":1,"column_end":27}},{"value":"/ struct Doc {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":123225,"byte_end":123241,"line_start":874,"line_end":874,"column_start":1,"column_end":17}},{"value":"/     #[serde(with = \"::serde_with::rust::maps_first_key_wins\")]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":123242,"byte_end":123308,"line_start":875,"line_end":875,"column_start":1,"column_end":67}},{"value":"/     map: HashMap<usize, usize>,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":123309,"byte_end":123344,"line_start":876,"line_end":876,"column_start":1,"column_end":36}},{"value":"/ }","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":123345,"byte_end":123350,"line_start":877,"line_end":877,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":123351,"byte_end":123354,"line_start":878,"line_end":878,"column_start":1,"column_end":4}},{"value":"/ // Maps are serialized normally,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":123355,"byte_end":123391,"line_start":879,"line_end":879,"column_start":1,"column_end":37}},{"value":"/ let s = r#\"{\"map\": {\"1\": 1, \"2\": 2, \"3\": 3}}\"#;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":123392,"byte_end":123443,"line_start":880,"line_end":880,"column_start":1,"column_end":52}},{"value":"/ let mut v = Doc {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":123444,"byte_end":123465,"line_start":881,"line_end":881,"column_start":1,"column_end":22}},{"value":"/     map: HashMap::new(),","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":123466,"byte_end":123494,"line_start":882,"line_end":882,"column_start":1,"column_end":29}},{"value":"/ };","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":123495,"byte_end":123501,"line_start":883,"line_end":883,"column_start":1,"column_end":7}},{"value":"/ v.map.insert(1, 1);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":123502,"byte_end":123525,"line_start":884,"line_end":884,"column_start":1,"column_end":24}},{"value":"/ v.map.insert(2, 2);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":123526,"byte_end":123549,"line_start":885,"line_end":885,"column_start":1,"column_end":24}},{"value":"/ v.map.insert(3, 3);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":123550,"byte_end":123573,"line_start":886,"line_end":886,"column_start":1,"column_end":24}},{"value":"/ assert_eq!(v, serde_json::from_str(s).unwrap());","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":123574,"byte_end":123626,"line_start":887,"line_end":887,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":123627,"byte_end":123630,"line_start":888,"line_end":888,"column_start":1,"column_end":4}},{"value":"/ // but create an error if duplicate keys, like the `1`, exist.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":123631,"byte_end":123697,"line_start":889,"line_end":889,"column_start":1,"column_end":67}},{"value":"/ let s = r#\"{\"map\": {\"1\": 1, \"2\": 2, \"1\": 3}}\"#;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":123698,"byte_end":123749,"line_start":890,"line_end":890,"column_start":1,"column_end":52}},{"value":"/ let mut v = Doc {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":123750,"byte_end":123771,"line_start":891,"line_end":891,"column_start":1,"column_end":22}},{"value":"/     map: HashMap::new(),","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":123772,"byte_end":123800,"line_start":892,"line_end":892,"column_start":1,"column_end":29}},{"value":"/ };","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":123801,"byte_end":123807,"line_start":893,"line_end":893,"column_start":1,"column_end":7}},{"value":"/ v.map.insert(1, 1);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":123808,"byte_end":123831,"line_start":894,"line_end":894,"column_start":1,"column_end":24}},{"value":"/ v.map.insert(2, 2);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":123832,"byte_end":123855,"line_start":895,"line_end":895,"column_start":1,"column_end":24}},{"value":"/ assert_eq!(v, serde_json::from_str(s).unwrap());","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":123856,"byte_end":123908,"line_start":896,"line_end":896,"column_start":1,"column_end":53}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":123909,"byte_end":123916,"line_start":897,"line_end":897,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":488},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":124107,"byte_end":124118,"line_start":903,"line_end":903,"column_start":12,"column_end":23},"name":"deserialize","qualname":"::rust::maps_first_key_wins::deserialize","value":"pub fn deserialize<'de, D, T, K, V>(D) -> Result<T, D::Error> where\nT: DuplicateInsertsFirstWinsMap<K, V>, K: Deserialize, V: Deserialize,\nD: Deserializer","parent":null,"children":[],"decl_id":null,"docs":" Deserialize a map and return an error on duplicate keys\n","sig":null,"attributes":[{"value":"/ Deserialize a map and return an error on duplicate keys","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":124036,"byte_end":124095,"line_start":902,"line_end":902,"column_start":5,"column_end":64}}]},{"kind":"Function","id":{"krate":0,"index":510},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":125584,"byte_end":125593,"line_start":952,"line_end":952,"column_start":12,"column_end":21},"name":"serialize","qualname":"::rust::maps_first_key_wins::serialize","value":"pub fn serialize<T, S>(&T, S) -> Result<S::Ok, S::Error> where T: Serialize,\nS: Serializer","parent":null,"children":[],"decl_id":null,"docs":" Serialize the map with the default serializer\n","sig":null,"attributes":[{"value":"/ Serialize the map with the default serializer","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":125523,"byte_end":125572,"line_start":951,"line_end":951,"column_start":5,"column_end":54}}]},{"kind":"Mod","id":{"krate":0,"index":513},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":127433,"byte_end":127453,"line_start":1016,"line_end":1016,"column_start":9,"column_end":29},"name":"string_empty_as_none","qualname":"::rust::string_empty_as_none","value":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","parent":null,"children":[{"krate":0,"index":514},{"krate":0,"index":515},{"krate":0,"index":534}],"decl_id":null,"docs":" De/Serialize a [`Option`]`<`[`String`]`>` type while transforming the empty string to [`None`]","sig":null,"attributes":[{"value":"/ De/Serialize a [`Option`]`<`[`String`]`>` type while transforming the empty string to [`None`]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":125759,"byte_end":125857,"line_start":961,"line_end":961,"column_start":1,"column_end":99}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":125858,"byte_end":125861,"line_start":962,"line_end":962,"column_start":1,"column_end":4}},{"value":"/ Convert an [`Option`]`<T>` from/to string using [`FromStr`] and [`AsRef`]`<`[`str`]`>` implementations.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":125862,"byte_end":125969,"line_start":963,"line_end":963,"column_start":1,"column_end":108}},{"value":"/ An empty string is deserialized as [`None`] and a [`None`] vice versa.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":125970,"byte_end":126044,"line_start":964,"line_end":964,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":126045,"byte_end":126048,"line_start":965,"line_end":965,"column_start":1,"column_end":4}},{"value":"/ ## Converting to `serde_as`","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":126049,"byte_end":126080,"line_start":966,"line_end":966,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":126081,"byte_end":126084,"line_start":967,"line_end":967,"column_start":1,"column_end":4}},{"value":"/ The same functionality can be more clearly expressed via [`NoneAsEmptyString`] and using the [`serde_as`] macro.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":126085,"byte_end":126201,"line_start":968,"line_end":968,"column_start":1,"column_end":117}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":126202,"byte_end":126205,"line_start":969,"line_end":969,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":126206,"byte_end":126217,"line_start":970,"line_end":970,"column_start":1,"column_end":12}},{"value":"/ # #[cfg(feature = \"macros\")] {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":126218,"byte_end":126252,"line_start":971,"line_end":971,"column_start":1,"column_end":35}},{"value":"/ # use serde_derive::Deserialize;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":126253,"byte_end":126289,"line_start":972,"line_end":972,"column_start":1,"column_end":37}},{"value":"/ # use serde_with::{serde_as, NoneAsEmptyString};","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":126290,"byte_end":126342,"line_start":973,"line_end":973,"column_start":1,"column_end":53}},{"value":"/ #","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":126343,"byte_end":126348,"line_start":974,"line_end":974,"column_start":1,"column_end":6}},{"value":"/ #[serde_as]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":126349,"byte_end":126364,"line_start":975,"line_end":975,"column_start":1,"column_end":16}},{"value":"/ #[derive(Deserialize)]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":126365,"byte_end":126391,"line_start":976,"line_end":976,"column_start":1,"column_end":27}},{"value":"/ struct A {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":126392,"byte_end":126406,"line_start":977,"line_end":977,"column_start":1,"column_end":15}},{"value":"/     #[serde_as(as = \"NoneAsEmptyString\")]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":126407,"byte_end":126452,"line_start":978,"line_end":978,"column_start":1,"column_end":46}},{"value":"/     value: Option<String>,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":126453,"byte_end":126483,"line_start":979,"line_end":979,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":126484,"byte_end":126489,"line_start":980,"line_end":980,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":126490,"byte_end":126497,"line_start":981,"line_end":981,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":126498,"byte_end":126505,"line_start":982,"line_end":982,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":126506,"byte_end":126509,"line_start":983,"line_end":983,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":126510,"byte_end":126524,"line_start":984,"line_end":984,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":126525,"byte_end":126528,"line_start":985,"line_end":985,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":126529,"byte_end":126536,"line_start":986,"line_end":986,"column_start":1,"column_end":8}},{"value":"/ # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":126537,"byte_end":126586,"line_start":987,"line_end":987,"column_start":1,"column_end":50}},{"value":"/ # use serde_json::json;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":126587,"byte_end":126614,"line_start":988,"line_end":988,"column_start":1,"column_end":28}},{"value":"/ # use serde_with::rust::string_empty_as_none;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":126615,"byte_end":126664,"line_start":989,"line_end":989,"column_start":1,"column_end":50}},{"value":"/ #","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":126665,"byte_end":126670,"line_start":990,"line_end":990,"column_start":1,"column_end":6}},{"value":"/ #[derive(Deserialize, Serialize)]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":126671,"byte_end":126708,"line_start":991,"line_end":991,"column_start":1,"column_end":38}},{"value":"/ struct A {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":126709,"byte_end":126723,"line_start":992,"line_end":992,"column_start":1,"column_end":15}},{"value":"/     #[serde(with = \"string_empty_as_none\")]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":126724,"byte_end":126771,"line_start":993,"line_end":993,"column_start":1,"column_end":48}},{"value":"/     tags: Option<String>,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":126772,"byte_end":126801,"line_start":994,"line_end":994,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":126802,"byte_end":126807,"line_start":995,"line_end":995,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":126808,"byte_end":126811,"line_start":996,"line_end":996,"column_start":1,"column_end":4}},{"value":"/ let v: A = serde_json::from_value(json!({ \"tags\": \"\" })).unwrap();","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":126812,"byte_end":126882,"line_start":997,"line_end":997,"column_start":1,"column_end":71}},{"value":"/ assert_eq!(None, v.tags);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":126883,"byte_end":126912,"line_start":998,"line_end":998,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":126913,"byte_end":126916,"line_start":999,"line_end":999,"column_start":1,"column_end":4}},{"value":"/ let v: A = serde_json::from_value(json!({ \"tags\": \"Hi\" })).unwrap();","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":126917,"byte_end":126989,"line_start":1000,"line_end":1000,"column_start":1,"column_end":73}},{"value":"/ assert_eq!(Some(\"Hi\".to_string()), v.tags);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":126990,"byte_end":127037,"line_start":1001,"line_end":1001,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":127038,"byte_end":127041,"line_start":1002,"line_end":1002,"column_start":1,"column_end":4}},{"value":"/ let x = A {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":127042,"byte_end":127057,"line_start":1003,"line_end":1003,"column_start":1,"column_end":16}},{"value":"/     tags: Some(\"This is text\".to_string()),","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":127058,"byte_end":127105,"line_start":1004,"line_end":1004,"column_start":1,"column_end":48}},{"value":"/ };","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":127106,"byte_end":127112,"line_start":1005,"line_end":1005,"column_start":1,"column_end":7}},{"value":"/ assert_eq!(json!({ \"tags\": \"This is text\" }), serde_json::to_value(&x).unwrap());","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":127113,"byte_end":127198,"line_start":1006,"line_end":1006,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":127199,"byte_end":127202,"line_start":1007,"line_end":1007,"column_start":1,"column_end":4}},{"value":"/ let x = A {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":127203,"byte_end":127218,"line_start":1008,"line_end":1008,"column_start":1,"column_end":16}},{"value":"/     tags: None,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":127219,"byte_end":127238,"line_start":1009,"line_end":1009,"column_start":1,"column_end":20}},{"value":"/ };","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":127239,"byte_end":127245,"line_start":1010,"line_end":1010,"column_start":1,"column_end":7}},{"value":"/ assert_eq!(json!({ \"tags\": \"\" }), serde_json::to_value(&x).unwrap());","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":127246,"byte_end":127319,"line_start":1011,"line_end":1011,"column_start":1,"column_end":74}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":127320,"byte_end":127327,"line_start":1012,"line_end":1012,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":127328,"byte_end":127331,"line_start":1013,"line_end":1013,"column_start":1,"column_end":4}},{"value":"/ [`NoneAsEmptyString`]: crate::NoneAsEmptyString","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":127332,"byte_end":127383,"line_start":1014,"line_end":1014,"column_start":1,"column_end":52}},{"value":"/ [`serde_as`]: crate::guide::serde_as","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":127384,"byte_end":127424,"line_start":1015,"line_end":1015,"column_start":1,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":515},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":127551,"byte_end":127562,"line_start":1020,"line_end":1020,"column_start":12,"column_end":23},"name":"deserialize","qualname":"::rust::string_empty_as_none::deserialize","value":"pub fn deserialize<'de, D, S>(D) -> Result<Option<S>, D::Error> where\nD: Deserializer, S: FromStr, S::Err: Display","parent":null,"children":[],"decl_id":null,"docs":" Deserialize an `Option<T>` from a string using `FromStr`\n","sig":null,"attributes":[{"value":"/ Deserialize an `Option<T>` from a string using `FromStr`","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":127479,"byte_end":127539,"line_start":1019,"line_end":1019,"column_start":5,"column_end":65}}]},{"kind":"Function","id":{"krate":0,"index":534},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":129111,"byte_end":129120,"line_start":1071,"line_end":1071,"column_start":12,"column_end":21},"name":"serialize","qualname":"::rust::string_empty_as_none::serialize","value":"pub fn serialize<T, S>(&Option<T>, S) -> Result<S::Ok, S::Error> where\nT: AsRef<str>, S: Serializer","parent":null,"children":[],"decl_id":null,"docs":" Serialize a string from `Option<T>` using `AsRef<str>` or using the empty string if `None`.\n","sig":null,"attributes":[{"value":"/ Serialize a string from `Option<T>` using `AsRef<str>` or using the empty string if `None`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":129004,"byte_end":129099,"line_start":1070,"line_end":1070,"column_start":5,"column_end":100}}]},{"kind":"Mod","id":{"krate":0,"index":537},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":131755,"byte_end":131776,"line_start":1164,"line_end":1164,"column_start":9,"column_end":30},"name":"hashmap_as_tuple_list","qualname":"::rust::hashmap_as_tuple_list","value":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","parent":null,"children":[{"krate":0,"index":538},{"krate":0,"index":539},{"krate":0,"index":540},{"krate":0,"index":541},{"krate":0,"index":546},{"krate":0,"index":552},{"krate":0,"index":558}],"decl_id":null,"docs":" De/Serialize a [`HashMap`] into a list of tuples","sig":null,"attributes":[{"value":"/ De/Serialize a [`HashMap`] into a list of tuples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":129411,"byte_end":129463,"line_start":1084,"line_end":1084,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":129464,"byte_end":129467,"line_start":1085,"line_end":1085,"column_start":1,"column_end":4}},{"value":"/ Some formats, like JSON, have limitations on the type of keys for maps.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":129468,"byte_end":129543,"line_start":1086,"line_end":1086,"column_start":1,"column_end":76}},{"value":"/ In case of JSON, keys are restricted to strings.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":129544,"byte_end":129596,"line_start":1087,"line_end":1087,"column_start":1,"column_end":53}},{"value":"/ Rust features more powerful keys, for example tuple, which can not be serialized to JSON.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":129597,"byte_end":129690,"line_start":1088,"line_end":1088,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":129691,"byte_end":129694,"line_start":1089,"line_end":1089,"column_start":1,"column_end":4}},{"value":"/ This helper serializes the [`HashMap`] into a list of tuples, which does not have the same type restrictions.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":129695,"byte_end":129808,"line_start":1090,"line_end":1090,"column_start":1,"column_end":114}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":129809,"byte_end":129812,"line_start":1091,"line_end":1091,"column_start":1,"column_end":4}},{"value":"/ If you need to de/serialize a [`BTreeMap`] then use [`btreemap_as_tuple_list`].","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":129813,"byte_end":129896,"line_start":1092,"line_end":1092,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":129897,"byte_end":129900,"line_start":1093,"line_end":1093,"column_start":1,"column_end":4}},{"value":"/ ## Converting to `serde_as`","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":129901,"byte_end":129932,"line_start":1094,"line_end":1094,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":129933,"byte_end":129936,"line_start":1095,"line_end":1095,"column_start":1,"column_end":4}},{"value":"/ The same functionality can be more clearly expressed using the [`serde_as`] macro.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":129937,"byte_end":130023,"line_start":1096,"line_end":1096,"column_start":1,"column_end":87}},{"value":"/ The `_` is a placeholder which works for any type which implements [`Serialize`]/[`Deserialize`], such as the tuple and `u32` type.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":130024,"byte_end":130159,"line_start":1097,"line_end":1097,"column_start":1,"column_end":136}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":130160,"byte_end":130163,"line_start":1098,"line_end":1098,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":130164,"byte_end":130175,"line_start":1099,"line_end":1099,"column_start":1,"column_end":12}},{"value":"/ # #[cfg(feature = \"macros\")] {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":130176,"byte_end":130210,"line_start":1100,"line_end":1100,"column_start":1,"column_end":35}},{"value":"/ # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":130211,"byte_end":130260,"line_start":1101,"line_end":1101,"column_start":1,"column_end":50}},{"value":"/ # use serde_with::serde_as;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":130261,"byte_end":130292,"line_start":1102,"line_end":1102,"column_start":1,"column_end":32}},{"value":"/ # use std::collections::HashMap;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":130293,"byte_end":130329,"line_start":1103,"line_end":1103,"column_start":1,"column_end":37}},{"value":"/ #","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":130330,"byte_end":130335,"line_start":1104,"line_end":1104,"column_start":1,"column_end":6}},{"value":"/ #[serde_as]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":130336,"byte_end":130351,"line_start":1105,"line_end":1105,"column_start":1,"column_end":16}},{"value":"/ #[derive(Deserialize, Serialize)]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":130352,"byte_end":130389,"line_start":1106,"line_end":1106,"column_start":1,"column_end":38}},{"value":"/ struct A {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":130390,"byte_end":130404,"line_start":1107,"line_end":1107,"column_start":1,"column_end":15}},{"value":"/     #[serde_as(as = \"Vec<(_, _)>\")]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":130405,"byte_end":130444,"line_start":1108,"line_end":1108,"column_start":1,"column_end":40}},{"value":"/     s: HashMap<(String, u32), u32>,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":130445,"byte_end":130484,"line_start":1109,"line_end":1109,"column_start":1,"column_end":40}},{"value":"/ }","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":130485,"byte_end":130490,"line_start":1110,"line_end":1110,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":130491,"byte_end":130498,"line_start":1111,"line_end":1111,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":130499,"byte_end":130506,"line_start":1112,"line_end":1112,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":130507,"byte_end":130510,"line_start":1113,"line_end":1113,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":130511,"byte_end":130525,"line_start":1114,"line_end":1114,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":130526,"byte_end":130529,"line_start":1115,"line_end":1115,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":130530,"byte_end":130537,"line_start":1116,"line_end":1116,"column_start":1,"column_end":8}},{"value":"/ # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":130538,"byte_end":130587,"line_start":1117,"line_end":1117,"column_start":1,"column_end":50}},{"value":"/ # use serde_json::json;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":130588,"byte_end":130615,"line_start":1118,"line_end":1118,"column_start":1,"column_end":28}},{"value":"/ # use std::collections::HashMap;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":130616,"byte_end":130652,"line_start":1119,"line_end":1119,"column_start":1,"column_end":37}},{"value":"/ #","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":130653,"byte_end":130658,"line_start":1120,"line_end":1120,"column_start":1,"column_end":6}},{"value":"/ #[derive(Deserialize, Serialize)]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":130659,"byte_end":130696,"line_start":1121,"line_end":1121,"column_start":1,"column_end":38}},{"value":"/ struct A {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":130697,"byte_end":130711,"line_start":1122,"line_end":1122,"column_start":1,"column_end":15}},{"value":"/     #[serde(with = \"serde_with::rust::hashmap_as_tuple_list\")]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":130712,"byte_end":130778,"line_start":1123,"line_end":1123,"column_start":1,"column_end":67}},{"value":"/     s: HashMap<(String, u32), u32>,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":130779,"byte_end":130818,"line_start":1124,"line_end":1124,"column_start":1,"column_end":40}},{"value":"/ }","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":130819,"byte_end":130824,"line_start":1125,"line_end":1125,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":130825,"byte_end":130828,"line_start":1126,"line_end":1126,"column_start":1,"column_end":4}},{"value":"/ let v: A = serde_json::from_value(json!({","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":130829,"byte_end":130874,"line_start":1127,"line_end":1127,"column_start":1,"column_end":46}},{"value":"/     \"s\": [","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":130875,"byte_end":130889,"line_start":1128,"line_end":1128,"column_start":1,"column_end":15}},{"value":"/         [[\"Hello\", 123], 0],","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":130890,"byte_end":130922,"line_start":1129,"line_end":1129,"column_start":1,"column_end":33}},{"value":"/         [[\"World\", 456], 1]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":130923,"byte_end":130954,"line_start":1130,"line_end":1130,"column_start":1,"column_end":32}},{"value":"/     ]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":130955,"byte_end":130964,"line_start":1131,"line_end":1131,"column_start":1,"column_end":10}},{"value":"/ })).unwrap();","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":130965,"byte_end":130982,"line_start":1132,"line_end":1132,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":130983,"byte_end":130986,"line_start":1133,"line_end":1133,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(2, v.s.len());","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":130987,"byte_end":131016,"line_start":1134,"line_end":1134,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(1, v.s[&(\"World\".to_string(), 456)]);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":131017,"byte_end":131069,"line_start":1135,"line_end":1135,"column_start":1,"column_end":53}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":131070,"byte_end":131077,"line_start":1136,"line_end":1136,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":131078,"byte_end":131081,"line_start":1137,"line_end":1137,"column_start":1,"column_end":4}},{"value":"/ The helper is generic over the hasher type of the [`HashMap`] and works with different variants, such as `FnvHashMap`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":131082,"byte_end":131204,"line_start":1138,"line_end":1138,"column_start":1,"column_end":123}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":131205,"byte_end":131208,"line_start":1139,"line_end":1139,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":131209,"byte_end":131216,"line_start":1140,"line_end":1140,"column_start":1,"column_end":8}},{"value":"/ # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":131217,"byte_end":131266,"line_start":1141,"line_end":1141,"column_start":1,"column_end":50}},{"value":"/ # use serde_json::json;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":131267,"byte_end":131294,"line_start":1142,"line_end":1142,"column_start":1,"column_end":28}},{"value":"/ #","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":131295,"byte_end":131300,"line_start":1143,"line_end":1143,"column_start":1,"column_end":6}},{"value":"/ use fnv::FnvHashMap;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":131301,"byte_end":131325,"line_start":1144,"line_end":1144,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":131326,"byte_end":131329,"line_start":1145,"line_end":1145,"column_start":1,"column_end":4}},{"value":"/ #[derive(Deserialize, Serialize)]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":131330,"byte_end":131367,"line_start":1146,"line_end":1146,"column_start":1,"column_end":38}},{"value":"/ struct A {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":131368,"byte_end":131382,"line_start":1147,"line_end":1147,"column_start":1,"column_end":15}},{"value":"/     #[serde(with = \"serde_with::rust::hashmap_as_tuple_list\")]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":131383,"byte_end":131449,"line_start":1148,"line_end":1148,"column_start":1,"column_end":67}},{"value":"/     s: FnvHashMap<u32, bool>,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":131450,"byte_end":131483,"line_start":1149,"line_end":1149,"column_start":1,"column_end":34}},{"value":"/ }","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":131484,"byte_end":131489,"line_start":1150,"line_end":1150,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":131490,"byte_end":131493,"line_start":1151,"line_end":1151,"column_start":1,"column_end":4}},{"value":"/ let v: A = serde_json::from_value(json!({","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":131494,"byte_end":131539,"line_start":1152,"line_end":1152,"column_start":1,"column_end":46}},{"value":"/     \"s\": [","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":131540,"byte_end":131554,"line_start":1153,"line_end":1153,"column_start":1,"column_end":15}},{"value":"/         [0, false],","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":131555,"byte_end":131578,"line_start":1154,"line_end":1154,"column_start":1,"column_end":24}},{"value":"/         [1, true]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":131579,"byte_end":131600,"line_start":1155,"line_end":1155,"column_start":1,"column_end":22}},{"value":"/     ]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":131601,"byte_end":131610,"line_start":1156,"line_end":1156,"column_start":1,"column_end":10}},{"value":"/ })).unwrap();","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":131611,"byte_end":131628,"line_start":1157,"line_end":1157,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":131629,"byte_end":131632,"line_start":1158,"line_end":1158,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(2, v.s.len());","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":131633,"byte_end":131662,"line_start":1159,"line_end":1159,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(true, v.s[&1]);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":131663,"byte_end":131693,"line_start":1160,"line_end":1160,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":131694,"byte_end":131701,"line_start":1161,"line_end":1161,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":131702,"byte_end":131705,"line_start":1162,"line_end":1162,"column_start":1,"column_end":4}},{"value":"/ [`serde_as`]: crate::guide::serde_as","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":131706,"byte_end":131746,"line_start":1163,"line_end":1163,"column_start":1,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":541},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":131945,"byte_end":131954,"line_start":1168,"line_end":1168,"column_start":12,"column_end":21},"name":"serialize","qualname":"::rust::hashmap_as_tuple_list::serialize","value":"pub fn serialize<K, V, S, BH>(&HashMap<K, V, BH>, S)\n-> Result<S::Ok, S::Error> where S: Serializer, K: Eq + Hash + Serialize,\nV: Serialize, BH: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Serialize the [`HashMap`] as a list of tuples\n","sig":null,"attributes":[{"value":"/ Serialize the [`HashMap`] as a list of tuples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":131884,"byte_end":131933,"line_start":1167,"line_end":1167,"column_start":5,"column_end":54}}]},{"kind":"Function","id":{"krate":0,"index":546},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":132399,"byte_end":132410,"line_start":1183,"line_end":1183,"column_start":12,"column_end":23},"name":"deserialize","qualname":"::rust::hashmap_as_tuple_list::deserialize","value":"pub fn deserialize<'de, K, V, BH, D>(D) -> Result<HashMap<K, V, BH>, D::Error>\nwhere D: Deserializer, K: Eq + Hash + Deserialize, V: Deserialize,\nBH: BuildHasher + Default","parent":null,"children":[],"decl_id":null,"docs":" Deserialize a [`HashMap`] from a list of tuples\n","sig":null,"attributes":[{"value":"/ Deserialize a [`HashMap`] from a list of tuples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":132336,"byte_end":132387,"line_start":1182,"line_end":1182,"column_start":5,"column_end":56}}]},{"kind":"Mod","id":{"krate":0,"index":567},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":135341,"byte_end":135363,"line_start":1277,"line_end":1277,"column_start":9,"column_end":31},"name":"btreemap_as_tuple_list","qualname":"::rust::btreemap_as_tuple_list","value":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","parent":null,"children":[{"krate":0,"index":568},{"krate":0,"index":569},{"krate":0,"index":573},{"krate":0,"index":578},{"krate":0,"index":583}],"decl_id":null,"docs":" De/Serialize a [`BTreeMap`] into a list of tuples","sig":null,"attributes":[{"value":"/ De/Serialize a [`BTreeMap`] into a list of tuples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":133616,"byte_end":133669,"line_start":1222,"line_end":1222,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":133670,"byte_end":133673,"line_start":1223,"line_end":1223,"column_start":1,"column_end":4}},{"value":"/ Some formats, like JSON, have limitations on the type of keys for maps.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":133674,"byte_end":133749,"line_start":1224,"line_end":1224,"column_start":1,"column_end":76}},{"value":"/ In case of JSON, keys are restricted to strings.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":133750,"byte_end":133802,"line_start":1225,"line_end":1225,"column_start":1,"column_end":53}},{"value":"/ Rust features more powerful keys, for example tuple, which can not be serialized to JSON.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":133803,"byte_end":133896,"line_start":1226,"line_end":1226,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":133897,"byte_end":133900,"line_start":1227,"line_end":1227,"column_start":1,"column_end":4}},{"value":"/ This helper serializes the [`BTreeMap`] into a list of tuples, which does not have the same type restrictions.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":133901,"byte_end":134015,"line_start":1228,"line_end":1228,"column_start":1,"column_end":115}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":134016,"byte_end":134019,"line_start":1229,"line_end":1229,"column_start":1,"column_end":4}},{"value":"/ If you need to de/serialize a [`HashMap`] then use [`hashmap_as_tuple_list`].","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":134020,"byte_end":134101,"line_start":1230,"line_end":1230,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":134102,"byte_end":134105,"line_start":1231,"line_end":1231,"column_start":1,"column_end":4}},{"value":"/ ## Converting to `serde_as`","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":134106,"byte_end":134137,"line_start":1232,"line_end":1232,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":134138,"byte_end":134141,"line_start":1233,"line_end":1233,"column_start":1,"column_end":4}},{"value":"/ The same functionality can be more clearly expressed using the [`serde_as`] macro.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":134142,"byte_end":134228,"line_start":1234,"line_end":1234,"column_start":1,"column_end":87}},{"value":"/ The `_` is a placeholder which works for any type which implements [`Serialize`]/[`Deserialize`], such as the tuple and `u32` type.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":134229,"byte_end":134364,"line_start":1235,"line_end":1235,"column_start":1,"column_end":136}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":134365,"byte_end":134368,"line_start":1236,"line_end":1236,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":134369,"byte_end":134380,"line_start":1237,"line_end":1237,"column_start":1,"column_end":12}},{"value":"/ # #[cfg(feature = \"macros\")] {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":134381,"byte_end":134415,"line_start":1238,"line_end":1238,"column_start":1,"column_end":35}},{"value":"/ # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":134416,"byte_end":134465,"line_start":1239,"line_end":1239,"column_start":1,"column_end":50}},{"value":"/ # use serde_with::serde_as;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":134466,"byte_end":134497,"line_start":1240,"line_end":1240,"column_start":1,"column_end":32}},{"value":"/ # use std::collections::BTreeMap;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":134498,"byte_end":134535,"line_start":1241,"line_end":1241,"column_start":1,"column_end":38}},{"value":"/ #","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":134536,"byte_end":134541,"line_start":1242,"line_end":1242,"column_start":1,"column_end":6}},{"value":"/ #[serde_as]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":134542,"byte_end":134557,"line_start":1243,"line_end":1243,"column_start":1,"column_end":16}},{"value":"/ #[derive(Deserialize, Serialize)]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":134558,"byte_end":134595,"line_start":1244,"line_end":1244,"column_start":1,"column_end":38}},{"value":"/ struct A {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":134596,"byte_end":134610,"line_start":1245,"line_end":1245,"column_start":1,"column_end":15}},{"value":"/     #[serde_as(as = \"Vec<(_, _)>\")]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":134611,"byte_end":134650,"line_start":1246,"line_end":1246,"column_start":1,"column_end":40}},{"value":"/     s: BTreeMap<(String, u32), u32>,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":134651,"byte_end":134691,"line_start":1247,"line_end":1247,"column_start":1,"column_end":41}},{"value":"/ }","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":134692,"byte_end":134697,"line_start":1248,"line_end":1248,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":134698,"byte_end":134705,"line_start":1249,"line_end":1249,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":134706,"byte_end":134713,"line_start":1250,"line_end":1250,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":134714,"byte_end":134717,"line_start":1251,"line_end":1251,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":134718,"byte_end":134732,"line_start":1252,"line_end":1252,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":134733,"byte_end":134736,"line_start":1253,"line_end":1253,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":134737,"byte_end":134744,"line_start":1254,"line_end":1254,"column_start":1,"column_end":8}},{"value":"/ # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":134745,"byte_end":134794,"line_start":1255,"line_end":1255,"column_start":1,"column_end":50}},{"value":"/ # use serde_json::json;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":134795,"byte_end":134822,"line_start":1256,"line_end":1256,"column_start":1,"column_end":28}},{"value":"/ # use std::collections::BTreeMap;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":134823,"byte_end":134860,"line_start":1257,"line_end":1257,"column_start":1,"column_end":38}},{"value":"/ #","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":134861,"byte_end":134866,"line_start":1258,"line_end":1258,"column_start":1,"column_end":6}},{"value":"/ #[derive(Deserialize, Serialize)]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":134867,"byte_end":134904,"line_start":1259,"line_end":1259,"column_start":1,"column_end":38}},{"value":"/ struct A {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":134905,"byte_end":134919,"line_start":1260,"line_end":1260,"column_start":1,"column_end":15}},{"value":"/     #[serde(with = \"serde_with::rust::btreemap_as_tuple_list\")]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":134920,"byte_end":134987,"line_start":1261,"line_end":1261,"column_start":1,"column_end":68}},{"value":"/     s: BTreeMap<(String, u32), u32>,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":134988,"byte_end":135028,"line_start":1262,"line_end":1262,"column_start":1,"column_end":41}},{"value":"/ }","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":135029,"byte_end":135034,"line_start":1263,"line_end":1263,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":135035,"byte_end":135038,"line_start":1264,"line_end":1264,"column_start":1,"column_end":4}},{"value":"/ let v: A = serde_json::from_value(json!({","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":135039,"byte_end":135084,"line_start":1265,"line_end":1265,"column_start":1,"column_end":46}},{"value":"/     \"s\": [","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":135085,"byte_end":135099,"line_start":1266,"line_end":1266,"column_start":1,"column_end":15}},{"value":"/         [[\"Hello\", 123], 0],","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":135100,"byte_end":135132,"line_start":1267,"line_end":1267,"column_start":1,"column_end":33}},{"value":"/         [[\"World\", 456], 1]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":135133,"byte_end":135164,"line_start":1268,"line_end":1268,"column_start":1,"column_end":32}},{"value":"/     ]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":135165,"byte_end":135174,"line_start":1269,"line_end":1269,"column_start":1,"column_end":10}},{"value":"/ })).unwrap();","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":135175,"byte_end":135192,"line_start":1270,"line_end":1270,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":135193,"byte_end":135196,"line_start":1271,"line_end":1271,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(2, v.s.len());","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":135197,"byte_end":135226,"line_start":1272,"line_end":1272,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(1, v.s[&(\"World\".to_string(), 456)]);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":135227,"byte_end":135279,"line_start":1273,"line_end":1273,"column_start":1,"column_end":53}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":135280,"byte_end":135287,"line_start":1274,"line_end":1274,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":135288,"byte_end":135291,"line_start":1275,"line_end":1275,"column_start":1,"column_end":4}},{"value":"/ [`serde_as`]: crate::guide::serde_as","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":135292,"byte_end":135332,"line_start":1276,"line_end":1276,"column_start":1,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":569},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":135451,"byte_end":135460,"line_start":1281,"line_end":1281,"column_start":12,"column_end":21},"name":"serialize","qualname":"::rust::btreemap_as_tuple_list::serialize","value":"pub fn serialize<K, V, S>(&BTreeMap<K, V>, S) -> Result<S::Ok, S::Error> where\nS: Serializer, K: Eq + Hash + Serialize, V: Serialize","parent":null,"children":[],"decl_id":null,"docs":" Serialize the [`BTreeMap`] as a list of tuples\n","sig":null,"attributes":[{"value":"/ Serialize the [`BTreeMap`] as a list of tuples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":135389,"byte_end":135439,"line_start":1280,"line_end":1280,"column_start":5,"column_end":55}}]},{"kind":"Function","id":{"krate":0,"index":573},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":135874,"byte_end":135885,"line_start":1295,"line_end":1295,"column_start":12,"column_end":23},"name":"deserialize","qualname":"::rust::btreemap_as_tuple_list::deserialize","value":"pub fn deserialize<'de, K, V, D>(D) -> Result<BTreeMap<K, V>, D::Error> where\nD: Deserializer, K: Deserialize + Ord, V: Deserialize","parent":null,"children":[],"decl_id":null,"docs":" Deserialize a [`BTreeMap`] from a list of tuples\n","sig":null,"attributes":[{"value":"/ Deserialize a [`BTreeMap`] from a list of tuples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":135810,"byte_end":135862,"line_start":1294,"line_end":1294,"column_start":5,"column_end":57}}]},{"kind":"Mod","id":{"krate":0,"index":591},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":140167,"byte_end":140184,"line_start":1427,"line_end":1427,"column_start":9,"column_end":26},"name":"tuple_list_as_map","qualname":"::rust::tuple_list_as_map","value":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","parent":null,"children":[{"krate":0,"index":592},{"krate":0,"index":593},{"krate":0,"index":594},{"krate":0,"index":595},{"krate":0,"index":601},{"krate":0,"index":607},{"krate":0,"index":613},{"krate":0,"index":622},{"krate":0,"index":630}],"decl_id":null,"docs":" This serializes a list of tuples into a map and back","sig":null,"attributes":[{"value":"/ This serializes a list of tuples into a map and back","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":136912,"byte_end":136968,"line_start":1331,"line_end":1331,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":136969,"byte_end":136972,"line_start":1332,"line_end":1332,"column_start":1,"column_end":4}},{"value":"/ Normally, you want to use a [`HashMap`] or a [`BTreeMap`] when deserializing a map.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":136973,"byte_end":137060,"line_start":1333,"line_end":1333,"column_start":1,"column_end":88}},{"value":"/ However, sometimes this is not possible due to type contains, e.g., if the type implements neither [`Hash`] nor [`Ord`].","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":137061,"byte_end":137185,"line_start":1334,"line_end":1334,"column_start":1,"column_end":125}},{"value":"/ Another use case is deserializing a map with duplicate keys.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":137186,"byte_end":137250,"line_start":1335,"line_end":1335,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":137251,"byte_end":137254,"line_start":1336,"line_end":1336,"column_start":1,"column_end":4}},{"value":"/ The implementation is generic using the [`FromIterator`] and [`IntoIterator`] traits.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":137255,"byte_end":137344,"line_start":1337,"line_end":1337,"column_start":1,"column_end":90}},{"value":"/ Therefore, all of [`Vec`], [`VecDeque`](std::collections::VecDeque), and [`LinkedList`](std::collections::LinkedList) and anything which implements those are supported.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":137345,"byte_end":137517,"line_start":1338,"line_end":1338,"column_start":1,"column_end":173}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":137518,"byte_end":137521,"line_start":1339,"line_end":1339,"column_start":1,"column_end":4}},{"value":"/ ## Converting to `serde_as`","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":137522,"byte_end":137553,"line_start":1340,"line_end":1340,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":137554,"byte_end":137557,"line_start":1341,"line_end":1341,"column_start":1,"column_end":4}},{"value":"/ The same functionality can be more clearly expressed using the [`serde_as`] macro.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":137558,"byte_end":137644,"line_start":1342,"line_end":1342,"column_start":1,"column_end":87}},{"value":"/ The `_` is a placeholder which works for any type which implements [`Serialize`]/[`Deserialize`], such as the tuple and `u32` type.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":137645,"byte_end":137780,"line_start":1343,"line_end":1343,"column_start":1,"column_end":136}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":137781,"byte_end":137784,"line_start":1344,"line_end":1344,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":137785,"byte_end":137796,"line_start":1345,"line_end":1345,"column_start":1,"column_end":12}},{"value":"/ # #[cfg(feature = \"macros\")] {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":137797,"byte_end":137831,"line_start":1346,"line_end":1346,"column_start":1,"column_end":35}},{"value":"/ # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":137832,"byte_end":137881,"line_start":1347,"line_end":1347,"column_start":1,"column_end":50}},{"value":"/ # use serde_with::serde_as;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":137882,"byte_end":137913,"line_start":1348,"line_end":1348,"column_start":1,"column_end":32}},{"value":"/ # use std::collections::BTreeMap;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":137914,"byte_end":137951,"line_start":1349,"line_end":1349,"column_start":1,"column_end":38}},{"value":"/ #","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":137952,"byte_end":137957,"line_start":1350,"line_end":1350,"column_start":1,"column_end":6}},{"value":"/ #[serde_as]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":137958,"byte_end":137973,"line_start":1351,"line_end":1351,"column_start":1,"column_end":16}},{"value":"/ #[derive(Deserialize, Serialize)]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":137974,"byte_end":138011,"line_start":1352,"line_end":1352,"column_start":1,"column_end":38}},{"value":"/ struct S {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":138012,"byte_end":138026,"line_start":1353,"line_end":1353,"column_start":1,"column_end":15}},{"value":"/     #[serde_as(as = \"BTreeMap<_, _>\")] // HashMap will also work","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":138027,"byte_end":138095,"line_start":1354,"line_end":1354,"column_start":1,"column_end":69}},{"value":"/     s: Vec<(i32, String)>,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":138096,"byte_end":138126,"line_start":1355,"line_end":1355,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":138127,"byte_end":138132,"line_start":1356,"line_end":1356,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":138133,"byte_end":138140,"line_start":1357,"line_end":1357,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":138141,"byte_end":138148,"line_start":1358,"line_end":1358,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":138149,"byte_end":138152,"line_start":1359,"line_end":1359,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":138153,"byte_end":138167,"line_start":1360,"line_end":1360,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":138168,"byte_end":138171,"line_start":1361,"line_end":1361,"column_start":1,"column_end":4}},{"value":"/ `Wrapper` does not implement [`Hash`] nor [`Ord`], thus prohibiting the use [`HashMap`] or [`BTreeMap`].","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":138172,"byte_end":138280,"line_start":1362,"line_end":1362,"column_start":1,"column_end":109}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":138281,"byte_end":138284,"line_start":1363,"line_end":1363,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":138285,"byte_end":138292,"line_start":1364,"line_end":1364,"column_start":1,"column_end":8}},{"value":"/ # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":138293,"byte_end":138342,"line_start":1365,"line_end":1365,"column_start":1,"column_end":50}},{"value":"/ #","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":138343,"byte_end":138348,"line_start":1366,"line_end":1366,"column_start":1,"column_end":6}},{"value":"/ #[derive(Debug, Deserialize, Serialize, Default)]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":138349,"byte_end":138402,"line_start":1367,"line_end":1367,"column_start":1,"column_end":54}},{"value":"/ struct S {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":138403,"byte_end":138417,"line_start":1368,"line_end":1368,"column_start":1,"column_end":15}},{"value":"/     #[serde(with = \"serde_with::rust::tuple_list_as_map\")]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":138418,"byte_end":138480,"line_start":1369,"line_end":1369,"column_start":1,"column_end":63}},{"value":"/     s: Vec<(Wrapper<i32>, Wrapper<String>)>,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":138481,"byte_end":138529,"line_start":1370,"line_end":1370,"column_start":1,"column_end":49}},{"value":"/ }","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":138530,"byte_end":138535,"line_start":1371,"line_end":1371,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":138536,"byte_end":138539,"line_start":1372,"line_end":1372,"column_start":1,"column_end":4}},{"value":"/ #[derive(Clone, Debug, Serialize, Deserialize)]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":138540,"byte_end":138591,"line_start":1373,"line_end":1373,"column_start":1,"column_end":52}},{"value":"/ #[serde(transparent)]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":138592,"byte_end":138617,"line_start":1374,"line_end":1374,"column_start":1,"column_end":26}},{"value":"/ struct Wrapper<T>(T);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":138618,"byte_end":138643,"line_start":1375,"line_end":1375,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":138644,"byte_end":138647,"line_start":1376,"line_end":1376,"column_start":1,"column_end":4}},{"value":"/ let from = r#\"{","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":138648,"byte_end":138667,"line_start":1377,"line_end":1377,"column_start":1,"column_end":20}},{"value":"/   \"s\": {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":138668,"byte_end":138680,"line_start":1378,"line_end":1378,"column_start":1,"column_end":13}},{"value":"/     \"1\": \"Hi\",","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":138681,"byte_end":138699,"line_start":1379,"line_end":1379,"column_start":1,"column_end":19}},{"value":"/     \"2\": \"Cake\",","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":138700,"byte_end":138720,"line_start":1380,"line_end":1380,"column_start":1,"column_end":21}},{"value":"/     \"99\": \"Lie\"","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":138721,"byte_end":138740,"line_start":1381,"line_end":1381,"column_start":1,"column_end":20}},{"value":"/   }","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":138741,"byte_end":138748,"line_start":1382,"line_end":1382,"column_start":1,"column_end":8}},{"value":"/ }\"#;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":138749,"byte_end":138757,"line_start":1383,"line_end":1383,"column_start":1,"column_end":9}},{"value":"/ let mut expected = S::default();","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":138758,"byte_end":138794,"line_start":1384,"line_end":1384,"column_start":1,"column_end":37}},{"value":"/ expected.s.push((Wrapper(1), Wrapper(\"Hi\".into())));","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":138795,"byte_end":138851,"line_start":1385,"line_end":1385,"column_start":1,"column_end":57}},{"value":"/ expected.s.push((Wrapper(2), Wrapper(\"Cake\".into())));","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":138852,"byte_end":138910,"line_start":1386,"line_end":1386,"column_start":1,"column_end":59}},{"value":"/ expected.s.push((Wrapper(99), Wrapper(\"Lie\".into())));","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":138911,"byte_end":138969,"line_start":1387,"line_end":1387,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":138970,"byte_end":138973,"line_start":1388,"line_end":1388,"column_start":1,"column_end":4}},{"value":"/ let res: S = serde_json::from_str(from).unwrap();","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":138974,"byte_end":139027,"line_start":1389,"line_end":1389,"column_start":1,"column_end":54}},{"value":"/ for ((exp_k, exp_v), (res_k, res_v)) in expected.s.iter().zip(&res.s) {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":139028,"byte_end":139103,"line_start":1390,"line_end":1390,"column_start":1,"column_end":76}},{"value":"/     assert_eq!(exp_k.0, res_k.0);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":139104,"byte_end":139141,"line_start":1391,"line_end":1391,"column_start":1,"column_end":38}},{"value":"/     assert_eq!(exp_v.0, res_v.0);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":139142,"byte_end":139179,"line_start":1392,"line_end":1392,"column_start":1,"column_end":38}},{"value":"/ }","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":139180,"byte_end":139185,"line_start":1393,"line_end":1393,"column_start":1,"column_end":6}},{"value":"/ assert_eq!(from, serde_json::to_string_pretty(&expected).unwrap());","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":139186,"byte_end":139257,"line_start":1394,"line_end":1394,"column_start":1,"column_end":72}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":139258,"byte_end":139265,"line_start":1395,"line_end":1395,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":139266,"byte_end":139269,"line_start":1396,"line_end":1396,"column_start":1,"column_end":4}},{"value":"/ In this example, the serialized format contains duplicate keys, which is not supported with [`HashMap`] or [`BTreeMap`].","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":139270,"byte_end":139394,"line_start":1397,"line_end":1397,"column_start":1,"column_end":125}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":139395,"byte_end":139398,"line_start":1398,"line_end":1398,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":139399,"byte_end":139406,"line_start":1399,"line_end":1399,"column_start":1,"column_end":8}},{"value":"/ # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":139407,"byte_end":139456,"line_start":1400,"line_end":1400,"column_start":1,"column_end":50}},{"value":"/ #","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":139457,"byte_end":139462,"line_start":1401,"line_end":1401,"column_start":1,"column_end":6}},{"value":"/ #[derive(Debug, Deserialize, Serialize, PartialEq, Default)]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":139463,"byte_end":139527,"line_start":1402,"line_end":1402,"column_start":1,"column_end":65}},{"value":"/ struct S {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":139528,"byte_end":139542,"line_start":1403,"line_end":1403,"column_start":1,"column_end":15}},{"value":"/     #[serde(with = \"serde_with::rust::tuple_list_as_map\")]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":139543,"byte_end":139605,"line_start":1404,"line_end":1404,"column_start":1,"column_end":63}},{"value":"/     s: Vec<(i32, String)>,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":139606,"byte_end":139636,"line_start":1405,"line_end":1405,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":139637,"byte_end":139642,"line_start":1406,"line_end":1406,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":139643,"byte_end":139646,"line_start":1407,"line_end":1407,"column_start":1,"column_end":4}},{"value":"/ let from = r#\"{","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":139647,"byte_end":139666,"line_start":1408,"line_end":1408,"column_start":1,"column_end":20}},{"value":"/   \"s\": {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":139667,"byte_end":139679,"line_start":1409,"line_end":1409,"column_start":1,"column_end":13}},{"value":"/     \"1\": \"Hi\",","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":139680,"byte_end":139698,"line_start":1410,"line_end":1410,"column_start":1,"column_end":19}},{"value":"/     \"1\": \"Cake\",","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":139699,"byte_end":139719,"line_start":1411,"line_end":1411,"column_start":1,"column_end":21}},{"value":"/     \"1\": \"Lie\"","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":139720,"byte_end":139738,"line_start":1412,"line_end":1412,"column_start":1,"column_end":19}},{"value":"/   }","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":139739,"byte_end":139746,"line_start":1413,"line_end":1413,"column_start":1,"column_end":8}},{"value":"/ }\"#;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":139747,"byte_end":139755,"line_start":1414,"line_end":1414,"column_start":1,"column_end":9}},{"value":"/ let mut expected = S::default();","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":139756,"byte_end":139792,"line_start":1415,"line_end":1415,"column_start":1,"column_end":37}},{"value":"/ expected.s.push((1, \"Hi\".into()));","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":139793,"byte_end":139831,"line_start":1416,"line_end":1416,"column_start":1,"column_end":39}},{"value":"/ expected.s.push((1, \"Cake\".into()));","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":139832,"byte_end":139872,"line_start":1417,"line_end":1417,"column_start":1,"column_end":41}},{"value":"/ expected.s.push((1, \"Lie\".into()));","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":139873,"byte_end":139912,"line_start":1418,"line_end":1418,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":139913,"byte_end":139916,"line_start":1419,"line_end":1419,"column_start":1,"column_end":4}},{"value":"/ let res: S = serde_json::from_str(from).unwrap();","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":139917,"byte_end":139970,"line_start":1420,"line_end":1420,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(3, res.s.len());","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":139971,"byte_end":140002,"line_start":1421,"line_end":1421,"column_start":1,"column_end":32}},{"value":"/ assert_eq!(expected, res);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":140003,"byte_end":140033,"line_start":1422,"line_end":1422,"column_start":1,"column_end":31}},{"value":"/ assert_eq!(from, serde_json::to_string_pretty(&expected).unwrap());","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":140034,"byte_end":140105,"line_start":1423,"line_end":1423,"column_start":1,"column_end":72}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":140106,"byte_end":140113,"line_start":1424,"line_end":1424,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":140114,"byte_end":140117,"line_start":1425,"line_end":1425,"column_start":1,"column_end":4}},{"value":"/ [`serde_as`]: crate::guide::serde_as","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":140118,"byte_end":140158,"line_start":1426,"line_end":1426,"column_start":1,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":595},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":140353,"byte_end":140362,"line_start":1431,"line_end":1431,"column_start":12,"column_end":21},"name":"serialize","qualname":"::rust::tuple_list_as_map::serialize","value":"pub fn serialize<'a, I, K, V, S>(I, S) -> Result<S::Ok, S::Error> where\nI: IntoIterator<Item = &'a (K, V)>, I::IntoIter: ExactSizeIterator,\nK: Serialize + 'a, V: Serialize + 'a, S: Serializer","parent":null,"children":[],"decl_id":null,"docs":" Serialize any iteration of tuples into a map.\n","sig":null,"attributes":[{"value":"/ Serialize any iteration of tuples into a map.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":140292,"byte_end":140341,"line_start":1430,"line_end":1430,"column_start":5,"column_end":54}}]},{"kind":"Function","id":{"krate":0,"index":601},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":140894,"byte_end":140905,"line_start":1448,"line_end":1448,"column_start":12,"column_end":23},"name":"deserialize","qualname":"::rust::tuple_list_as_map::deserialize","value":"pub fn deserialize<'de, I, K, V, D>(D) -> Result<I, D::Error> where\nI: FromIterator<(K, V)>, K: Deserialize, V: Deserialize, D: Deserializer","parent":null,"children":[],"decl_id":null,"docs":" Deserialize a map into an iterator of tuples.\n","sig":null,"attributes":[{"value":"/ Deserialize a map into an iterator of tuples.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":140833,"byte_end":140882,"line_start":1447,"line_end":1447,"column_start":5,"column_end":54}}]},{"kind":"Mod","id":{"krate":0,"index":638},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":144322,"byte_end":144337,"line_start":1576,"line_end":1576,"column_start":9,"column_end":24},"name":"bytes_or_string","qualname":"::rust::bytes_or_string","value":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","parent":null,"children":[{"krate":0,"index":639},{"krate":0,"index":640},{"krate":0,"index":643},{"krate":0,"index":645}],"decl_id":null,"docs":" Deserialize from bytes or string","sig":null,"attributes":[{"value":"/ Deserialize from bytes or string","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":142545,"byte_end":142581,"line_start":1509,"line_end":1509,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":142582,"byte_end":142585,"line_start":1510,"line_end":1510,"column_start":1,"column_end":4}},{"value":"/ Any Rust [`String`] can be converted into bytes, i.e., `Vec<u8>`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":142586,"byte_end":142655,"line_start":1511,"line_end":1511,"column_start":1,"column_end":70}},{"value":"/ Accepting both as formats while deserializing can be helpful while interacting with language","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":142656,"byte_end":142752,"line_start":1512,"line_end":1512,"column_start":1,"column_end":97}},{"value":"/ which have a looser definition of string than Rust.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":142753,"byte_end":142808,"line_start":1513,"line_end":1513,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":142809,"byte_end":142812,"line_start":1514,"line_end":1514,"column_start":1,"column_end":4}},{"value":"/ ## Converting to `serde_as`","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":142813,"byte_end":142844,"line_start":1515,"line_end":1515,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":142845,"byte_end":142848,"line_start":1516,"line_end":1516,"column_start":1,"column_end":4}},{"value":"/ The same functionality can be more clearly expressed via [`BytesOrString`] and using the [`serde_as`] macro.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":142849,"byte_end":142961,"line_start":1517,"line_end":1517,"column_start":1,"column_end":113}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":142962,"byte_end":142965,"line_start":1518,"line_end":1518,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":142966,"byte_end":142977,"line_start":1519,"line_end":1519,"column_start":1,"column_end":12}},{"value":"/ # #[cfg(feature = \"macros\")] {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":142978,"byte_end":143012,"line_start":1520,"line_end":1520,"column_start":1,"column_end":35}},{"value":"/ # use serde_derive::Deserialize;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":143013,"byte_end":143049,"line_start":1521,"line_end":1521,"column_start":1,"column_end":37}},{"value":"/ # use serde_with::{serde_as, BytesOrString};","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":143050,"byte_end":143098,"line_start":1522,"line_end":1522,"column_start":1,"column_end":49}},{"value":"/ #","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":143099,"byte_end":143104,"line_start":1523,"line_end":1523,"column_start":1,"column_end":6}},{"value":"/ #[serde_as]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":143105,"byte_end":143120,"line_start":1524,"line_end":1524,"column_start":1,"column_end":16}},{"value":"/ #[derive(Deserialize)]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":143121,"byte_end":143147,"line_start":1525,"line_end":1525,"column_start":1,"column_end":27}},{"value":"/ struct A {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":143148,"byte_end":143162,"line_start":1526,"line_end":1526,"column_start":1,"column_end":15}},{"value":"/     #[serde_as(as = \"BytesOrString\")]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":143163,"byte_end":143204,"line_start":1527,"line_end":1527,"column_start":1,"column_end":42}},{"value":"/     bos: Vec<u8>,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":143205,"byte_end":143226,"line_start":1528,"line_end":1528,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":143227,"byte_end":143232,"line_start":1529,"line_end":1529,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":143233,"byte_end":143240,"line_start":1530,"line_end":1530,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":143241,"byte_end":143248,"line_start":1531,"line_end":1531,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":143249,"byte_end":143252,"line_start":1532,"line_end":1532,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":143253,"byte_end":143266,"line_start":1533,"line_end":1533,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":143267,"byte_end":143278,"line_start":1534,"line_end":1534,"column_start":1,"column_end":12}},{"value":"/ # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":143279,"byte_end":143328,"line_start":1535,"line_end":1535,"column_start":1,"column_end":50}},{"value":"/ #","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":143329,"byte_end":143334,"line_start":1536,"line_end":1536,"column_start":1,"column_end":6}},{"value":"/ #[derive(Debug, Deserialize, Serialize, PartialEq, Default)]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":143335,"byte_end":143399,"line_start":1537,"line_end":1537,"column_start":1,"column_end":65}},{"value":"/ struct S {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":143400,"byte_end":143414,"line_start":1538,"line_end":1538,"column_start":1,"column_end":15}},{"value":"/     #[serde(deserialize_with = \"serde_with::rust::bytes_or_string::deserialize\")]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":143415,"byte_end":143500,"line_start":1539,"line_end":1539,"column_start":1,"column_end":86}},{"value":"/     bos: Vec<u8>,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":143501,"byte_end":143522,"line_start":1540,"line_end":1540,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":143523,"byte_end":143528,"line_start":1541,"line_end":1541,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":143529,"byte_end":143532,"line_start":1542,"line_end":1542,"column_start":1,"column_end":4}},{"value":"/ // Here we deserialize from a byte array ...","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":143533,"byte_end":143581,"line_start":1543,"line_end":1543,"column_start":1,"column_end":49}},{"value":"/ let from = r#\"{","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":143582,"byte_end":143601,"line_start":1544,"line_end":1544,"column_start":1,"column_end":20}},{"value":"/   \"bos\": [","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":143602,"byte_end":143616,"line_start":1545,"line_end":1545,"column_start":1,"column_end":15}},{"value":"/     0,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":143617,"byte_end":143627,"line_start":1546,"line_end":1546,"column_start":1,"column_end":11}},{"value":"/     1,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":143628,"byte_end":143638,"line_start":1547,"line_end":1547,"column_start":1,"column_end":11}},{"value":"/     2,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":143639,"byte_end":143649,"line_start":1548,"line_end":1548,"column_start":1,"column_end":11}},{"value":"/     3","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":143650,"byte_end":143659,"line_start":1549,"line_end":1549,"column_start":1,"column_end":10}},{"value":"/   ]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":143660,"byte_end":143667,"line_start":1550,"line_end":1550,"column_start":1,"column_end":8}},{"value":"/ }\"#;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":143668,"byte_end":143676,"line_start":1551,"line_end":1551,"column_start":1,"column_end":9}},{"value":"/ let expected = S {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":143677,"byte_end":143699,"line_start":1552,"line_end":1552,"column_start":1,"column_end":23}},{"value":"/     bos: vec![0, 1, 2, 3],","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":143700,"byte_end":143730,"line_start":1553,"line_end":1553,"column_start":1,"column_end":31}},{"value":"/ };","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":143731,"byte_end":143737,"line_start":1554,"line_end":1554,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":143738,"byte_end":143741,"line_start":1555,"line_end":1555,"column_start":1,"column_end":4}},{"value":"/ let res: S = serde_json::from_str(from).unwrap();","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":143742,"byte_end":143795,"line_start":1556,"line_end":1556,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(expected, res);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":143796,"byte_end":143826,"line_start":1557,"line_end":1557,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":143827,"byte_end":143830,"line_start":1558,"line_end":1558,"column_start":1,"column_end":4}},{"value":"/ // and serialization works too.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":143831,"byte_end":143866,"line_start":1559,"line_end":1559,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(from, serde_json::to_string_pretty(&expected).unwrap());","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":143867,"byte_end":143938,"line_start":1560,"line_end":1560,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":143939,"byte_end":143942,"line_start":1561,"line_end":1561,"column_start":1,"column_end":4}},{"value":"/ // But we also support deserializing from a String","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":143943,"byte_end":143997,"line_start":1562,"line_end":1562,"column_start":1,"column_end":55}},{"value":"/ let from = r#\"{","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":143998,"byte_end":144017,"line_start":1563,"line_end":1563,"column_start":1,"column_end":20}},{"value":"/   \"bos\": \"✨Works!\"","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":144018,"byte_end":144042,"line_start":1564,"line_end":1564,"column_start":1,"column_end":23}},{"value":"/ }\"#;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":144043,"byte_end":144051,"line_start":1565,"line_end":1565,"column_start":1,"column_end":9}},{"value":"/ let expected = S {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":144052,"byte_end":144074,"line_start":1566,"line_end":1566,"column_start":1,"column_end":23}},{"value":"/     bos: \"✨Works!\".as_bytes().to_vec(),","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":144075,"byte_end":144120,"line_start":1567,"line_end":1567,"column_start":1,"column_end":44}},{"value":"/ };","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":144121,"byte_end":144127,"line_start":1568,"line_end":1568,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":144128,"byte_end":144131,"line_start":1569,"line_end":1569,"column_start":1,"column_end":4}},{"value":"/ let res: S = serde_json::from_str(from).unwrap();","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":144132,"byte_end":144185,"line_start":1570,"line_end":1570,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(expected, res);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":144186,"byte_end":144216,"line_start":1571,"line_end":1571,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":144217,"byte_end":144224,"line_start":1572,"line_end":1572,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":144225,"byte_end":144228,"line_start":1573,"line_end":1573,"column_start":1,"column_end":4}},{"value":"/ [`BytesOrString`]: crate::BytesOrString","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":144229,"byte_end":144272,"line_start":1574,"line_end":1574,"column_start":1,"column_end":44}},{"value":"/ [`serde_as`]: crate::guide::serde_as","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":144273,"byte_end":144313,"line_start":1575,"line_end":1575,"column_start":1,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":640},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":144434,"byte_end":144445,"line_start":1580,"line_end":1580,"column_start":12,"column_end":23},"name":"deserialize","qualname":"::rust::bytes_or_string::deserialize","value":"pub fn deserialize<'de, D>(D) -> Result<Vec<u8>, D::Error> where\nD: Deserializer","parent":null,"children":[],"decl_id":null,"docs":" Deserialize a [`Vec`]`<u8>` from either bytes or string\n","sig":null,"attributes":[{"value":"/ Deserialize a [`Vec`]`<u8>` from either bytes or string","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":144363,"byte_end":144422,"line_start":1579,"line_end":1579,"column_start":5,"column_end":64}}]},{"kind":"Mod","id":{"krate":0,"index":659},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":147940,"byte_end":147956,"line_start":1700,"line_end":1700,"column_start":9,"column_end":25},"name":"default_on_error","qualname":"::rust::default_on_error","value":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","parent":null,"children":[{"krate":0,"index":660},{"krate":0,"index":661},{"krate":0,"index":665}],"decl_id":null,"docs":" Deserialize value and return [`Default`] on error","sig":null,"attributes":[{"value":"/ Deserialize value and return [`Default`] on error","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":145678,"byte_end":145731,"line_start":1625,"line_end":1625,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":145732,"byte_end":145735,"line_start":1626,"line_end":1626,"column_start":1,"column_end":4}},{"value":"/ The main use case is ignoring error while deserializing.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":145736,"byte_end":145796,"line_start":1627,"line_end":1627,"column_start":1,"column_end":61}},{"value":"/ Instead of erroring, it simply deserializes the [`Default`] variant of the type.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":145797,"byte_end":145881,"line_start":1628,"line_end":1628,"column_start":1,"column_end":85}},{"value":"/ It is not possible to find the error location, i.e., which field had a deserialization error, with this method.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":145882,"byte_end":145997,"line_start":1629,"line_end":1629,"column_start":1,"column_end":116}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":145998,"byte_end":146001,"line_start":1630,"line_end":1630,"column_start":1,"column_end":4}},{"value":"/ ## Converting to `serde_as`","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":146002,"byte_end":146033,"line_start":1631,"line_end":1631,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":146034,"byte_end":146037,"line_start":1632,"line_end":1632,"column_start":1,"column_end":4}},{"value":"/ The same functionality can be more clearly expressed via [`DefaultOnError`] and using the [`serde_as`] macro.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":146038,"byte_end":146151,"line_start":1633,"line_end":1633,"column_start":1,"column_end":114}},{"value":"/ It can be combined with other convertes as shown.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":146152,"byte_end":146205,"line_start":1634,"line_end":1634,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":146206,"byte_end":146209,"line_start":1635,"line_end":1635,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":146210,"byte_end":146221,"line_start":1636,"line_end":1636,"column_start":1,"column_end":12}},{"value":"/ # #[cfg(feature = \"macros\")] {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":146222,"byte_end":146256,"line_start":1637,"line_end":1637,"column_start":1,"column_end":35}},{"value":"/ # use serde_derive::Deserialize;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":146257,"byte_end":146293,"line_start":1638,"line_end":1638,"column_start":1,"column_end":37}},{"value":"/ # use serde_with::{serde_as, DefaultOnError, DisplayFromStr};","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":146294,"byte_end":146359,"line_start":1639,"line_end":1639,"column_start":1,"column_end":66}},{"value":"/ #","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":146360,"byte_end":146365,"line_start":1640,"line_end":1640,"column_start":1,"column_end":6}},{"value":"/ #[serde_as]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":146366,"byte_end":146381,"line_start":1641,"line_end":1641,"column_start":1,"column_end":16}},{"value":"/ #[derive(Deserialize)]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":146382,"byte_end":146408,"line_start":1642,"line_end":1642,"column_start":1,"column_end":27}},{"value":"/ struct A {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":146409,"byte_end":146423,"line_start":1643,"line_end":1643,"column_start":1,"column_end":15}},{"value":"/     #[serde_as(as = \"DefaultOnError\")]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":146424,"byte_end":146466,"line_start":1644,"line_end":1644,"column_start":1,"column_end":43}},{"value":"/     value: u32,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":146467,"byte_end":146486,"line_start":1645,"line_end":1645,"column_start":1,"column_end":20}},{"value":"/     #[serde_as(as = \"DefaultOnError<DisplayFromStr>\")]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":146487,"byte_end":146545,"line_start":1646,"line_end":1646,"column_start":1,"column_end":59}},{"value":"/     value2: u32,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":146546,"byte_end":146566,"line_start":1647,"line_end":1647,"column_start":1,"column_end":21}},{"value":"/ }","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":146567,"byte_end":146572,"line_start":1648,"line_end":1648,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":146573,"byte_end":146580,"line_start":1649,"line_end":1649,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":146581,"byte_end":146588,"line_start":1650,"line_end":1650,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":146589,"byte_end":146592,"line_start":1651,"line_end":1651,"column_start":1,"column_end":4}},{"value":"/ [`DefaultOnError`]: crate::DefaultOnError","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":146593,"byte_end":146638,"line_start":1652,"line_end":1652,"column_start":1,"column_end":46}},{"value":"/ [`serde_as`]: crate::guide::serde_as","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":146639,"byte_end":146679,"line_start":1653,"line_end":1653,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":146680,"byte_end":146683,"line_start":1654,"line_end":1654,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":146684,"byte_end":146698,"line_start":1655,"line_end":1655,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":146699,"byte_end":146702,"line_start":1656,"line_end":1656,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":146703,"byte_end":146710,"line_start":1657,"line_end":1657,"column_start":1,"column_end":8}},{"value":"/ # use serde_derive::Deserialize;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":146711,"byte_end":146747,"line_start":1658,"line_end":1658,"column_start":1,"column_end":37}},{"value":"/ #","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":146748,"byte_end":146753,"line_start":1659,"line_end":1659,"column_start":1,"column_end":6}},{"value":"/ #[derive(Deserialize)]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":146754,"byte_end":146780,"line_start":1660,"line_end":1660,"column_start":1,"column_end":27}},{"value":"/ struct A {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":146781,"byte_end":146795,"line_start":1661,"line_end":1661,"column_start":1,"column_end":15}},{"value":"/     #[serde(deserialize_with = \"serde_with::rust::default_on_error::deserialize\")]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":146796,"byte_end":146882,"line_start":1662,"line_end":1662,"column_start":1,"column_end":87}},{"value":"/     value: u32,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":146883,"byte_end":146902,"line_start":1663,"line_end":1663,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":146903,"byte_end":146908,"line_start":1664,"line_end":1664,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":146909,"byte_end":146912,"line_start":1665,"line_end":1665,"column_start":1,"column_end":4}},{"value":"/ let a: A = serde_json::from_str(r#\"{\"value\": 123}\"#).unwrap();","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":146913,"byte_end":146979,"line_start":1666,"line_end":1666,"column_start":1,"column_end":67}},{"value":"/ assert_eq!(123, a.value);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":146980,"byte_end":147009,"line_start":1667,"line_end":1667,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":147010,"byte_end":147013,"line_start":1668,"line_end":1668,"column_start":1,"column_end":4}},{"value":"/ // null is of invalid type","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":147014,"byte_end":147044,"line_start":1669,"line_end":1669,"column_start":1,"column_end":31}},{"value":"/ let a: A = serde_json::from_str(r#\"{\"value\": null}\"#).unwrap();","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":147045,"byte_end":147112,"line_start":1670,"line_end":1670,"column_start":1,"column_end":68}},{"value":"/ assert_eq!(0, a.value);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":147113,"byte_end":147140,"line_start":1671,"line_end":1671,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":147141,"byte_end":147144,"line_start":1672,"line_end":1672,"column_start":1,"column_end":4}},{"value":"/ // String is of invalid type","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":147145,"byte_end":147177,"line_start":1673,"line_end":1673,"column_start":1,"column_end":33}},{"value":"/ let a: A = serde_json::from_str(r#\"{\"value\": \"123\"}\"#).unwrap();","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":147178,"byte_end":147246,"line_start":1674,"line_end":1674,"column_start":1,"column_end":69}},{"value":"/ assert_eq!(0, a.value);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":147247,"byte_end":147274,"line_start":1675,"line_end":1675,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":147275,"byte_end":147278,"line_start":1676,"line_end":1676,"column_start":1,"column_end":4}},{"value":"/ // Map is of invalid type","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":147279,"byte_end":147308,"line_start":1677,"line_end":1677,"column_start":1,"column_end":30}},{"value":"/ let a: A = serde_json::from_str(r#\"{\"value\": {}}\"#).unwrap();","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":147309,"byte_end":147374,"line_start":1678,"line_end":1678,"column_start":1,"column_end":66}},{"value":"/ assert_eq!(0, a.value);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":147375,"byte_end":147402,"line_start":1679,"line_end":1679,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":147403,"byte_end":147406,"line_start":1680,"line_end":1680,"column_start":1,"column_end":4}},{"value":"/ // Missing entries still cause errors","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":147407,"byte_end":147448,"line_start":1681,"line_end":1681,"column_start":1,"column_end":42}},{"value":"/ assert!(serde_json::from_str::<A>(r#\"{  }\"#).is_err());","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":147449,"byte_end":147508,"line_start":1682,"line_end":1682,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":147509,"byte_end":147516,"line_start":1683,"line_end":1683,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":147517,"byte_end":147520,"line_start":1684,"line_end":1684,"column_start":1,"column_end":4}},{"value":"/ Deserializing missing values can be supported by adding the `default` field attribute:","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":147521,"byte_end":147611,"line_start":1685,"line_end":1685,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":147612,"byte_end":147615,"line_start":1686,"line_end":1686,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":147616,"byte_end":147623,"line_start":1687,"line_end":1687,"column_start":1,"column_end":8}},{"value":"/ # use serde_derive::Deserialize;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":147624,"byte_end":147660,"line_start":1688,"line_end":1688,"column_start":1,"column_end":37}},{"value":"/ #","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":147661,"byte_end":147666,"line_start":1689,"line_end":1689,"column_start":1,"column_end":6}},{"value":"/ #[derive(Deserialize)]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":147667,"byte_end":147693,"line_start":1690,"line_end":1690,"column_start":1,"column_end":27}},{"value":"/ struct B {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":147694,"byte_end":147708,"line_start":1691,"line_end":1691,"column_start":1,"column_end":15}},{"value":"/     #[serde(default, deserialize_with = \"serde_with::rust::default_on_error::deserialize\")]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":147709,"byte_end":147804,"line_start":1692,"line_end":1692,"column_start":1,"column_end":96}},{"value":"/     value: u32,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":147805,"byte_end":147824,"line_start":1693,"line_end":1693,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":147825,"byte_end":147830,"line_start":1694,"line_end":1694,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":147831,"byte_end":147834,"line_start":1695,"line_end":1695,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":147835,"byte_end":147838,"line_start":1696,"line_end":1696,"column_start":1,"column_end":4}},{"value":"/ let b: B = serde_json::from_str(r#\"{  }\"#).unwrap();","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":147839,"byte_end":147895,"line_start":1697,"line_end":1697,"column_start":1,"column_end":57}},{"value":"/ assert_eq!(0, b.value);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":147896,"byte_end":147923,"line_start":1698,"line_end":1698,"column_start":1,"column_end":28}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":147924,"byte_end":147931,"line_start":1699,"line_end":1699,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":661},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":148053,"byte_end":148064,"line_start":1704,"line_end":1704,"column_start":12,"column_end":23},"name":"deserialize","qualname":"::rust::default_on_error::deserialize","value":"pub fn deserialize<'de, D, T>(D) -> Result<T, D::Error> where D: Deserializer,\nT: Deserialize + Default","parent":null,"children":[],"decl_id":null,"docs":" Deserialize T and return the [`Default`] value on error\n","sig":null,"attributes":[{"value":"/ Deserialize T and return the [`Default`] value on error","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":147982,"byte_end":148041,"line_start":1703,"line_end":1703,"column_start":5,"column_end":64}}]},{"kind":"Function","id":{"krate":0,"index":665},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":148843,"byte_end":148852,"line_start":1726,"line_end":1726,"column_start":12,"column_end":21},"name":"serialize","qualname":"::rust::default_on_error::serialize","value":"pub fn serialize<T, S>(&T, S) -> Result<S::Ok, S::Error> where T: Serialize,\nS: Serializer","parent":null,"children":[],"decl_id":null,"docs":" Serialize value with the default serializer\n","sig":null,"attributes":[{"value":"/ Serialize value with the default serializer","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":148784,"byte_end":148831,"line_start":1725,"line_end":1725,"column_start":5,"column_end":52}}]},{"kind":"Mod","id":{"krate":0,"index":668},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":150483,"byte_end":150498,"line_start":1784,"line_end":1784,"column_start":9,"column_end":24},"name":"default_on_null","qualname":"::rust::default_on_null","value":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","parent":null,"children":[{"krate":0,"index":669},{"krate":0,"index":670},{"krate":0,"index":674}],"decl_id":null,"docs":" Deserialize default value if encountering `null`.","sig":null,"attributes":[{"value":"/ Deserialize default value if encountering `null`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":149018,"byte_end":149071,"line_start":1735,"line_end":1735,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":149072,"byte_end":149075,"line_start":1736,"line_end":1736,"column_start":1,"column_end":4}},{"value":"/ One use case are JSON APIs in which the `null` value represents some default state.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":149076,"byte_end":149163,"line_start":1737,"line_end":1737,"column_start":1,"column_end":88}},{"value":"/ This adapter allows to turn the `null` directly into the [`Default`] value of the type.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":149164,"byte_end":149255,"line_start":1738,"line_end":1738,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":149256,"byte_end":149259,"line_start":1739,"line_end":1739,"column_start":1,"column_end":4}},{"value":"/ ## Converting to `serde_as`","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":149260,"byte_end":149291,"line_start":1740,"line_end":1740,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":149292,"byte_end":149295,"line_start":1741,"line_end":1741,"column_start":1,"column_end":4}},{"value":"/ The same functionality can be more clearly expressed via [`DefaultOnNull`] and using the [`serde_as`] macro.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":149296,"byte_end":149408,"line_start":1742,"line_end":1742,"column_start":1,"column_end":113}},{"value":"/ It can be combined with other convertes as shown.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":149409,"byte_end":149462,"line_start":1743,"line_end":1743,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":149463,"byte_end":149466,"line_start":1744,"line_end":1744,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":149467,"byte_end":149478,"line_start":1745,"line_end":1745,"column_start":1,"column_end":12}},{"value":"/ # #[cfg(feature = \"macros\")] {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":149479,"byte_end":149513,"line_start":1746,"line_end":1746,"column_start":1,"column_end":35}},{"value":"/ # use serde_derive::Deserialize;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":149514,"byte_end":149550,"line_start":1747,"line_end":1747,"column_start":1,"column_end":37}},{"value":"/ # use serde_with::{serde_as, DefaultOnNull, DisplayFromStr};","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":149551,"byte_end":149615,"line_start":1748,"line_end":1748,"column_start":1,"column_end":65}},{"value":"/ #","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":149616,"byte_end":149621,"line_start":1749,"line_end":1749,"column_start":1,"column_end":6}},{"value":"/ #[serde_as]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":149622,"byte_end":149637,"line_start":1750,"line_end":1750,"column_start":1,"column_end":16}},{"value":"/ #[derive(Deserialize)]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":149638,"byte_end":149664,"line_start":1751,"line_end":1751,"column_start":1,"column_end":27}},{"value":"/ struct A {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":149665,"byte_end":149679,"line_start":1752,"line_end":1752,"column_start":1,"column_end":15}},{"value":"/     #[serde_as(as = \"DefaultOnNull\")]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":149680,"byte_end":149721,"line_start":1753,"line_end":1753,"column_start":1,"column_end":42}},{"value":"/     value: u32,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":149722,"byte_end":149741,"line_start":1754,"line_end":1754,"column_start":1,"column_end":20}},{"value":"/     #[serde_as(as = \"DefaultOnNull<DisplayFromStr>\")]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":149742,"byte_end":149799,"line_start":1755,"line_end":1755,"column_start":1,"column_end":58}},{"value":"/     value2: u32,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":149800,"byte_end":149820,"line_start":1756,"line_end":1756,"column_start":1,"column_end":21}},{"value":"/ }","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":149821,"byte_end":149826,"line_start":1757,"line_end":1757,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":149827,"byte_end":149834,"line_start":1758,"line_end":1758,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":149835,"byte_end":149842,"line_start":1759,"line_end":1759,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":149843,"byte_end":149846,"line_start":1760,"line_end":1760,"column_start":1,"column_end":4}},{"value":"/ [`DefaultOnNull`]: crate::DefaultOnNull","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":149847,"byte_end":149890,"line_start":1761,"line_end":1761,"column_start":1,"column_end":44}},{"value":"/ [`serde_as`]: crate::guide::serde_as","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":149891,"byte_end":149931,"line_start":1762,"line_end":1762,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":149932,"byte_end":149935,"line_start":1763,"line_end":1763,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":149936,"byte_end":149950,"line_start":1764,"line_end":1764,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":149951,"byte_end":149954,"line_start":1765,"line_end":1765,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":149955,"byte_end":149962,"line_start":1766,"line_end":1766,"column_start":1,"column_end":8}},{"value":"/ # use serde_derive::Deserialize;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":149963,"byte_end":149999,"line_start":1767,"line_end":1767,"column_start":1,"column_end":37}},{"value":"/ #","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":150000,"byte_end":150005,"line_start":1768,"line_end":1768,"column_start":1,"column_end":6}},{"value":"/ #[derive(Deserialize)]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":150006,"byte_end":150032,"line_start":1769,"line_end":1769,"column_start":1,"column_end":27}},{"value":"/ struct A {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":150033,"byte_end":150047,"line_start":1770,"line_end":1770,"column_start":1,"column_end":15}},{"value":"/     #[serde(deserialize_with = \"serde_with::rust::default_on_null::deserialize\")]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":150048,"byte_end":150133,"line_start":1771,"line_end":1771,"column_start":1,"column_end":86}},{"value":"/     value: u32,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":150134,"byte_end":150153,"line_start":1772,"line_end":1772,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":150154,"byte_end":150159,"line_start":1773,"line_end":1773,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":150160,"byte_end":150163,"line_start":1774,"line_end":1774,"column_start":1,"column_end":4}},{"value":"/ let a: A = serde_json::from_str(r#\"{\"value\": 123}\"#).unwrap();","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":150164,"byte_end":150230,"line_start":1775,"line_end":1775,"column_start":1,"column_end":67}},{"value":"/ assert_eq!(123, a.value);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":150231,"byte_end":150260,"line_start":1776,"line_end":1776,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":150261,"byte_end":150264,"line_start":1777,"line_end":1777,"column_start":1,"column_end":4}},{"value":"/ let a: A = serde_json::from_str(r#\"{\"value\": null}\"#).unwrap();","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":150265,"byte_end":150332,"line_start":1778,"line_end":1778,"column_start":1,"column_end":68}},{"value":"/ assert_eq!(0, a.value);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":150333,"byte_end":150360,"line_start":1779,"line_end":1779,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":150361,"byte_end":150364,"line_start":1780,"line_end":1780,"column_start":1,"column_end":4}},{"value":"/ // String is invalid type","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":150365,"byte_end":150394,"line_start":1781,"line_end":1781,"column_start":1,"column_end":30}},{"value":"/ assert!(serde_json::from_str::<A>(r#\"{\"value\": \"123\"}\"#).is_err());","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":150395,"byte_end":150466,"line_start":1782,"line_end":1782,"column_start":1,"column_end":72}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":150467,"byte_end":150474,"line_start":1783,"line_end":1783,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":670},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":150614,"byte_end":150625,"line_start":1788,"line_end":1788,"column_start":12,"column_end":23},"name":"deserialize","qualname":"::rust::default_on_null::deserialize","value":"pub fn deserialize<'de, D, T>(D) -> Result<T, D::Error> where D: Deserializer,\nT: Deserialize + Default","parent":null,"children":[],"decl_id":null,"docs":" Deserialize T and return the [`Default`] value if original value is `null`\n","sig":null,"attributes":[{"value":"/ Deserialize T and return the [`Default`] value if original value is `null`","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":150524,"byte_end":150602,"line_start":1787,"line_end":1787,"column_start":5,"column_end":83}}]},{"kind":"Function","id":{"krate":0,"index":674},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":150899,"byte_end":150908,"line_start":1797,"line_end":1797,"column_start":12,"column_end":21},"name":"serialize","qualname":"::rust::default_on_null::serialize","value":"pub fn serialize<T, S>(&T, S) -> Result<S::Ok, S::Error> where T: Serialize,\nS: Serializer","parent":null,"children":[],"decl_id":null,"docs":" Serialize value with the default serializer\n","sig":null,"attributes":[{"value":"/ Serialize value with the default serializer","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":150840,"byte_end":150887,"line_start":1796,"line_end":1796,"column_start":5,"column_end":52}}]},{"kind":"Function","id":{"krate":0,"index":677},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":153928,"byte_end":153950,"line_start":1897,"line_end":1897,"column_start":8,"column_end":30},"name":"deserialize_ignore_any","qualname":"::rust::deserialize_ignore_any","value":"pub fn deserialize_ignore_any<'de, D: Deserializer, T: Default>(D)\n-> Result<T, D::Error>","parent":null,"children":[],"decl_id":null,"docs":" Deserialize any value, ignore it, and return the default value for the type being deserialized.","sig":null,"attributes":[{"value":"/ Deserialize any value, ignore it, and return the default value for the type being deserialized.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":151074,"byte_end":151173,"line_start":1806,"line_end":1806,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":151174,"byte_end":151177,"line_start":1807,"line_end":1807,"column_start":1,"column_end":4}},{"value":"/ This function can be used in two different ways:","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":151178,"byte_end":151230,"line_start":1808,"line_end":1808,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":151231,"byte_end":151234,"line_start":1809,"line_end":1809,"column_start":1,"column_end":4}},{"value":"/ 1. It is useful for instance to create an enum with a catch-all variant that will accept any incoming data.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":151235,"byte_end":151346,"line_start":1810,"line_end":1810,"column_start":1,"column_end":112}},{"value":"/ 2. [`untagged`] enum representations do not allow the `other` annotation as the fallback enum variant.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":151347,"byte_end":151453,"line_start":1811,"line_end":1811,"column_start":1,"column_end":107}},{"value":"/     With this function you can emulate an `other` variant, which can deserialize any data carrying enum.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":151454,"byte_end":151562,"line_start":1812,"line_end":1812,"column_start":1,"column_end":109}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":151563,"byte_end":151566,"line_start":1813,"line_end":1813,"column_start":1,"column_end":4}},{"value":"/ **Note:** Using this function will prevent deserializing data-less enum variants.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":151567,"byte_end":151652,"line_start":1814,"line_end":1814,"column_start":1,"column_end":86}},{"value":"/ If this is a problem depends on the data format.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":151653,"byte_end":151705,"line_start":1815,"line_end":1815,"column_start":1,"column_end":53}},{"value":"/ For example, deserializing `\"Bar\"` as an enum in JSON would fail, since it carries no data.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":151706,"byte_end":151801,"line_start":1816,"line_end":1816,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":151802,"byte_end":151805,"line_start":1817,"line_end":1817,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":151806,"byte_end":151820,"line_start":1818,"line_end":1818,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":151821,"byte_end":151824,"line_start":1819,"line_end":1819,"column_start":1,"column_end":4}},{"value":"/ ## Deserializing a heterogeneous collection of XML nodes","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":151825,"byte_end":151885,"line_start":1820,"line_end":1820,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":151886,"byte_end":151889,"line_start":1821,"line_end":1821,"column_start":1,"column_end":4}},{"value":"/ When [`serde-xml-rs`] deserializes an XML tag to an enum, it always maps the tag","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":151890,"byte_end":151974,"line_start":1822,"line_end":1822,"column_start":1,"column_end":85}},{"value":"/ name to the enum variant name, and the tag attributes and children to the enum contents.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":151975,"byte_end":152067,"line_start":1823,"line_end":1823,"column_start":1,"column_end":93}},{"value":"/ This means that in order for an enum variant to accept any XML tag, it both has to use","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":152068,"byte_end":152158,"line_start":1824,"line_end":1824,"column_start":1,"column_end":91}},{"value":"/ `#[serde(other)]` to accept any tag name, and `#[serde(deserialize_with = \"deserialize_ignore_any\")]`","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":152159,"byte_end":152264,"line_start":1825,"line_end":1825,"column_start":1,"column_end":106}},{"value":"/ to accept any attributes and children.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":152265,"byte_end":152307,"line_start":1826,"line_end":1826,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":152308,"byte_end":152311,"line_start":1827,"line_end":1827,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":152312,"byte_end":152323,"line_start":1828,"line_end":1828,"column_start":1,"column_end":12}},{"value":"/ # use serde::Deserialize;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":152324,"byte_end":152353,"line_start":1829,"line_end":1829,"column_start":1,"column_end":30}},{"value":"/ use serde_with::rust::deserialize_ignore_any;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":152354,"byte_end":152403,"line_start":1830,"line_end":1830,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":152404,"byte_end":152407,"line_start":1831,"line_end":1831,"column_start":1,"column_end":4}},{"value":"/ # #[derive(Debug, PartialEq)]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":152408,"byte_end":152441,"line_start":1832,"line_end":1832,"column_start":1,"column_end":34}},{"value":"/ #[derive(Deserialize)]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":152442,"byte_end":152468,"line_start":1833,"line_end":1833,"column_start":1,"column_end":27}},{"value":"/ #[serde(rename_all = \"lowercase\")]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":152469,"byte_end":152507,"line_start":1834,"line_end":1834,"column_start":1,"column_end":39}},{"value":"/ enum Item {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":152508,"byte_end":152523,"line_start":1835,"line_end":1835,"column_start":1,"column_end":16}},{"value":"/     Foo(String),","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":152524,"byte_end":152544,"line_start":1836,"line_end":1836,"column_start":1,"column_end":21}},{"value":"/     Bar(String),","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":152545,"byte_end":152565,"line_start":1837,"line_end":1837,"column_start":1,"column_end":21}},{"value":"/     #[serde(other, deserialize_with = \"deserialize_ignore_any\")]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":152566,"byte_end":152634,"line_start":1838,"line_end":1838,"column_start":1,"column_end":69}},{"value":"/     Other,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":152635,"byte_end":152649,"line_start":1839,"line_end":1839,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":152650,"byte_end":152655,"line_start":1840,"line_end":1840,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":152656,"byte_end":152659,"line_start":1841,"line_end":1841,"column_start":1,"column_end":4}},{"value":"/ // Deserialize this XML","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":152660,"byte_end":152687,"line_start":1842,"line_end":1842,"column_start":1,"column_end":28}},{"value":"/ # let items: Vec<Item> = serde_xml_rs::from_str(","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":152688,"byte_end":152740,"line_start":1843,"line_end":1843,"column_start":1,"column_end":53}},{"value":"/ r\"","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":152741,"byte_end":152747,"line_start":1844,"line_end":1844,"column_start":1,"column_end":7}},{"value":"/ <foo>a</foo>","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":152748,"byte_end":152764,"line_start":1845,"line_end":1845,"column_start":1,"column_end":17}},{"value":"/ <bar>b</bar>","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":152765,"byte_end":152781,"line_start":1846,"line_end":1846,"column_start":1,"column_end":17}},{"value":"/ <foo>c</foo>","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":152782,"byte_end":152798,"line_start":1847,"line_end":1847,"column_start":1,"column_end":17}},{"value":"/ <unknown>d</unknown>","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":152799,"byte_end":152823,"line_start":1848,"line_end":1848,"column_start":1,"column_end":25}},{"value":"/ \"","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":152824,"byte_end":152829,"line_start":1849,"line_end":1849,"column_start":1,"column_end":6}},{"value":"/ # ).unwrap();","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":152830,"byte_end":152847,"line_start":1850,"line_end":1850,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":152848,"byte_end":152851,"line_start":1851,"line_end":1851,"column_start":1,"column_end":4}},{"value":"/ // into these Items","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":152852,"byte_end":152875,"line_start":1852,"line_end":1852,"column_start":1,"column_end":24}},{"value":"/ # let expected =","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":152876,"byte_end":152896,"line_start":1853,"line_end":1853,"column_start":1,"column_end":21}},{"value":"/ vec![","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":152897,"byte_end":152906,"line_start":1854,"line_end":1854,"column_start":1,"column_end":10}},{"value":"/     Item::Foo(String::from(\"a\")),","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":152907,"byte_end":152944,"line_start":1855,"line_end":1855,"column_start":1,"column_end":38}},{"value":"/     Item::Bar(String::from(\"b\")),","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":152945,"byte_end":152982,"line_start":1856,"line_end":1856,"column_start":1,"column_end":38}},{"value":"/     Item::Foo(String::from(\"c\")),","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":152983,"byte_end":153020,"line_start":1857,"line_end":1857,"column_start":1,"column_end":38}},{"value":"/     Item::Other,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":153021,"byte_end":153041,"line_start":1858,"line_end":1858,"column_start":1,"column_end":21}},{"value":"/ ]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":153042,"byte_end":153047,"line_start":1859,"line_end":1859,"column_start":1,"column_end":6}},{"value":"/ # ;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":153048,"byte_end":153055,"line_start":1860,"line_end":1860,"column_start":1,"column_end":8}},{"value":"/ # assert_eq!(expected, items);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":153056,"byte_end":153090,"line_start":1861,"line_end":1861,"column_start":1,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":153091,"byte_end":153098,"line_start":1862,"line_end":1862,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":153099,"byte_end":153102,"line_start":1863,"line_end":1863,"column_start":1,"column_end":4}},{"value":"/ ## Simulating an `other` enum variant in an `untagged` enum","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":153103,"byte_end":153166,"line_start":1864,"line_end":1864,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":153167,"byte_end":153170,"line_start":1865,"line_end":1865,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":153171,"byte_end":153182,"line_start":1866,"line_end":1866,"column_start":1,"column_end":12}},{"value":"/ # use serde::Deserialize;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":153183,"byte_end":153212,"line_start":1867,"line_end":1867,"column_start":1,"column_end":30}},{"value":"/ # use serde_json::json;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":153213,"byte_end":153240,"line_start":1868,"line_end":1868,"column_start":1,"column_end":28}},{"value":"/ use serde_with::rust::deserialize_ignore_any;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":153241,"byte_end":153290,"line_start":1869,"line_end":1869,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":153291,"byte_end":153294,"line_start":1870,"line_end":1870,"column_start":1,"column_end":4}},{"value":"/ # #[derive(Debug, PartialEq)]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":153295,"byte_end":153328,"line_start":1871,"line_end":1871,"column_start":1,"column_end":34}},{"value":"/ #[derive(Deserialize)]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":153329,"byte_end":153355,"line_start":1872,"line_end":1872,"column_start":1,"column_end":27}},{"value":"/ #[serde(untagged)]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":153356,"byte_end":153378,"line_start":1873,"line_end":1873,"column_start":1,"column_end":23}},{"value":"/ enum Item {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":153379,"byte_end":153394,"line_start":1874,"line_end":1874,"column_start":1,"column_end":16}},{"value":"/     Foo{x: u8},","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":153395,"byte_end":153414,"line_start":1875,"line_end":1875,"column_start":1,"column_end":20}},{"value":"/     #[serde(deserialize_with = \"deserialize_ignore_any\")]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":153415,"byte_end":153476,"line_start":1876,"line_end":1876,"column_start":1,"column_end":62}},{"value":"/     Other,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":153477,"byte_end":153491,"line_start":1877,"line_end":1877,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":153492,"byte_end":153497,"line_start":1878,"line_end":1878,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":153498,"byte_end":153501,"line_start":1879,"line_end":1879,"column_start":1,"column_end":4}},{"value":"/ // Deserialize this JSON","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":153502,"byte_end":153530,"line_start":1880,"line_end":1880,"column_start":1,"column_end":29}},{"value":"/ # let items: Vec<Item> = serde_json::from_value(","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":153531,"byte_end":153583,"line_start":1881,"line_end":1881,"column_start":1,"column_end":53}},{"value":"/ json!([","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":153584,"byte_end":153595,"line_start":1882,"line_end":1882,"column_start":1,"column_end":12}},{"value":"/     {\"y\": 1},","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":153596,"byte_end":153613,"line_start":1883,"line_end":1883,"column_start":1,"column_end":18}},{"value":"/     {\"x\": 1},","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":153614,"byte_end":153631,"line_start":1884,"line_end":1884,"column_start":1,"column_end":18}},{"value":"/ ])","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":153632,"byte_end":153638,"line_start":1885,"line_end":1885,"column_start":1,"column_end":7}},{"value":"/ # ).unwrap();","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":153639,"byte_end":153656,"line_start":1886,"line_end":1886,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":153657,"byte_end":153660,"line_start":1887,"line_end":1887,"column_start":1,"column_end":4}},{"value":"/ // into these Items","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":153661,"byte_end":153684,"line_start":1888,"line_end":1888,"column_start":1,"column_end":24}},{"value":"/ # let expected =","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":153685,"byte_end":153705,"line_start":1889,"line_end":1889,"column_start":1,"column_end":21}},{"value":"/ vec![Item::Other, Item::Foo{x: 1}]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":153706,"byte_end":153744,"line_start":1890,"line_end":1890,"column_start":1,"column_end":39}},{"value":"/ # ;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":153745,"byte_end":153752,"line_start":1891,"line_end":1891,"column_start":1,"column_end":8}},{"value":"/ # assert_eq!(expected, items);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":153753,"byte_end":153787,"line_start":1892,"line_end":1892,"column_start":1,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":153788,"byte_end":153795,"line_start":1893,"line_end":1893,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":153796,"byte_end":153799,"line_start":1894,"line_end":1894,"column_start":1,"column_end":4}},{"value":"/ [`serde-xml-rs`]: https://docs.rs/serde-xml-rs","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":153800,"byte_end":153850,"line_start":1895,"line_end":1895,"column_start":1,"column_end":51}},{"value":"/ [`untagged`]: https://serde.rs/enum-representations.html#untagged","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":153851,"byte_end":153920,"line_start":1896,"line_end":1896,"column_start":1,"column_end":70}}]},{"kind":"Mod","id":{"krate":0,"index":682},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ser","qualname":"::ser","value":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/mod.rs","parent":null,"children":[{"krate":0,"index":683},{"krate":0,"index":766},{"krate":0,"index":767},{"krate":0,"index":5450},{"krate":0,"index":5456},{"krate":0,"index":771},{"krate":0,"index":776},{"krate":0,"index":782}],"decl_id":null,"docs":" Module for [`SerializeAs`][] implementations","sig":null,"attributes":[{"value":"/ Module for [`SerializeAs`][] implementations","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/mod.rs","byte_start":154117,"byte_end":154165,"line_start":1,"line_end":1,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/mod.rs","byte_start":154166,"byte_end":154169,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The module contains the [`SerializeAs`][] trait and helper code.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/mod.rs","byte_start":154170,"byte_end":154238,"line_start":3,"line_end":3,"column_start":1,"column_end":69}},{"value":"/ Additionally, it contains implementations of [`SerializeAs`][] for types defined in the Rust Standard Library or this crate.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/mod.rs","byte_start":154239,"byte_end":154367,"line_start":4,"line_end":4,"column_start":1,"column_end":129}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/mod.rs","byte_start":154368,"byte_end":154371,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ You can find more details on how to implement this trait for your types in the documentation of the [`SerializeAs`][] trait and details about the usage in the [user guide][].","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/mod.rs","byte_start":154372,"byte_end":154550,"line_start":6,"line_end":6,"column_start":1,"column_end":179}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/mod.rs","byte_start":154551,"byte_end":154554,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ [user guide]: crate::guide","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/mod.rs","byte_start":154555,"byte_end":154585,"line_start":8,"line_end":8,"column_start":1,"column_end":31}}]},{"kind":"Trait","id":{"krate":0,"index":767},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/mod.rs","byte_start":158179,"byte_end":158190,"line_start":103,"line_end":103,"column_start":11,"column_end":22},"name":"SerializeAs","qualname":"::ser::SerializeAs","value":"SerializeAs<T: ?Sized>","parent":null,"children":[{"krate":0,"index":769}],"decl_id":null,"docs":" A **data structure** that can be serialized into any data format supported by Serde, analogue to [`Serialize`].","sig":null,"attributes":[{"value":"/ A **data structure** that can be serialized into any data format supported by Serde, analogue to [`Serialize`].","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/mod.rs","byte_start":154614,"byte_end":154729,"line_start":14,"line_end":14,"column_start":1,"column_end":116}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/mod.rs","byte_start":154730,"byte_end":154733,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ The trait is analogue to the [`serde::Serialize`][`Serialize`] trait, with the same meaning of input and output arguments.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/mod.rs","byte_start":154734,"byte_end":154860,"line_start":16,"line_end":16,"column_start":1,"column_end":127}},{"value":"/ It can and should the implemented using the same code structure as the [`Serialize`] trait.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/mod.rs","byte_start":154861,"byte_end":154956,"line_start":17,"line_end":17,"column_start":1,"column_end":96}},{"value":"/ As such, the same advice for [implementing `Serialize`][impl-serialize] applies here.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/mod.rs","byte_start":154957,"byte_end":155046,"line_start":18,"line_end":18,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/mod.rs","byte_start":155047,"byte_end":155050,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Differences to [`Serialize`]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/mod.rs","byte_start":155051,"byte_end":155085,"line_start":20,"line_end":20,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/mod.rs","byte_start":155086,"byte_end":155089,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ The trait is only required for container-like types or types implementing specific conversion functions.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/mod.rs","byte_start":155090,"byte_end":155198,"line_start":22,"line_end":22,"column_start":1,"column_end":109}},{"value":"/ Container-like types are [`Vec`][], [`BTreeMap`][], but also [`Option`][] and [`Box`][].","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/mod.rs","byte_start":155199,"byte_end":155291,"line_start":23,"line_end":23,"column_start":1,"column_end":93}},{"value":"/ Conversion types serialize into a different serde data type.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/mod.rs","byte_start":155292,"byte_end":155356,"line_start":24,"line_end":24,"column_start":1,"column_end":65}},{"value":"/ For example, [`DisplayFromStr`] uses the [`Display`] trait to serialize a String and [`DurationSeconds`] converts a [`Duration`] into either String or integer values.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/mod.rs","byte_start":155357,"byte_end":155527,"line_start":25,"line_end":25,"column_start":1,"column_end":171}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/mod.rs","byte_start":155528,"byte_end":155531,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ This code shows how to implement [`Serialize`] for [`Box`]:","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/mod.rs","byte_start":155532,"byte_end":155595,"line_start":27,"line_end":27,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/mod.rs","byte_start":155596,"byte_end":155599,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ```rust,ignore","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/mod.rs","byte_start":155600,"byte_end":155618,"line_start":29,"line_end":29,"column_start":1,"column_end":19}},{"value":"/ impl<T> Serialize for Box<T>","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/mod.rs","byte_start":155619,"byte_end":155651,"line_start":30,"line_end":30,"column_start":1,"column_end":33}},{"value":"/ where","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/mod.rs","byte_start":155652,"byte_end":155661,"line_start":31,"line_end":31,"column_start":1,"column_end":10}},{"value":"/     T: Serialize,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/mod.rs","byte_start":155662,"byte_end":155683,"line_start":32,"line_end":32,"column_start":1,"column_end":22}},{"value":"/ {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/mod.rs","byte_start":155684,"byte_end":155689,"line_start":33,"line_end":33,"column_start":1,"column_end":6}},{"value":"/     #[inline]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/mod.rs","byte_start":155690,"byte_end":155707,"line_start":34,"line_end":34,"column_start":1,"column_end":18}},{"value":"/     fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/mod.rs","byte_start":155708,"byte_end":155780,"line_start":35,"line_end":35,"column_start":1,"column_end":73}},{"value":"/     where","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/mod.rs","byte_start":155781,"byte_end":155794,"line_start":36,"line_end":36,"column_start":1,"column_end":14}},{"value":"/         S: Serializer,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/mod.rs","byte_start":155795,"byte_end":155821,"line_start":37,"line_end":37,"column_start":1,"column_end":27}},{"value":"/     {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/mod.rs","byte_start":155822,"byte_end":155831,"line_start":38,"line_end":38,"column_start":1,"column_end":10}},{"value":"/         (**self).serialize(serializer)","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/mod.rs","byte_start":155832,"byte_end":155874,"line_start":39,"line_end":39,"column_start":1,"column_end":43}},{"value":"/     }","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/mod.rs","byte_start":155875,"byte_end":155884,"line_start":40,"line_end":40,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/mod.rs","byte_start":155885,"byte_end":155890,"line_start":41,"line_end":41,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/mod.rs","byte_start":155891,"byte_end":155898,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/mod.rs","byte_start":155899,"byte_end":155902,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ and this code shows how to do the same using [`SerializeAs`][]:","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/mod.rs","byte_start":155903,"byte_end":155970,"line_start":44,"line_end":44,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/mod.rs","byte_start":155971,"byte_end":155974,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ ```rust,ignore","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/mod.rs","byte_start":155975,"byte_end":155993,"line_start":46,"line_end":46,"column_start":1,"column_end":19}},{"value":"/ impl<T, U> SerializeAs<Box<T>> for Box<U>","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/mod.rs","byte_start":155994,"byte_end":156039,"line_start":47,"line_end":47,"column_start":1,"column_end":46}},{"value":"/ where","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/mod.rs","byte_start":156040,"byte_end":156049,"line_start":48,"line_end":48,"column_start":1,"column_end":10}},{"value":"/     U: SerializeAs<T>,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/mod.rs","byte_start":156050,"byte_end":156076,"line_start":49,"line_end":49,"column_start":1,"column_end":27}},{"value":"/ {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/mod.rs","byte_start":156077,"byte_end":156082,"line_start":50,"line_end":50,"column_start":1,"column_end":6}},{"value":"/     fn serialize_as<S>(source: &Box<T>, serializer: S) -> Result<S::Ok, S::Error>","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/mod.rs","byte_start":156083,"byte_end":156168,"line_start":51,"line_end":51,"column_start":1,"column_end":86}},{"value":"/     where","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/mod.rs","byte_start":156169,"byte_end":156182,"line_start":52,"line_end":52,"column_start":1,"column_end":14}},{"value":"/         S: Serializer,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/mod.rs","byte_start":156183,"byte_end":156209,"line_start":53,"line_end":53,"column_start":1,"column_end":27}},{"value":"/     {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/mod.rs","byte_start":156210,"byte_end":156219,"line_start":54,"line_end":54,"column_start":1,"column_end":10}},{"value":"/         SerializeAsWrap::<T, U>::new(source).serialize(serializer)","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/mod.rs","byte_start":156220,"byte_end":156290,"line_start":55,"line_end":55,"column_start":1,"column_end":71}},{"value":"/     }","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/mod.rs","byte_start":156291,"byte_end":156300,"line_start":56,"line_end":56,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/mod.rs","byte_start":156301,"byte_end":156306,"line_start":57,"line_end":57,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/mod.rs","byte_start":156307,"byte_end":156314,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/mod.rs","byte_start":156315,"byte_end":156318,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ It uses two type parameters, `T` and `U` instead of only one and performs the serialization step using the `SerializeAsWrap` type.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/mod.rs","byte_start":156319,"byte_end":156453,"line_start":60,"line_end":60,"column_start":1,"column_end":135}},{"value":"/ The `T` type is the on the Rust side before serialization, whereas the `U` type determines how the value will be serialized.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/mod.rs","byte_start":156454,"byte_end":156582,"line_start":61,"line_end":61,"column_start":1,"column_end":129}},{"value":"/ These two changes are usually enough to make a container type implement [`SerializeAs`][].","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/mod.rs","byte_start":156583,"byte_end":156677,"line_start":62,"line_end":62,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/mod.rs","byte_start":156678,"byte_end":156681,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ [`SerializeAsWrap`] is a piece of glue code which turns [`SerializeAs`] into a serde compatible datatype, by converting all calls to `serialize` into `serialize_as`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/mod.rs","byte_start":156682,"byte_end":156851,"line_start":64,"line_end":64,"column_start":1,"column_end":170}},{"value":"/ This allows us to implement [`SerializeAs`] such that it can be applied recursively throughout the whole data structure.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/mod.rs","byte_start":156852,"byte_end":156976,"line_start":65,"line_end":65,"column_start":1,"column_end":125}},{"value":"/ This is mostly important for container types, such as `Vec` or `BTreeMap`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/mod.rs","byte_start":156977,"byte_end":157055,"line_start":66,"line_end":66,"column_start":1,"column_end":79}},{"value":"/ In a `BTreeMap` this allows us to specify two different serialization behaviors, one for key and one for value, using the [`SerializeAs`] trait.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/mod.rs","byte_start":157056,"byte_end":157204,"line_start":67,"line_end":67,"column_start":1,"column_end":149}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/mod.rs","byte_start":157205,"byte_end":157208,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ ## Implementing a converter Type","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/mod.rs","byte_start":157209,"byte_end":157245,"line_start":69,"line_end":69,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/mod.rs","byte_start":157246,"byte_end":157249,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ This shows a simplified implementation for [`DisplayFromStr`].","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/mod.rs","byte_start":157250,"byte_end":157316,"line_start":71,"line_end":71,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/mod.rs","byte_start":157317,"byte_end":157320,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/mod.rs","byte_start":157321,"byte_end":157332,"line_start":73,"line_end":73,"column_start":1,"column_end":12}},{"value":"/ # #[cfg(all(feature = \"macros\"))] {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/mod.rs","byte_start":157333,"byte_end":157372,"line_start":74,"line_end":74,"column_start":1,"column_end":40}},{"value":"/ # use serde_with::SerializeAs;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/mod.rs","byte_start":157373,"byte_end":157407,"line_start":75,"line_end":75,"column_start":1,"column_end":35}},{"value":"/ # use std::fmt::Display;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/mod.rs","byte_start":157408,"byte_end":157436,"line_start":76,"line_end":76,"column_start":1,"column_end":29}},{"value":"/ struct DisplayFromStr;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/mod.rs","byte_start":157437,"byte_end":157463,"line_start":77,"line_end":77,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/mod.rs","byte_start":157464,"byte_end":157467,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ impl<T> SerializeAs<T> for DisplayFromStr","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/mod.rs","byte_start":157468,"byte_end":157513,"line_start":79,"line_end":79,"column_start":1,"column_end":46}},{"value":"/ where","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/mod.rs","byte_start":157514,"byte_end":157523,"line_start":80,"line_end":80,"column_start":1,"column_end":10}},{"value":"/     T: Display,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/mod.rs","byte_start":157524,"byte_end":157543,"line_start":81,"line_end":81,"column_start":1,"column_end":20}},{"value":"/ {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/mod.rs","byte_start":157544,"byte_end":157549,"line_start":82,"line_end":82,"column_start":1,"column_end":6}},{"value":"/     fn serialize_as<S>(source: &T, serializer: S) -> Result<S::Ok, S::Error>","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/mod.rs","byte_start":157550,"byte_end":157630,"line_start":83,"line_end":83,"column_start":1,"column_end":81}},{"value":"/     where","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/mod.rs","byte_start":157631,"byte_end":157644,"line_start":84,"line_end":84,"column_start":1,"column_end":14}},{"value":"/         S: serde::Serializer,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/mod.rs","byte_start":157645,"byte_end":157678,"line_start":85,"line_end":85,"column_start":1,"column_end":34}},{"value":"/     {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/mod.rs","byte_start":157679,"byte_end":157688,"line_start":86,"line_end":86,"column_start":1,"column_end":10}},{"value":"/         serializer.serialize_str(&source.to_string())","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/mod.rs","byte_start":157689,"byte_end":157746,"line_start":87,"line_end":87,"column_start":1,"column_end":58}},{"value":"/     }","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/mod.rs","byte_start":157747,"byte_end":157756,"line_start":88,"line_end":88,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/mod.rs","byte_start":157757,"byte_end":157762,"line_start":89,"line_end":89,"column_start":1,"column_end":6}},{"value":"/ #","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/mod.rs","byte_start":157763,"byte_end":157768,"line_start":90,"line_end":90,"column_start":1,"column_end":6}},{"value":"/ # #[serde_with::serde_as]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/mod.rs","byte_start":157769,"byte_end":157798,"line_start":91,"line_end":91,"column_start":1,"column_end":30}},{"value":"/ # #[derive(serde::Serialize)]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/mod.rs","byte_start":157799,"byte_end":157832,"line_start":92,"line_end":92,"column_start":1,"column_end":34}},{"value":"/ # struct S (#[serde_as(as = \"DisplayFromStr\")] bool);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/mod.rs","byte_start":157833,"byte_end":157890,"line_start":93,"line_end":93,"column_start":1,"column_end":58}},{"value":"/ #","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/mod.rs","byte_start":157891,"byte_end":157896,"line_start":94,"line_end":94,"column_start":1,"column_end":6}},{"value":"/ # assert_eq!(r#\"\"false\"\"#, serde_json::to_string(&S(false)).unwrap());","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/mod.rs","byte_start":157897,"byte_end":157971,"line_start":95,"line_end":95,"column_start":1,"column_end":75}},{"value":"/ # }","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/mod.rs","byte_start":157972,"byte_end":157979,"line_start":96,"line_end":96,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/mod.rs","byte_start":157980,"byte_end":157987,"line_start":97,"line_end":97,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/mod.rs","byte_start":157988,"byte_end":157991,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ [`BTreeMap`]: std::collections::BTreeMap","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/mod.rs","byte_start":157992,"byte_end":158036,"line_start":99,"line_end":99,"column_start":1,"column_end":45}},{"value":"/ [`Display`]: std::fmt::Display","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/mod.rs","byte_start":158037,"byte_end":158071,"line_start":100,"line_end":100,"column_start":1,"column_end":35}},{"value":"/ [`Duration`]: std::time::Duration","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/mod.rs","byte_start":158072,"byte_end":158109,"line_start":101,"line_end":101,"column_start":1,"column_end":38}},{"value":"/ [impl-serialize]: https://serde.rs/impl-serialize.html","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/mod.rs","byte_start":158110,"byte_end":158168,"line_start":102,"line_end":102,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":769},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/mod.rs","byte_start":158273,"byte_end":158285,"line_start":105,"line_end":105,"column_start":8,"column_end":20},"name":"serialize_as","qualname":"::ser::SerializeAs::serialize_as","value":"pub fn serialize_as<S>(&T, S) -> Result<S::Ok, S::Error> where S: Serializer","parent":{"krate":0,"index":767},"children":[],"decl_id":null,"docs":" Serialize this value into the given Serde serializer.\n","sig":null,"attributes":[{"value":"/ Serialize this value into the given Serde serializer.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/mod.rs","byte_start":158208,"byte_end":158265,"line_start":104,"line_end":104,"column_start":5,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":5450},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/mod.rs","byte_start":158478,"byte_end":158493,"line_start":112,"line_end":112,"column_start":12,"column_end":27},"name":"SerializeAsWrap","qualname":"::ser::SerializeAsWrap","value":"SerializeAsWrap {  }","parent":null,"children":[{"krate":0,"index":5454},{"krate":0,"index":5455}],"decl_id":null,"docs":" Helper type to implement [`SerializeAs`] for container-like types.\n","sig":null,"attributes":[{"value":"/ Helper type to implement [`SerializeAs`] for container-like types.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/mod.rs","byte_start":158379,"byte_end":158449,"line_start":110,"line_end":110,"column_start":1,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":775},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/mod.rs","byte_start":158710,"byte_end":158713,"line_start":123,"line_end":123,"column_start":12,"column_end":15},"name":"new","qualname":"<SerializeAsWrap>::new","value":"pub fn new(&'a T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create new instance with provided value.\n","sig":null,"attributes":[{"value":"/ Create new instance with provided value.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/mod.rs","byte_start":158654,"byte_end":158698,"line_start":122,"line_end":122,"column_start":5,"column_end":49}}]},{"kind":"Mod","id":{"krate":0,"index":996},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/with_prefix.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"with_prefix","qualname":"::with_prefix","value":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/with_prefix.rs","parent":null,"children":[{"krate":0,"index":997},{"krate":0,"index":998},{"krate":0,"index":999},{"krate":0,"index":1000},{"krate":0,"index":1001},{"krate":0,"index":1002},{"krate":0,"index":1003},{"krate":0,"index":6503},{"krate":0,"index":1004},{"krate":0,"index":1005},{"krate":0,"index":1006},{"krate":0,"index":1007},{"krate":0,"index":1008},{"krate":0,"index":1009},{"krate":0,"index":1010},{"krate":0,"index":1011},{"krate":0,"index":1012},{"krate":0,"index":1013},{"krate":0,"index":1014},{"krate":0,"index":1016},{"krate":0,"index":1021},{"krate":0,"index":1026},{"krate":0,"index":1069},{"krate":0,"index":1082},{"krate":0,"index":1090},{"krate":0,"index":1097},{"krate":0,"index":1108},{"krate":0,"index":1116},{"krate":0,"index":1125},{"krate":0,"index":1131},{"krate":0,"index":1141},{"krate":0,"index":1148}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1016},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/with_prefix.rs","byte_start":197285,"byte_end":197295,"line_start":141,"line_end":141,"column_start":12,"column_end":22},"name":"WithPrefix","qualname":"::with_prefix::WithPrefix","value":"WithPrefix { delegate, prefix }","parent":null,"children":[{"krate":0,"index":1019},{"krate":0,"index":1020}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/with_prefix.rs","byte_start":197234,"byte_end":197273,"line_start":140,"line_end":140,"column_start":1,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":1019},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/with_prefix.rs","byte_start":197313,"byte_end":197321,"line_start":142,"line_end":142,"column_start":9,"column_end":17},"name":"delegate","qualname":"::with_prefix::WithPrefix::delegate","value":"T","parent":{"krate":0,"index":1016},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1020},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/with_prefix.rs","byte_start":197334,"byte_end":197340,"line_start":143,"line_end":143,"column_start":9,"column_end":15},"name":"prefix","qualname":"::with_prefix::WithPrefix::prefix","value":"&'a str","parent":{"krate":0,"index":1016},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1125},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/with_prefix.rs","byte_start":207689,"byte_end":207705,"line_start":517,"line_end":517,"column_start":12,"column_end":28},"name":"WithPrefixOption","qualname":"::with_prefix::WithPrefixOption","value":"WithPrefixOption {  }","parent":null,"children":[{"krate":0,"index":1128},{"krate":0,"index":1129},{"krate":0,"index":1130}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/with_prefix.rs","byte_start":207638,"byte_end":207677,"line_start":516,"line_end":516,"column_start":1,"column_end":40}}]},{"kind":"Trait","id":{"krate":0,"index":1168},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":9974,"byte_end":9983,"line_start":277,"line_end":277,"column_start":11,"column_end":20},"name":"Separator","qualname":"::Separator","value":"Separator","parent":null,"children":[{"krate":0,"index":1169}],"decl_id":null,"docs":" Separator for string-based collection de/serialization\n","sig":null,"attributes":[{"value":"/ Separator for string-based collection de/serialization","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":9905,"byte_end":9963,"line_start":276,"line_end":276,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1169},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":10074,"byte_end":10083,"line_start":279,"line_end":279,"column_start":8,"column_end":17},"name":"separator","qualname":"::Separator::separator","value":"pub fn separator() -> &'static str","parent":{"krate":0,"index":1168},"children":[],"decl_id":null,"docs":" Return the string delimiting two elements in the string-based collection\n","sig":null,"attributes":[{"value":"/ Return the string delimiting two elements in the string-based collection","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":9990,"byte_end":10066,"line_start":278,"line_end":278,"column_start":5,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":5682},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":10240,"byte_end":10254,"line_start":284,"line_end":284,"column_start":12,"column_end":26},"name":"SpaceSeparator","qualname":"::SpaceSeparator","value":"","parent":null,"children":[],"decl_id":null,"docs":" Predefined separator using a single space\n","sig":null,"attributes":[{"value":"/ Predefined separator using a single space","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":10106,"byte_end":10151,"line_start":282,"line_end":282,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":5704},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":10499,"byte_end":10513,"line_start":295,"line_end":295,"column_start":12,"column_end":26},"name":"CommaSeparator","qualname":"::CommaSeparator","value":"","parent":null,"children":[],"decl_id":null,"docs":" Predefined separator using a single comma\n","sig":null,"attributes":[{"value":"/ Predefined separator using a single comma","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":10365,"byte_end":10410,"line_start":293,"line_end":293,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":5726},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":12746,"byte_end":12748,"line_start":345,"line_end":345,"column_start":12,"column_end":14},"name":"As","qualname":"::As","value":"","parent":null,"children":[],"decl_id":null,"docs":" Adapter to convert from `serde_as` to the serde traits.","sig":null,"attributes":[{"value":"/ Adapter to convert from `serde_as` to the serde traits.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":10624,"byte_end":10683,"line_start":304,"line_end":304,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":10684,"byte_end":10687,"line_start":305,"line_end":305,"column_start":1,"column_end":4}},{"value":"/ The `As` type adapter allows to use types implementing [`DeserializeAs`][] or [`SerializeAs`][] in place of serde's with-annotation.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":10688,"byte_end":10824,"line_start":306,"line_end":306,"column_start":1,"column_end":137}},{"value":"/ The with-annotation allows to run custom code when de/serializing, however it is quite inflexible.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":10825,"byte_end":10927,"line_start":307,"line_end":307,"column_start":1,"column_end":103}},{"value":"/ The traits [`DeserializeAs`][]/[`SerializeAs`][] are more flexible, as they allow composition and nesting of types to create more complex de/serialization behavior.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":10928,"byte_end":11096,"line_start":308,"line_end":308,"column_start":1,"column_end":169}},{"value":"/ However, they are not directly compatible with serde, as they are not provided by serde.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":11097,"byte_end":11189,"line_start":309,"line_end":309,"column_start":1,"column_end":93}},{"value":"/ The `As` type adapter makes them compatible, by forwarding the function calls to `serialize`/`deserialize` to the corresponding functions `serialize_as` and `deserialize_as`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":11190,"byte_end":11368,"line_start":310,"line_end":310,"column_start":1,"column_end":179}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":11369,"byte_end":11372,"line_start":311,"line_end":311,"column_start":1,"column_end":4}},{"value":"/ It is not required to use this type directly.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":11373,"byte_end":11422,"line_start":312,"line_end":312,"column_start":1,"column_end":50}},{"value":"/ Instead, it is highly encouraged to use the [`#[serde_as]`][serde_as] attribute since it includes further usability improvements.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":11423,"byte_end":11556,"line_start":313,"line_end":313,"column_start":1,"column_end":134}},{"value":"/ If the use of the use of the proc-macro is not acceptable, then `As` can be used directly with serde.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":11557,"byte_end":11662,"line_start":314,"line_end":314,"column_start":1,"column_end":106}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":11663,"byte_end":11666,"line_start":315,"line_end":315,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":11667,"byte_end":11678,"line_start":316,"line_end":316,"column_start":1,"column_end":12}},{"value":"/ # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":11679,"byte_end":11728,"line_start":317,"line_end":317,"column_start":1,"column_end":50}},{"value":"/ # use serde_with::{As, DisplayFromStr};","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":11729,"byte_end":11772,"line_start":318,"line_end":318,"column_start":1,"column_end":44}},{"value":"/ #","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":11773,"byte_end":11778,"line_start":319,"line_end":319,"column_start":1,"column_end":6}},{"value":"/ #[derive(Deserialize, Serialize)]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":11779,"byte_end":11816,"line_start":320,"line_end":320,"column_start":1,"column_end":38}},{"value":"/ # struct S {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":11817,"byte_end":11833,"line_start":321,"line_end":321,"column_start":1,"column_end":17}},{"value":"/ // Serialize numbers as sequence of strings, using Display and FromStr","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":11834,"byte_end":11908,"line_start":322,"line_end":322,"column_start":1,"column_end":75}},{"value":"/ #[serde(with = \"As::<Vec<DisplayFromStr>>\")]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":11909,"byte_end":11957,"line_start":323,"line_end":323,"column_start":1,"column_end":49}},{"value":"/ field: Vec<u8>,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":11958,"byte_end":11977,"line_start":324,"line_end":324,"column_start":1,"column_end":20}},{"value":"/ # }","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":11978,"byte_end":11985,"line_start":325,"line_end":325,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":11986,"byte_end":11993,"line_start":326,"line_end":326,"column_start":1,"column_end":8}},{"value":"/ If the normal `Deserialize`/`Serialize` traits should be used, the placeholder type [`Same`] can be used.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":11994,"byte_end":12103,"line_start":327,"line_end":327,"column_start":1,"column_end":110}},{"value":"/ It implements [`DeserializeAs`][]/[`SerializeAs`][], when the underlying type implements `Deserialize`/`Serialize`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":12104,"byte_end":12223,"line_start":328,"line_end":328,"column_start":1,"column_end":120}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":12224,"byte_end":12227,"line_start":329,"line_end":329,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":12228,"byte_end":12239,"line_start":330,"line_end":330,"column_start":1,"column_end":12}},{"value":"/ # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":12240,"byte_end":12289,"line_start":331,"line_end":331,"column_start":1,"column_end":50}},{"value":"/ # use serde_with::{As, DisplayFromStr, Same};","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":12290,"byte_end":12339,"line_start":332,"line_end":332,"column_start":1,"column_end":50}},{"value":"/ # use std::collections::BTreeMap;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":12340,"byte_end":12377,"line_start":333,"line_end":333,"column_start":1,"column_end":38}},{"value":"/ #","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":12378,"byte_end":12383,"line_start":334,"line_end":334,"column_start":1,"column_end":6}},{"value":"/ #[derive(Deserialize, Serialize)]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":12384,"byte_end":12421,"line_start":335,"line_end":335,"column_start":1,"column_end":38}},{"value":"/ # struct S {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":12422,"byte_end":12438,"line_start":336,"line_end":336,"column_start":1,"column_end":17}},{"value":"/ // Serialize map, turn keys into strings but keep type of value","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":12439,"byte_end":12506,"line_start":337,"line_end":337,"column_start":1,"column_end":68}},{"value":"/ #[serde(with = \"As::<BTreeMap<DisplayFromStr, Same>>\")]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":12507,"byte_end":12566,"line_start":338,"line_end":338,"column_start":1,"column_end":60}},{"value":"/ field: BTreeMap<u8, i32>,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":12567,"byte_end":12596,"line_start":339,"line_end":339,"column_start":1,"column_end":30}},{"value":"/ # }","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":12597,"byte_end":12604,"line_start":340,"line_end":340,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":12605,"byte_end":12612,"line_start":341,"line_end":341,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":12613,"byte_end":12616,"line_start":342,"line_end":342,"column_start":1,"column_end":4}},{"value":"/ [serde_as]: https://docs.rs/serde_with/1.6.4/serde_with/attr.serde_as.html","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":12617,"byte_end":12695,"line_start":343,"line_end":343,"column_start":1,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":1176},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":13040,"byte_end":13049,"line_start":353,"line_end":353,"column_start":12,"column_end":21},"name":"serialize","qualname":"<As<T>>::serialize","value":"pub fn serialize<S, I: ?Sized>(&I, S) -> Result<S::Ok, S::Error> where\nS: Serializer, T: SerializeAs<I>, I","parent":null,"children":[],"decl_id":null,"docs":" Serialize type `T` using [`SerializeAs`][]","sig":null,"attributes":[{"value":"/ Serialize type `T` using [`SerializeAs`][]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":12806,"byte_end":12852,"line_start":348,"line_end":348,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":12857,"byte_end":12860,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ The function signature is compatible with [serde's with-annotation][with-annotation].","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":12865,"byte_end":12954,"line_start":350,"line_end":350,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":12959,"byte_end":12962,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ [with-annotation]: https://serde.rs/field-attrs.html#with","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":12967,"byte_end":13028,"line_start":352,"line_end":352,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1179},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":13486,"byte_end":13497,"line_start":367,"line_end":367,"column_start":12,"column_end":23},"name":"deserialize","qualname":"<As<T>>::deserialize","value":"pub fn deserialize<'de, D, I>(D) -> Result<I, D::Error> where\nT: DeserializeAs, D: Deserializer","parent":null,"children":[],"decl_id":null,"docs":" Deserialize type `T` using [`DeserializeAs`][]","sig":null,"attributes":[{"value":"/ Deserialize type `T` using [`DeserializeAs`][]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":13248,"byte_end":13298,"line_start":362,"line_end":362,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":13303,"byte_end":13306,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ The function signature is compatible with [serde's with-annotation][with-annotation].","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":13311,"byte_end":13400,"line_start":364,"line_end":364,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":13405,"byte_end":13408,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ [with-annotation]: https://serde.rs/field-attrs.html#with","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":13413,"byte_end":13474,"line_start":366,"line_end":366,"column_start":5,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":5741},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":14029,"byte_end":14033,"line_start":382,"line_end":382,"column_start":12,"column_end":16},"name":"Same","qualname":"::Same","value":"","parent":null,"children":[],"decl_id":null,"docs":" Adapter to convert from `serde_as` to the serde traits.","sig":null,"attributes":[{"value":"/ Adapter to convert from `serde_as` to the serde traits.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":13678,"byte_end":13737,"line_start":376,"line_end":376,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":13738,"byte_end":13741,"line_start":377,"line_end":377,"column_start":1,"column_end":4}},{"value":"/ This is the counter-type to [`As`][].","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":13742,"byte_end":13783,"line_start":378,"line_end":378,"column_start":1,"column_end":42}},{"value":"/ It can be used whenever a type implementing [`DeserializeAs`][]/[`SerializeAs`][] is required but the normal `Deserialize`/`Serialize` traits should be used.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":13784,"byte_end":13945,"line_start":379,"line_end":379,"column_start":1,"column_end":162}},{"value":"/ Check [`As`] for an example.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":13946,"byte_end":13978,"line_start":380,"line_end":380,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":5750},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":15839,"byte_end":15853,"line_start":433,"line_end":433,"column_start":12,"column_end":26},"name":"DisplayFromStr","qualname":"::DisplayFromStr","value":"","parent":null,"children":[],"decl_id":null,"docs":" De/Serialize using [`Display`] and [`FromStr`] implementation","sig":null,"attributes":[{"value":"/ De/Serialize using [`Display`] and [`FromStr`] implementation","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":14036,"byte_end":14101,"line_start":384,"line_end":384,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":14102,"byte_end":14105,"line_start":385,"line_end":385,"column_start":1,"column_end":4}},{"value":"/ This allows to deserialize a string as a number.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":14106,"byte_end":14158,"line_start":386,"line_end":386,"column_start":1,"column_end":53}},{"value":"/ It can be very useful for serialization formats like JSON, which do not support integer","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":14159,"byte_end":14250,"line_start":387,"line_end":387,"column_start":1,"column_end":92}},{"value":"/ numbers and have to resort to strings to represent them.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":14251,"byte_end":14311,"line_start":388,"line_end":388,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":14312,"byte_end":14315,"line_start":389,"line_end":389,"column_start":1,"column_end":4}},{"value":"/ Another use case is types with [`Display`] and [`FromStr`] implementations, but without serde","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":14316,"byte_end":14413,"line_start":390,"line_end":390,"column_start":1,"column_end":98}},{"value":"/ support, which can be found in some crates.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":14414,"byte_end":14461,"line_start":391,"line_end":391,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":14462,"byte_end":14465,"line_start":392,"line_end":392,"column_start":1,"column_end":4}},{"value":"/ If you control the type you want to de/serialize, you can instead use the two derive macros, [`SerializeDisplay`] and [`DeserializeFromStr`].","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":14466,"byte_end":14611,"line_start":393,"line_end":393,"column_start":1,"column_end":146}},{"value":"/ They properly implement the traits [`Serialize`] and [`Deserialize`] such that user of the type no longer have to use the `serde_as` system.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":14612,"byte_end":14756,"line_start":394,"line_end":394,"column_start":1,"column_end":145}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":14757,"byte_end":14760,"line_start":395,"line_end":395,"column_start":1,"column_end":4}},{"value":"/ The same functionality is also available as [`serde_with::rust::display_fromstr`][crate::rust::display_fromstr] compatible with serde's with-annotation.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":14761,"byte_end":14917,"line_start":396,"line_end":396,"column_start":1,"column_end":157}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":14918,"byte_end":14921,"line_start":397,"line_end":397,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":14922,"byte_end":14936,"line_start":398,"line_end":398,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":14937,"byte_end":14940,"line_start":399,"line_end":399,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":14941,"byte_end":14952,"line_start":400,"line_end":400,"column_start":1,"column_end":12}},{"value":"/ # #[cfg(feature = \"macros\")] {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":14953,"byte_end":14987,"line_start":401,"line_end":401,"column_start":1,"column_end":35}},{"value":"/ # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":14988,"byte_end":15037,"line_start":402,"line_end":402,"column_start":1,"column_end":50}},{"value":"/ # use serde_json::json;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":15038,"byte_end":15065,"line_start":403,"line_end":403,"column_start":1,"column_end":28}},{"value":"/ # use serde_with::{serde_as, DisplayFromStr};","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":15066,"byte_end":15115,"line_start":404,"line_end":404,"column_start":1,"column_end":50}},{"value":"/ #","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":15116,"byte_end":15121,"line_start":405,"line_end":405,"column_start":1,"column_end":6}},{"value":"/ #[serde_as]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":15122,"byte_end":15137,"line_start":406,"line_end":406,"column_start":1,"column_end":16}},{"value":"/ #[derive(Deserialize, Serialize)]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":15138,"byte_end":15175,"line_start":407,"line_end":407,"column_start":1,"column_end":38}},{"value":"/ struct A {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":15176,"byte_end":15190,"line_start":408,"line_end":408,"column_start":1,"column_end":15}},{"value":"/     #[serde_as(as = \"DisplayFromStr\")]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":15191,"byte_end":15233,"line_start":409,"line_end":409,"column_start":1,"column_end":43}},{"value":"/     mime: mime::Mime,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":15234,"byte_end":15259,"line_start":410,"line_end":410,"column_start":1,"column_end":26}},{"value":"/     #[serde_as(as = \"DisplayFromStr\")]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":15260,"byte_end":15302,"line_start":411,"line_end":411,"column_start":1,"column_end":43}},{"value":"/     number: u32,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":15303,"byte_end":15323,"line_start":412,"line_end":412,"column_start":1,"column_end":21}},{"value":"/ }","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":15324,"byte_end":15329,"line_start":413,"line_end":413,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":15330,"byte_end":15333,"line_start":414,"line_end":414,"column_start":1,"column_end":4}},{"value":"/ let v: A = serde_json::from_value(json!({","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":15334,"byte_end":15379,"line_start":415,"line_end":415,"column_start":1,"column_end":46}},{"value":"/     \"mime\": \"text/plain\",","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":15380,"byte_end":15409,"line_start":416,"line_end":416,"column_start":1,"column_end":30}},{"value":"/     \"number\": \"159\",","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":15410,"byte_end":15434,"line_start":417,"line_end":417,"column_start":1,"column_end":25}},{"value":"/ })).unwrap();","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":15435,"byte_end":15452,"line_start":418,"line_end":418,"column_start":1,"column_end":18}},{"value":"/ assert_eq!(mime::TEXT_PLAIN, v.mime);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":15453,"byte_end":15494,"line_start":419,"line_end":419,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(159, v.number);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":15495,"byte_end":15525,"line_start":420,"line_end":420,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":15526,"byte_end":15529,"line_start":421,"line_end":421,"column_start":1,"column_end":4}},{"value":"/ let x = A {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":15530,"byte_end":15545,"line_start":422,"line_end":422,"column_start":1,"column_end":16}},{"value":"/     mime: mime::STAR_STAR,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":15546,"byte_end":15576,"line_start":423,"line_end":423,"column_start":1,"column_end":31}},{"value":"/     number: 777,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":15577,"byte_end":15597,"line_start":424,"line_end":424,"column_start":1,"column_end":21}},{"value":"/ };","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":15598,"byte_end":15604,"line_start":425,"line_end":425,"column_start":1,"column_end":7}},{"value":"/ assert_eq!(json!({ \"mime\": \"*/*\", \"number\": \"777\" }), serde_json::to_value(&x).unwrap());","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":15605,"byte_end":15698,"line_start":426,"line_end":426,"column_start":1,"column_end":94}},{"value":"/ # }","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":15699,"byte_end":15706,"line_start":427,"line_end":427,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":15707,"byte_end":15714,"line_start":428,"line_end":428,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":15715,"byte_end":15718,"line_start":429,"line_end":429,"column_start":1,"column_end":4}},{"value":"/ [`Display`]: std::fmt::Display","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":15719,"byte_end":15753,"line_start":430,"line_end":430,"column_start":1,"column_end":35}},{"value":"/ [`FromStr`]: std::str::FromStr","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":15754,"byte_end":15788,"line_start":431,"line_end":431,"column_start":1,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":5759},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":17284,"byte_end":17301,"line_start":477,"line_end":477,"column_start":12,"column_end":29},"name":"NoneAsEmptyString","qualname":"::NoneAsEmptyString","value":"","parent":null,"children":[],"decl_id":null,"docs":" De/Serialize a [`Option`]`<`[`String`]`>` type while transforming the empty string to [`None`]","sig":null,"attributes":[{"value":"/ De/Serialize a [`Option`]`<`[`String`]`>` type while transforming the empty string to [`None`]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":15856,"byte_end":15954,"line_start":435,"line_end":435,"column_start":1,"column_end":99}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":15955,"byte_end":15958,"line_start":436,"line_end":436,"column_start":1,"column_end":4}},{"value":"/ Convert an [`Option`]`<T>` from/to string using [`FromStr`] and [`AsRef`]`<`[`str`]`>` implementations.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":15959,"byte_end":16066,"line_start":437,"line_end":437,"column_start":1,"column_end":108}},{"value":"/ An empty string is deserialized as [`None`] and a [`None`] vice versa.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":16067,"byte_end":16141,"line_start":438,"line_end":438,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":16142,"byte_end":16145,"line_start":439,"line_end":439,"column_start":1,"column_end":4}},{"value":"/ The same functionality is also available as [`serde_with::rust::string_empty_as_none`][crate::rust::string_empty_as_none] compatible with serde's with-annotation.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":16146,"byte_end":16312,"line_start":440,"line_end":440,"column_start":1,"column_end":167}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":16313,"byte_end":16316,"line_start":441,"line_end":441,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":16317,"byte_end":16331,"line_start":442,"line_end":442,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":16332,"byte_end":16335,"line_start":443,"line_end":443,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":16336,"byte_end":16343,"line_start":444,"line_end":444,"column_start":1,"column_end":8}},{"value":"/ # #[cfg(feature = \"macros\")] {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":16344,"byte_end":16378,"line_start":445,"line_end":445,"column_start":1,"column_end":35}},{"value":"/ # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":16379,"byte_end":16428,"line_start":446,"line_end":446,"column_start":1,"column_end":50}},{"value":"/ # use serde_json::json;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":16429,"byte_end":16456,"line_start":447,"line_end":447,"column_start":1,"column_end":28}},{"value":"/ # use serde_with::{serde_as, NoneAsEmptyString};","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":16457,"byte_end":16509,"line_start":448,"line_end":448,"column_start":1,"column_end":53}},{"value":"/ #","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":16510,"byte_end":16515,"line_start":449,"line_end":449,"column_start":1,"column_end":6}},{"value":"/ #[serde_as]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":16516,"byte_end":16531,"line_start":450,"line_end":450,"column_start":1,"column_end":16}},{"value":"/ #[derive(Deserialize, Serialize)]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":16532,"byte_end":16569,"line_start":451,"line_end":451,"column_start":1,"column_end":38}},{"value":"/ struct A {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":16570,"byte_end":16584,"line_start":452,"line_end":452,"column_start":1,"column_end":15}},{"value":"/     #[serde_as(as = \"NoneAsEmptyString\")]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":16585,"byte_end":16630,"line_start":453,"line_end":453,"column_start":1,"column_end":46}},{"value":"/     tags: Option<String>,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":16631,"byte_end":16660,"line_start":454,"line_end":454,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":16661,"byte_end":16666,"line_start":455,"line_end":455,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":16667,"byte_end":16670,"line_start":456,"line_end":456,"column_start":1,"column_end":4}},{"value":"/ let v: A = serde_json::from_value(json!({ \"tags\": \"\" })).unwrap();","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":16671,"byte_end":16741,"line_start":457,"line_end":457,"column_start":1,"column_end":71}},{"value":"/ assert_eq!(None, v.tags);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":16742,"byte_end":16771,"line_start":458,"line_end":458,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":16772,"byte_end":16775,"line_start":459,"line_end":459,"column_start":1,"column_end":4}},{"value":"/ let v: A = serde_json::from_value(json!({ \"tags\": \"Hi\" })).unwrap();","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":16776,"byte_end":16848,"line_start":460,"line_end":460,"column_start":1,"column_end":73}},{"value":"/ assert_eq!(Some(\"Hi\".to_string()), v.tags);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":16849,"byte_end":16896,"line_start":461,"line_end":461,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":16897,"byte_end":16900,"line_start":462,"line_end":462,"column_start":1,"column_end":4}},{"value":"/ let x = A {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":16901,"byte_end":16916,"line_start":463,"line_end":463,"column_start":1,"column_end":16}},{"value":"/     tags: Some(\"This is text\".to_string()),","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":16917,"byte_end":16964,"line_start":464,"line_end":464,"column_start":1,"column_end":48}},{"value":"/ };","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":16965,"byte_end":16971,"line_start":465,"line_end":465,"column_start":1,"column_end":7}},{"value":"/ assert_eq!(json!({ \"tags\": \"This is text\" }), serde_json::to_value(&x).unwrap());","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":16972,"byte_end":17057,"line_start":466,"line_end":466,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":17058,"byte_end":17061,"line_start":467,"line_end":467,"column_start":1,"column_end":4}},{"value":"/ let x = A {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":17062,"byte_end":17077,"line_start":468,"line_end":468,"column_start":1,"column_end":16}},{"value":"/     tags: None,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":17078,"byte_end":17097,"line_start":469,"line_end":469,"column_start":1,"column_end":20}},{"value":"/ };","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":17098,"byte_end":17104,"line_start":470,"line_end":470,"column_start":1,"column_end":7}},{"value":"/ assert_eq!(json!({ \"tags\": \"\" }), serde_json::to_value(&x).unwrap());","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":17105,"byte_end":17178,"line_start":471,"line_end":471,"column_start":1,"column_end":74}},{"value":"/ # }","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":17179,"byte_end":17186,"line_start":472,"line_end":472,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":17187,"byte_end":17194,"line_start":473,"line_end":473,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":17195,"byte_end":17198,"line_start":474,"line_end":474,"column_start":1,"column_end":4}},{"value":"/ [`FromStr`]: std::str::FromStr","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":17199,"byte_end":17233,"line_start":475,"line_end":475,"column_start":1,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":5768},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":20251,"byte_end":20265,"line_start":569,"line_end":569,"column_start":12,"column_end":26},"name":"DefaultOnError","qualname":"::DefaultOnError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Deserialize value and return [`Default`] on error","sig":null,"attributes":[{"value":"/ Deserialize value and return [`Default`] on error","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":17304,"byte_end":17357,"line_start":479,"line_end":479,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":17358,"byte_end":17361,"line_start":480,"line_end":480,"column_start":1,"column_end":4}},{"value":"/ The main use case is ignoring error while deserializing.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":17362,"byte_end":17422,"line_start":481,"line_end":481,"column_start":1,"column_end":61}},{"value":"/ Instead of erroring, it simply deserializes the [`Default`] variant of the type.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":17423,"byte_end":17507,"line_start":482,"line_end":482,"column_start":1,"column_end":85}},{"value":"/ It is not possible to find the error location, i.e., which field had a deserialization error, with this method.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":17508,"byte_end":17623,"line_start":483,"line_end":483,"column_start":1,"column_end":116}},{"value":"/ During serialization this wrapper does nothing.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":17624,"byte_end":17675,"line_start":484,"line_end":484,"column_start":1,"column_end":52}},{"value":"/ The serialization behavior of the underlying type is preserved.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":17676,"byte_end":17743,"line_start":485,"line_end":485,"column_start":1,"column_end":68}},{"value":"/ The type must implement [`Default`] for this conversion to work.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":17744,"byte_end":17812,"line_start":486,"line_end":486,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":17813,"byte_end":17816,"line_start":487,"line_end":487,"column_start":1,"column_end":4}},{"value":"/ The same functionality is also available as [`serde_with::rust::default_on_error`][crate::rust::default_on_error] compatible with serde's with-annotation.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":17817,"byte_end":17975,"line_start":488,"line_end":488,"column_start":1,"column_end":159}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":17976,"byte_end":17979,"line_start":489,"line_end":489,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":17980,"byte_end":17994,"line_start":490,"line_end":490,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":17995,"byte_end":17998,"line_start":491,"line_end":491,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":17999,"byte_end":18006,"line_start":492,"line_end":492,"column_start":1,"column_end":8}},{"value":"/ # #[cfg(feature = \"macros\")] {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":18007,"byte_end":18041,"line_start":493,"line_end":493,"column_start":1,"column_end":35}},{"value":"/ # use serde_derive::Deserialize;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":18042,"byte_end":18078,"line_start":494,"line_end":494,"column_start":1,"column_end":37}},{"value":"/ # use serde_with::{serde_as, DefaultOnError};","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":18079,"byte_end":18128,"line_start":495,"line_end":495,"column_start":1,"column_end":50}},{"value":"/ #","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":18129,"byte_end":18134,"line_start":496,"line_end":496,"column_start":1,"column_end":6}},{"value":"/ #[serde_as]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":18135,"byte_end":18150,"line_start":497,"line_end":497,"column_start":1,"column_end":16}},{"value":"/ #[derive(Deserialize,  Debug)]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":18151,"byte_end":18185,"line_start":498,"line_end":498,"column_start":1,"column_end":35}},{"value":"/ struct A {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":18186,"byte_end":18200,"line_start":499,"line_end":499,"column_start":1,"column_end":15}},{"value":"/     #[serde_as(deserialize_as = \"DefaultOnError\")]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":18201,"byte_end":18255,"line_start":500,"line_end":500,"column_start":1,"column_end":55}},{"value":"/     value: u32,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":18256,"byte_end":18275,"line_start":501,"line_end":501,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":18276,"byte_end":18281,"line_start":502,"line_end":502,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":18282,"byte_end":18285,"line_start":503,"line_end":503,"column_start":1,"column_end":4}},{"value":"/ let a: A = serde_json::from_str(r#\"{\"value\": 123}\"#).unwrap();","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":18286,"byte_end":18352,"line_start":504,"line_end":504,"column_start":1,"column_end":67}},{"value":"/ assert_eq!(123, a.value);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":18353,"byte_end":18382,"line_start":505,"line_end":505,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":18383,"byte_end":18386,"line_start":506,"line_end":506,"column_start":1,"column_end":4}},{"value":"/ // null is of invalid type","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":18387,"byte_end":18417,"line_start":507,"line_end":507,"column_start":1,"column_end":31}},{"value":"/ let a: A = serde_json::from_str(r#\"{\"value\": null}\"#).unwrap();","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":18418,"byte_end":18485,"line_start":508,"line_end":508,"column_start":1,"column_end":68}},{"value":"/ assert_eq!(0, a.value);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":18486,"byte_end":18513,"line_start":509,"line_end":509,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":18514,"byte_end":18517,"line_start":510,"line_end":510,"column_start":1,"column_end":4}},{"value":"/ // String is of invalid type","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":18518,"byte_end":18550,"line_start":511,"line_end":511,"column_start":1,"column_end":33}},{"value":"/ let a: A = serde_json::from_str(r#\"{\"value\": \"123\"}\"#).unwrap();","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":18551,"byte_end":18619,"line_start":512,"line_end":512,"column_start":1,"column_end":69}},{"value":"/ assert_eq!(0, a.value);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":18620,"byte_end":18647,"line_start":513,"line_end":513,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":18648,"byte_end":18651,"line_start":514,"line_end":514,"column_start":1,"column_end":4}},{"value":"/ // Map is of invalid type","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":18652,"byte_end":18681,"line_start":515,"line_end":515,"column_start":1,"column_end":30}},{"value":"/ let a: A = dbg!(serde_json::from_str(r#\"{\"value\": {}}\"#)).unwrap();","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":18682,"byte_end":18753,"line_start":516,"line_end":516,"column_start":1,"column_end":72}},{"value":"/ assert_eq!(0, a.value);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":18754,"byte_end":18781,"line_start":517,"line_end":517,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":18782,"byte_end":18785,"line_start":518,"line_end":518,"column_start":1,"column_end":4}},{"value":"/ // Missing entries still cause errors","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":18786,"byte_end":18827,"line_start":519,"line_end":519,"column_start":1,"column_end":42}},{"value":"/ assert!(serde_json::from_str::<A>(r#\"{  }\"#).is_err());","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":18828,"byte_end":18887,"line_start":520,"line_end":520,"column_start":1,"column_end":60}},{"value":"/ # }","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":18888,"byte_end":18895,"line_start":521,"line_end":521,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":18896,"byte_end":18903,"line_start":522,"line_end":522,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":18904,"byte_end":18907,"line_start":523,"line_end":523,"column_start":1,"column_end":4}},{"value":"/ Deserializing missing values can be supported by adding the `default` field attribute:","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":18908,"byte_end":18998,"line_start":524,"line_end":524,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":18999,"byte_end":19002,"line_start":525,"line_end":525,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":19003,"byte_end":19010,"line_start":526,"line_end":526,"column_start":1,"column_end":8}},{"value":"/ # #[cfg(feature = \"macros\")] {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":19011,"byte_end":19045,"line_start":527,"line_end":527,"column_start":1,"column_end":35}},{"value":"/ # use serde_derive::Deserialize;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":19046,"byte_end":19082,"line_start":528,"line_end":528,"column_start":1,"column_end":37}},{"value":"/ # use serde_with::{serde_as, DefaultOnError};","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":19083,"byte_end":19132,"line_start":529,"line_end":529,"column_start":1,"column_end":50}},{"value":"/ #","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":19133,"byte_end":19138,"line_start":530,"line_end":530,"column_start":1,"column_end":6}},{"value":"/ #[serde_as]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":19139,"byte_end":19154,"line_start":531,"line_end":531,"column_start":1,"column_end":16}},{"value":"/ #[derive(Deserialize)]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":19155,"byte_end":19181,"line_start":532,"line_end":532,"column_start":1,"column_end":27}},{"value":"/ struct B {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":19182,"byte_end":19196,"line_start":533,"line_end":533,"column_start":1,"column_end":15}},{"value":"/     #[serde_as(deserialize_as = \"DefaultOnError\")]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":19197,"byte_end":19251,"line_start":534,"line_end":534,"column_start":1,"column_end":55}},{"value":"/     #[serde(default)]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":19252,"byte_end":19277,"line_start":535,"line_end":535,"column_start":1,"column_end":26}},{"value":"/     value: u32,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":19278,"byte_end":19297,"line_start":536,"line_end":536,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":19298,"byte_end":19303,"line_start":537,"line_end":537,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":19304,"byte_end":19307,"line_start":538,"line_end":538,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":19308,"byte_end":19311,"line_start":539,"line_end":539,"column_start":1,"column_end":4}},{"value":"/ let b: B = serde_json::from_str(r#\"{  }\"#).unwrap();","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":19312,"byte_end":19368,"line_start":540,"line_end":540,"column_start":1,"column_end":57}},{"value":"/ assert_eq!(0, b.value);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":19369,"byte_end":19396,"line_start":541,"line_end":541,"column_start":1,"column_end":28}},{"value":"/ # }","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":19397,"byte_end":19404,"line_start":542,"line_end":542,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":19405,"byte_end":19412,"line_start":543,"line_end":543,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":19413,"byte_end":19416,"line_start":544,"line_end":544,"column_start":1,"column_end":4}},{"value":"/ `DefaultOnError` can be combined with other conversion methods.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":19417,"byte_end":19484,"line_start":545,"line_end":545,"column_start":1,"column_end":68}},{"value":"/ In this example we deserialize a `Vec`, each element is deserialized from a string.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":19485,"byte_end":19572,"line_start":546,"line_end":546,"column_start":1,"column_end":88}},{"value":"/ If the string does not parse as a number, then we get the default value of 0.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":19573,"byte_end":19654,"line_start":547,"line_end":547,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":19655,"byte_end":19658,"line_start":548,"line_end":548,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":19659,"byte_end":19670,"line_start":549,"line_end":549,"column_start":1,"column_end":12}},{"value":"/ # #[cfg(feature = \"macros\")] {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":19671,"byte_end":19705,"line_start":550,"line_end":550,"column_start":1,"column_end":35}},{"value":"/ # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":19706,"byte_end":19755,"line_start":551,"line_end":551,"column_start":1,"column_end":50}},{"value":"/ # use serde_json::json;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":19756,"byte_end":19783,"line_start":552,"line_end":552,"column_start":1,"column_end":28}},{"value":"/ # use serde_with::{serde_as, DefaultOnError, DisplayFromStr};","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":19784,"byte_end":19849,"line_start":553,"line_end":553,"column_start":1,"column_end":66}},{"value":"/ #","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":19850,"byte_end":19855,"line_start":554,"line_end":554,"column_start":1,"column_end":6}},{"value":"/ #[serde_as]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":19856,"byte_end":19871,"line_start":555,"line_end":555,"column_start":1,"column_end":16}},{"value":"/ #[derive(Serialize, Deserialize)]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":19872,"byte_end":19909,"line_start":556,"line_end":556,"column_start":1,"column_end":38}},{"value":"/ struct C {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":19910,"byte_end":19924,"line_start":557,"line_end":557,"column_start":1,"column_end":15}},{"value":"/     #[serde_as(as = \"Vec<DefaultOnError<DisplayFromStr>>\")]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":19925,"byte_end":19988,"line_start":558,"line_end":558,"column_start":1,"column_end":64}},{"value":"/     value: Vec<u32>,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":19989,"byte_end":20013,"line_start":559,"line_end":559,"column_start":1,"column_end":25}},{"value":"/ };","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":20014,"byte_end":20020,"line_start":560,"line_end":560,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":20021,"byte_end":20024,"line_start":561,"line_end":561,"column_start":1,"column_end":4}},{"value":"/ let c: C = serde_json::from_value(json!({","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":20025,"byte_end":20070,"line_start":562,"line_end":562,"column_start":1,"column_end":46}},{"value":"/     \"value\": [\"1\", \"2\", \"a3\", \"\", {}, \"6\"]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":20071,"byte_end":20117,"line_start":563,"line_end":563,"column_start":1,"column_end":47}},{"value":"/ })).unwrap();","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":20118,"byte_end":20135,"line_start":564,"line_end":564,"column_start":1,"column_end":18}},{"value":"/ assert_eq!(vec![1, 2, 0, 0, 0, 6], c.value);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":20136,"byte_end":20184,"line_start":565,"line_end":565,"column_start":1,"column_end":49}},{"value":"/ # }","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":20185,"byte_end":20192,"line_start":566,"line_end":566,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":20193,"byte_end":20200,"line_start":567,"line_end":567,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":5783},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":22189,"byte_end":22202,"line_start":627,"line_end":627,"column_start":12,"column_end":25},"name":"DefaultOnNull","qualname":"::DefaultOnNull","value":"","parent":null,"children":[],"decl_id":null,"docs":" Deserialize [`Default`] from `null` values","sig":null,"attributes":[{"value":"/ Deserialize [`Default`] from `null` values","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":20294,"byte_end":20340,"line_start":571,"line_end":571,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":20341,"byte_end":20344,"line_start":572,"line_end":572,"column_start":1,"column_end":4}},{"value":"/ Instead of erroring on `null` values, it simply deserializes the [`Default`] variant of the type.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":20345,"byte_end":20446,"line_start":573,"line_end":573,"column_start":1,"column_end":102}},{"value":"/ During serialization this wrapper does nothing.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":20447,"byte_end":20498,"line_start":574,"line_end":574,"column_start":1,"column_end":52}},{"value":"/ The serialization behavior of the underlying type is preserved.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":20499,"byte_end":20566,"line_start":575,"line_end":575,"column_start":1,"column_end":68}},{"value":"/ The type must implement [`Default`] for this conversion to work.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":20567,"byte_end":20635,"line_start":576,"line_end":576,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":20636,"byte_end":20639,"line_start":577,"line_end":577,"column_start":1,"column_end":4}},{"value":"/ The same functionality is also available as [`serde_with::rust::default_on_null`][crate::rust::default_on_null] compatible with serde's with-annotation.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":20640,"byte_end":20796,"line_start":578,"line_end":578,"column_start":1,"column_end":157}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":20797,"byte_end":20800,"line_start":579,"line_end":579,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":20801,"byte_end":20815,"line_start":580,"line_end":580,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":20816,"byte_end":20819,"line_start":581,"line_end":581,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":20820,"byte_end":20827,"line_start":582,"line_end":582,"column_start":1,"column_end":8}},{"value":"/ # #[cfg(feature = \"macros\")] {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":20828,"byte_end":20862,"line_start":583,"line_end":583,"column_start":1,"column_end":35}},{"value":"/ # use serde_derive::Deserialize;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":20863,"byte_end":20899,"line_start":584,"line_end":584,"column_start":1,"column_end":37}},{"value":"/ # use serde_with::{serde_as, DefaultOnNull};","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":20900,"byte_end":20948,"line_start":585,"line_end":585,"column_start":1,"column_end":49}},{"value":"/ #","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":20949,"byte_end":20954,"line_start":586,"line_end":586,"column_start":1,"column_end":6}},{"value":"/ #[serde_as]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":20955,"byte_end":20970,"line_start":587,"line_end":587,"column_start":1,"column_end":16}},{"value":"/ #[derive(Deserialize,  Debug)]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":20971,"byte_end":21005,"line_start":588,"line_end":588,"column_start":1,"column_end":35}},{"value":"/ struct A {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":21006,"byte_end":21020,"line_start":589,"line_end":589,"column_start":1,"column_end":15}},{"value":"/     #[serde_as(deserialize_as = \"DefaultOnNull\")]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":21021,"byte_end":21074,"line_start":590,"line_end":590,"column_start":1,"column_end":54}},{"value":"/     value: u32,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":21075,"byte_end":21094,"line_start":591,"line_end":591,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":21095,"byte_end":21100,"line_start":592,"line_end":592,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":21101,"byte_end":21104,"line_start":593,"line_end":593,"column_start":1,"column_end":4}},{"value":"/ let a: A = serde_json::from_str(r#\"{\"value\": 123}\"#).unwrap();","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":21105,"byte_end":21171,"line_start":594,"line_end":594,"column_start":1,"column_end":67}},{"value":"/ assert_eq!(123, a.value);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":21172,"byte_end":21201,"line_start":595,"line_end":595,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":21202,"byte_end":21205,"line_start":596,"line_end":596,"column_start":1,"column_end":4}},{"value":"/ // null values are deserialized into the default, here 0","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":21206,"byte_end":21266,"line_start":597,"line_end":597,"column_start":1,"column_end":61}},{"value":"/ let a: A = serde_json::from_str(r#\"{\"value\": null}\"#).unwrap();","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":21267,"byte_end":21334,"line_start":598,"line_end":598,"column_start":1,"column_end":68}},{"value":"/ assert_eq!(0, a.value);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":21335,"byte_end":21362,"line_start":599,"line_end":599,"column_start":1,"column_end":28}},{"value":"/ # }","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":21363,"byte_end":21370,"line_start":600,"line_end":600,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":21371,"byte_end":21378,"line_start":601,"line_end":601,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":21379,"byte_end":21382,"line_start":602,"line_end":602,"column_start":1,"column_end":4}},{"value":"/ `DefaultOnNull` can be combined with other conversion methods.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":21383,"byte_end":21449,"line_start":603,"line_end":603,"column_start":1,"column_end":67}},{"value":"/ In this example we deserialize a `Vec`, each element is deserialized from a string.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":21450,"byte_end":21537,"line_start":604,"line_end":604,"column_start":1,"column_end":88}},{"value":"/ If we encounter null, then we get the default value of 0.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":21538,"byte_end":21599,"line_start":605,"line_end":605,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":21600,"byte_end":21603,"line_start":606,"line_end":606,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":21604,"byte_end":21615,"line_start":607,"line_end":607,"column_start":1,"column_end":12}},{"value":"/ # #[cfg(feature = \"macros\")] {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":21616,"byte_end":21650,"line_start":608,"line_end":608,"column_start":1,"column_end":35}},{"value":"/ # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":21651,"byte_end":21700,"line_start":609,"line_end":609,"column_start":1,"column_end":50}},{"value":"/ # use serde_json::json;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":21701,"byte_end":21728,"line_start":610,"line_end":610,"column_start":1,"column_end":28}},{"value":"/ # use serde_with::{serde_as, DefaultOnNull, DisplayFromStr};","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":21729,"byte_end":21793,"line_start":611,"line_end":611,"column_start":1,"column_end":65}},{"value":"/ #","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":21794,"byte_end":21799,"line_start":612,"line_end":612,"column_start":1,"column_end":6}},{"value":"/ #[serde_as]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":21800,"byte_end":21815,"line_start":613,"line_end":613,"column_start":1,"column_end":16}},{"value":"/ #[derive(Serialize, Deserialize)]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":21816,"byte_end":21853,"line_start":614,"line_end":614,"column_start":1,"column_end":38}},{"value":"/ struct C {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":21854,"byte_end":21868,"line_start":615,"line_end":615,"column_start":1,"column_end":15}},{"value":"/     #[serde_as(as = \"Vec<DefaultOnNull<DisplayFromStr>>\")]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":21869,"byte_end":21931,"line_start":616,"line_end":616,"column_start":1,"column_end":63}},{"value":"/     value: Vec<u32>,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":21932,"byte_end":21956,"line_start":617,"line_end":617,"column_start":1,"column_end":25}},{"value":"/ };","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":21957,"byte_end":21963,"line_start":618,"line_end":618,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":21964,"byte_end":21967,"line_start":619,"line_end":619,"column_start":1,"column_end":4}},{"value":"/ let c: C = serde_json::from_value(json!({","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":21968,"byte_end":22013,"line_start":620,"line_end":620,"column_start":1,"column_end":46}},{"value":"/     \"value\": [\"1\", \"2\", null, null, \"5\"]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":22014,"byte_end":22058,"line_start":621,"line_end":621,"column_start":1,"column_end":45}},{"value":"/ })).unwrap();","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":22059,"byte_end":22076,"line_start":622,"line_end":622,"column_start":1,"column_end":18}},{"value":"/ assert_eq!(vec![1, 2, 0, 0, 5], c.value);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":22077,"byte_end":22122,"line_start":623,"line_end":623,"column_start":1,"column_end":46}},{"value":"/ # }","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":22123,"byte_end":22130,"line_start":624,"line_end":624,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":22131,"byte_end":22138,"line_start":625,"line_end":625,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":5798},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":23519,"byte_end":23532,"line_start":675,"line_end":675,"column_start":12,"column_end":25},"name":"BytesOrString","qualname":"::BytesOrString","value":"","parent":null,"children":[],"decl_id":null,"docs":" Deserialize from bytes or string","sig":null,"attributes":[{"value":"/ Deserialize from bytes or string","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":22231,"byte_end":22267,"line_start":629,"line_end":629,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":22268,"byte_end":22271,"line_start":630,"line_end":630,"column_start":1,"column_end":4}},{"value":"/ Any Rust [`String`] can be converted into bytes, i.e., `Vec<u8>`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":22272,"byte_end":22341,"line_start":631,"line_end":631,"column_start":1,"column_end":70}},{"value":"/ Accepting both as formats while deserializing can be helpful while interacting with language","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":22342,"byte_end":22438,"line_start":632,"line_end":632,"column_start":1,"column_end":97}},{"value":"/ which have a looser definition of string than Rust.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":22439,"byte_end":22494,"line_start":633,"line_end":633,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":22495,"byte_end":22498,"line_start":634,"line_end":634,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":22499,"byte_end":22512,"line_start":635,"line_end":635,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":22513,"byte_end":22524,"line_start":636,"line_end":636,"column_start":1,"column_end":12}},{"value":"/ # #[cfg(feature = \"macros\")] {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":22525,"byte_end":22559,"line_start":637,"line_end":637,"column_start":1,"column_end":35}},{"value":"/ # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":22560,"byte_end":22609,"line_start":638,"line_end":638,"column_start":1,"column_end":50}},{"value":"/ # use serde_json::json;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":22610,"byte_end":22637,"line_start":639,"line_end":639,"column_start":1,"column_end":28}},{"value":"/ # use serde_with::{serde_as, BytesOrString};","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":22638,"byte_end":22686,"line_start":640,"line_end":640,"column_start":1,"column_end":49}},{"value":"/ #","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":22687,"byte_end":22692,"line_start":641,"line_end":641,"column_start":1,"column_end":6}},{"value":"/ #[serde_as]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":22693,"byte_end":22708,"line_start":642,"line_end":642,"column_start":1,"column_end":16}},{"value":"/ #[derive(Deserialize, Serialize)]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":22709,"byte_end":22746,"line_start":643,"line_end":643,"column_start":1,"column_end":38}},{"value":"/ struct A {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":22747,"byte_end":22761,"line_start":644,"line_end":644,"column_start":1,"column_end":15}},{"value":"/     #[serde_as(as = \"BytesOrString\")]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":22762,"byte_end":22803,"line_start":645,"line_end":645,"column_start":1,"column_end":42}},{"value":"/     bytes_or_string: Vec<u8>,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":22804,"byte_end":22837,"line_start":646,"line_end":646,"column_start":1,"column_end":34}},{"value":"/ }","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":22838,"byte_end":22843,"line_start":647,"line_end":647,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":22844,"byte_end":22847,"line_start":648,"line_end":648,"column_start":1,"column_end":4}},{"value":"/ // Here we deserialize from a byte array ...","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":22848,"byte_end":22896,"line_start":649,"line_end":649,"column_start":1,"column_end":49}},{"value":"/ let j = json!({","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":22897,"byte_end":22916,"line_start":650,"line_end":650,"column_start":1,"column_end":20}},{"value":"/   \"bytes_or_string\": [","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":22917,"byte_end":22943,"line_start":651,"line_end":651,"column_start":1,"column_end":27}},{"value":"/     0,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":22944,"byte_end":22954,"line_start":652,"line_end":652,"column_start":1,"column_end":11}},{"value":"/     1,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":22955,"byte_end":22965,"line_start":653,"line_end":653,"column_start":1,"column_end":11}},{"value":"/     2,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":22966,"byte_end":22976,"line_start":654,"line_end":654,"column_start":1,"column_end":11}},{"value":"/     3","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":22977,"byte_end":22986,"line_start":655,"line_end":655,"column_start":1,"column_end":10}},{"value":"/   ]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":22987,"byte_end":22994,"line_start":656,"line_end":656,"column_start":1,"column_end":8}},{"value":"/ });","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":22995,"byte_end":23002,"line_start":657,"line_end":657,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":23003,"byte_end":23006,"line_start":658,"line_end":658,"column_start":1,"column_end":4}},{"value":"/ let a: A = serde_json::from_value(j.clone()).unwrap();","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":23007,"byte_end":23065,"line_start":659,"line_end":659,"column_start":1,"column_end":59}},{"value":"/ assert_eq!(vec![0, 1, 2, 3], a.bytes_or_string);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":23066,"byte_end":23118,"line_start":660,"line_end":660,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":23119,"byte_end":23122,"line_start":661,"line_end":661,"column_start":1,"column_end":4}},{"value":"/ // and serialization works too.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":23123,"byte_end":23158,"line_start":662,"line_end":662,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(j, serde_json::to_value(&a).unwrap());","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":23159,"byte_end":23212,"line_start":663,"line_end":663,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":23213,"byte_end":23216,"line_start":664,"line_end":664,"column_start":1,"column_end":4}},{"value":"/ // But we also support deserializing from a String","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":23217,"byte_end":23271,"line_start":665,"line_end":665,"column_start":1,"column_end":55}},{"value":"/ let j = json!({","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":23272,"byte_end":23291,"line_start":666,"line_end":666,"column_start":1,"column_end":20}},{"value":"/   \"bytes_or_string\": \"✨Works!\"","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":23292,"byte_end":23328,"line_start":667,"line_end":667,"column_start":1,"column_end":35}},{"value":"/ });","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":23329,"byte_end":23336,"line_start":668,"line_end":668,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":23337,"byte_end":23340,"line_start":669,"line_end":669,"column_start":1,"column_end":4}},{"value":"/ let a: A = serde_json::from_value(j).unwrap();","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":23341,"byte_end":23391,"line_start":670,"line_end":670,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(\"✨Works!\".as_bytes(), &*a.bytes_or_string);","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":23392,"byte_end":23452,"line_start":671,"line_end":671,"column_start":1,"column_end":59}},{"value":"/ # }","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":23453,"byte_end":23460,"line_start":672,"line_end":672,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":23461,"byte_end":23468,"line_start":673,"line_end":673,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":5807},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":28886,"byte_end":28901,"line_start":812,"line_end":812,"column_start":12,"column_end":27},"name":"DurationSeconds","qualname":"::DurationSeconds","value":"","parent":null,"children":[],"decl_id":null,"docs":" De/Serialize Durations as number of seconds.","sig":null,"attributes":[{"value":"/ De/Serialize Durations as number of seconds.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":23535,"byte_end":23583,"line_start":677,"line_end":677,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":23584,"byte_end":23587,"line_start":678,"line_end":678,"column_start":1,"column_end":4}},{"value":"/ De/serialize durations as number of seconds with subsecond precision.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":23588,"byte_end":23661,"line_start":679,"line_end":679,"column_start":1,"column_end":74}},{"value":"/ Subsecond precision is *only* supported for [`DurationSecondsWithFrac`], but not for [`DurationSeconds`].","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":23662,"byte_end":23771,"line_start":680,"line_end":680,"column_start":1,"column_end":110}},{"value":"/ You can configure the serialization format between integers, floats, and stringified numbers with the `FORMAT` specifier and configure the deserialization with the `STRICTNESS` specifier.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":23772,"byte_end":23963,"line_start":681,"line_end":681,"column_start":1,"column_end":192}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":23964,"byte_end":23967,"line_start":682,"line_end":682,"column_start":1,"column_end":4}},{"value":"/ The `STRICTNESS` specifier can either be [`formats::Strict`] or [`formats::Flexible`] and defaults to [`formats::Strict`].","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":23968,"byte_end":24094,"line_start":683,"line_end":683,"column_start":1,"column_end":127}},{"value":"/ [`formats::Strict`] means that deserialization only supports the type given in `FORMAT`, e.g., if `FORMAT` is `u64` deserialization from a `f64` will error.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":24095,"byte_end":24255,"line_start":684,"line_end":684,"column_start":1,"column_end":161}},{"value":"/ [`formats::Flexible`] means that deserialization will perform a best effort to extract the correct duration and allows deserialization from any type.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":24256,"byte_end":24409,"line_start":685,"line_end":685,"column_start":1,"column_end":154}},{"value":"/ For example, deserializing `DurationSeconds<f64, Flexible>` will discard any subsecond precision during deserialization from `f64` and will parse a `String` as an integer number.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":24410,"byte_end":24592,"line_start":686,"line_end":686,"column_start":1,"column_end":183}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":24593,"byte_end":24596,"line_start":687,"line_end":687,"column_start":1,"column_end":4}},{"value":"/ This type also supports [`chrono::Duration`] with the `chrono`-[feature flag].","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":24597,"byte_end":24679,"line_start":688,"line_end":688,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":24680,"byte_end":24683,"line_start":689,"line_end":689,"column_start":1,"column_end":4}},{"value":"/ | Duration Type         | Converter                 | Available `FORMAT`s    |","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":24684,"byte_end":24766,"line_start":690,"line_end":690,"column_start":1,"column_end":83}},{"value":"/ | --------------------- | ------------------------- | ---------------------- |","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":24767,"byte_end":24849,"line_start":691,"line_end":691,"column_start":1,"column_end":83}},{"value":"/ | `std::time::Duration` | `DurationSeconds`         | `u64`, `f64`, `String` |","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":24850,"byte_end":24932,"line_start":692,"line_end":692,"column_start":1,"column_end":83}},{"value":"/ | `std::time::Duration` | `DurationSecondsWithFrac` | `f64`, `String`        |","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":24933,"byte_end":25015,"line_start":693,"line_end":693,"column_start":1,"column_end":83}},{"value":"/ | `chrono::Duration`    | `DurationSeconds`         | `i64`, `f64`, `String` |","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":25016,"byte_end":25098,"line_start":694,"line_end":694,"column_start":1,"column_end":83}},{"value":"/ | `chrono::Duration`    | `DurationSecondsWithFrac` | `f64`, `String`        |","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":25099,"byte_end":25181,"line_start":695,"line_end":695,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":25182,"byte_end":25185,"line_start":696,"line_end":696,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":25186,"byte_end":25200,"line_start":697,"line_end":697,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":25201,"byte_end":25204,"line_start":698,"line_end":698,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":25205,"byte_end":25216,"line_start":699,"line_end":699,"column_start":1,"column_end":12}},{"value":"/ # #[cfg(feature = \"macros\")] {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":25217,"byte_end":25251,"line_start":700,"line_end":700,"column_start":1,"column_end":35}},{"value":"/ # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":25252,"byte_end":25301,"line_start":701,"line_end":701,"column_start":1,"column_end":50}},{"value":"/ # use serde_json::json;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":25302,"byte_end":25329,"line_start":702,"line_end":702,"column_start":1,"column_end":28}},{"value":"/ # use serde_with::{serde_as, DurationSeconds};","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":25330,"byte_end":25380,"line_start":703,"line_end":703,"column_start":1,"column_end":51}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":25381,"byte_end":25409,"line_start":704,"line_end":704,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":25410,"byte_end":25413,"line_start":705,"line_end":705,"column_start":1,"column_end":4}},{"value":"/ #[serde_as]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":25414,"byte_end":25429,"line_start":706,"line_end":706,"column_start":1,"column_end":16}},{"value":"/ # #[derive(Debug, PartialEq)]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":25430,"byte_end":25463,"line_start":707,"line_end":707,"column_start":1,"column_end":34}},{"value":"/ #[derive(Deserialize, Serialize)]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":25464,"byte_end":25501,"line_start":708,"line_end":708,"column_start":1,"column_end":38}},{"value":"/ struct Durations {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":25502,"byte_end":25524,"line_start":709,"line_end":709,"column_start":1,"column_end":23}},{"value":"/     #[serde_as(as = \"DurationSeconds<u64>\")]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":25525,"byte_end":25573,"line_start":710,"line_end":710,"column_start":1,"column_end":49}},{"value":"/     d_u64: Duration,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":25574,"byte_end":25598,"line_start":711,"line_end":711,"column_start":1,"column_end":25}},{"value":"/     #[serde_as(as = \"DurationSeconds<f64>\")]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":25599,"byte_end":25647,"line_start":712,"line_end":712,"column_start":1,"column_end":49}},{"value":"/     d_f64: Duration,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":25648,"byte_end":25672,"line_start":713,"line_end":713,"column_start":1,"column_end":25}},{"value":"/     #[serde_as(as = \"DurationSeconds<String>\")]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":25673,"byte_end":25724,"line_start":714,"line_end":714,"column_start":1,"column_end":52}},{"value":"/     d_string: Duration,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":25725,"byte_end":25752,"line_start":715,"line_end":715,"column_start":1,"column_end":28}},{"value":"/ };","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":25753,"byte_end":25759,"line_start":716,"line_end":716,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":25760,"byte_end":25763,"line_start":717,"line_end":717,"column_start":1,"column_end":4}},{"value":"/ // Serialization","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":25764,"byte_end":25784,"line_start":718,"line_end":718,"column_start":1,"column_end":21}},{"value":"/ // See how the values get rounded, since subsecond precision is not allowed.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":25785,"byte_end":25865,"line_start":719,"line_end":719,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":25866,"byte_end":25869,"line_start":720,"line_end":720,"column_start":1,"column_end":4}},{"value":"/ let d = Durations {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":25870,"byte_end":25893,"line_start":721,"line_end":721,"column_start":1,"column_end":24}},{"value":"/     d_u64: Duration::new(12345, 0), // Create from seconds and nanoseconds","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":25894,"byte_end":25972,"line_start":722,"line_end":722,"column_start":1,"column_end":79}},{"value":"/     d_f64: Duration::new(12345, 500_000_000),","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":25973,"byte_end":26022,"line_start":723,"line_end":723,"column_start":1,"column_end":50}},{"value":"/     d_string: Duration::new(12345, 999_999_999),","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":26023,"byte_end":26075,"line_start":724,"line_end":724,"column_start":1,"column_end":53}},{"value":"/ };","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":26076,"byte_end":26082,"line_start":725,"line_end":725,"column_start":1,"column_end":7}},{"value":"/ // Observe the different datatypes","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":26083,"byte_end":26121,"line_start":726,"line_end":726,"column_start":1,"column_end":39}},{"value":"/ let expected = json!({","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":26122,"byte_end":26148,"line_start":727,"line_end":727,"column_start":1,"column_end":27}},{"value":"/     \"d_u64\": 12345,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":26149,"byte_end":26172,"line_start":728,"line_end":728,"column_start":1,"column_end":24}},{"value":"/     \"d_f64\": 12346.0,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":26173,"byte_end":26198,"line_start":729,"line_end":729,"column_start":1,"column_end":26}},{"value":"/     \"d_string\": \"12346\",","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":26199,"byte_end":26227,"line_start":730,"line_end":730,"column_start":1,"column_end":29}},{"value":"/ });","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":26228,"byte_end":26235,"line_start":731,"line_end":731,"column_start":1,"column_end":8}},{"value":"/ assert_eq!(expected, serde_json::to_value(&d).unwrap());","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":26236,"byte_end":26296,"line_start":732,"line_end":732,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":26297,"byte_end":26300,"line_start":733,"line_end":733,"column_start":1,"column_end":4}},{"value":"/ // Deserialization works too","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":26301,"byte_end":26333,"line_start":734,"line_end":734,"column_start":1,"column_end":33}},{"value":"/ // Subsecond precision in numbers will be rounded away","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":26334,"byte_end":26392,"line_start":735,"line_end":735,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":26393,"byte_end":26396,"line_start":736,"line_end":736,"column_start":1,"column_end":4}},{"value":"/ let json = json!({","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":26397,"byte_end":26419,"line_start":737,"line_end":737,"column_start":1,"column_end":23}},{"value":"/     \"d_u64\": 12345,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":26420,"byte_end":26443,"line_start":738,"line_end":738,"column_start":1,"column_end":24}},{"value":"/     \"d_f64\": 12345.5,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":26444,"byte_end":26469,"line_start":739,"line_end":739,"column_start":1,"column_end":26}},{"value":"/     \"d_string\": \"12346\",","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":26470,"byte_end":26498,"line_start":740,"line_end":740,"column_start":1,"column_end":29}},{"value":"/ });","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":26499,"byte_end":26506,"line_start":741,"line_end":741,"column_start":1,"column_end":8}},{"value":"/ let expected = Durations {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":26507,"byte_end":26537,"line_start":742,"line_end":742,"column_start":1,"column_end":31}},{"value":"/     d_u64: Duration::new(12345, 0), // Create from seconds and nanoseconds","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":26538,"byte_end":26616,"line_start":743,"line_end":743,"column_start":1,"column_end":79}},{"value":"/     d_f64: Duration::new(12346, 0),","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":26617,"byte_end":26656,"line_start":744,"line_end":744,"column_start":1,"column_end":40}},{"value":"/     d_string: Duration::new(12346, 0),","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":26657,"byte_end":26699,"line_start":745,"line_end":745,"column_start":1,"column_end":43}},{"value":"/ };","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":26700,"byte_end":26706,"line_start":746,"line_end":746,"column_start":1,"column_end":7}},{"value":"/ assert_eq!(expected, serde_json::from_value(json).unwrap());","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":26707,"byte_end":26771,"line_start":747,"line_end":747,"column_start":1,"column_end":65}},{"value":"/ # }","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":26772,"byte_end":26779,"line_start":748,"line_end":748,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":26780,"byte_end":26787,"line_start":749,"line_end":749,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":26788,"byte_end":26791,"line_start":750,"line_end":750,"column_start":1,"column_end":4}},{"value":"/ [`chrono::Duration`] is also supported when using the `chrono` feature.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":26792,"byte_end":26867,"line_start":751,"line_end":751,"column_start":1,"column_end":76}},{"value":"/ It is a signed duration, thus can be de/serialized as an `i64` instead of a `u64`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":26868,"byte_end":26954,"line_start":752,"line_end":752,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":26955,"byte_end":26958,"line_start":753,"line_end":753,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":26959,"byte_end":26970,"line_start":754,"line_end":754,"column_start":1,"column_end":12}},{"value":"/ # #[cfg(all(feature = \"macros\", feature = \"chrono\"))] {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":26971,"byte_end":27030,"line_start":755,"line_end":755,"column_start":1,"column_end":60}},{"value":"/ # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":27031,"byte_end":27080,"line_start":756,"line_end":756,"column_start":1,"column_end":50}},{"value":"/ # use serde_json::json;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":27081,"byte_end":27108,"line_start":757,"line_end":757,"column_start":1,"column_end":28}},{"value":"/ # use serde_with::{serde_as, DurationSeconds};","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":27109,"byte_end":27159,"line_start":758,"line_end":758,"column_start":1,"column_end":51}},{"value":"/ # use chrono_crate::Duration;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":27160,"byte_end":27193,"line_start":759,"line_end":759,"column_start":1,"column_end":34}},{"value":"/ # /* Ugliness to make the docs look nicer since I want to hide the rename of the chrono crate","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":27194,"byte_end":27291,"line_start":760,"line_end":760,"column_start":1,"column_end":98}},{"value":"/ use chrono::Duration;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":27292,"byte_end":27317,"line_start":761,"line_end":761,"column_start":1,"column_end":26}},{"value":"/ # */","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":27318,"byte_end":27326,"line_start":762,"line_end":762,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":27327,"byte_end":27330,"line_start":763,"line_end":763,"column_start":1,"column_end":4}},{"value":"/ #[serde_as]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":27331,"byte_end":27346,"line_start":764,"line_end":764,"column_start":1,"column_end":16}},{"value":"/ # #[derive(Debug, PartialEq)]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":27347,"byte_end":27380,"line_start":765,"line_end":765,"column_start":1,"column_end":34}},{"value":"/ #[derive(Deserialize, Serialize)]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":27381,"byte_end":27418,"line_start":766,"line_end":766,"column_start":1,"column_end":38}},{"value":"/ struct Durations {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":27419,"byte_end":27441,"line_start":767,"line_end":767,"column_start":1,"column_end":23}},{"value":"/     #[serde_as(as = \"DurationSeconds<i64>\")]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":27442,"byte_end":27490,"line_start":768,"line_end":768,"column_start":1,"column_end":49}},{"value":"/     d_i64: Duration,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":27491,"byte_end":27515,"line_start":769,"line_end":769,"column_start":1,"column_end":25}},{"value":"/     #[serde_as(as = \"DurationSeconds<f64>\")]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":27516,"byte_end":27564,"line_start":770,"line_end":770,"column_start":1,"column_end":49}},{"value":"/     d_f64: Duration,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":27565,"byte_end":27589,"line_start":771,"line_end":771,"column_start":1,"column_end":25}},{"value":"/     #[serde_as(as = \"DurationSeconds<String>\")]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":27590,"byte_end":27641,"line_start":772,"line_end":772,"column_start":1,"column_end":52}},{"value":"/     d_string: Duration,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":27642,"byte_end":27669,"line_start":773,"line_end":773,"column_start":1,"column_end":28}},{"value":"/ };","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":27670,"byte_end":27676,"line_start":774,"line_end":774,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":27677,"byte_end":27680,"line_start":775,"line_end":775,"column_start":1,"column_end":4}},{"value":"/ // Serialization","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":27681,"byte_end":27701,"line_start":776,"line_end":776,"column_start":1,"column_end":21}},{"value":"/ // See how the values get rounded, since subsecond precision is not allowed.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":27702,"byte_end":27782,"line_start":777,"line_end":777,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":27783,"byte_end":27786,"line_start":778,"line_end":778,"column_start":1,"column_end":4}},{"value":"/ let d = Durations {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":27787,"byte_end":27810,"line_start":779,"line_end":779,"column_start":1,"column_end":24}},{"value":"/     d_i64: Duration::seconds(-12345),","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":27811,"byte_end":27852,"line_start":780,"line_end":780,"column_start":1,"column_end":42}},{"value":"/     d_f64: Duration::seconds(-12345) + Duration::milliseconds(500),","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":27853,"byte_end":27924,"line_start":781,"line_end":781,"column_start":1,"column_end":72}},{"value":"/     d_string: Duration::seconds(12345) + Duration::nanoseconds(999_999_999),","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":27925,"byte_end":28005,"line_start":782,"line_end":782,"column_start":1,"column_end":81}},{"value":"/ };","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":28006,"byte_end":28012,"line_start":783,"line_end":783,"column_start":1,"column_end":7}},{"value":"/ // Observe the different datatypes","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":28013,"byte_end":28051,"line_start":784,"line_end":784,"column_start":1,"column_end":39}},{"value":"/ let expected = json!({","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":28052,"byte_end":28078,"line_start":785,"line_end":785,"column_start":1,"column_end":27}},{"value":"/     \"d_i64\": -12345,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":28079,"byte_end":28103,"line_start":786,"line_end":786,"column_start":1,"column_end":25}},{"value":"/     \"d_f64\": -12345.0,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":28104,"byte_end":28130,"line_start":787,"line_end":787,"column_start":1,"column_end":27}},{"value":"/     \"d_string\": \"12346\",","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":28131,"byte_end":28159,"line_start":788,"line_end":788,"column_start":1,"column_end":29}},{"value":"/ });","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":28160,"byte_end":28167,"line_start":789,"line_end":789,"column_start":1,"column_end":8}},{"value":"/ assert_eq!(expected, serde_json::to_value(&d).unwrap());","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":28168,"byte_end":28228,"line_start":790,"line_end":790,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":28229,"byte_end":28232,"line_start":791,"line_end":791,"column_start":1,"column_end":4}},{"value":"/ // Deserialization works too","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":28233,"byte_end":28265,"line_start":792,"line_end":792,"column_start":1,"column_end":33}},{"value":"/ // Subsecond precision in numbers will be rounded away","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":28266,"byte_end":28324,"line_start":793,"line_end":793,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":28325,"byte_end":28328,"line_start":794,"line_end":794,"column_start":1,"column_end":4}},{"value":"/ let json = json!({","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":28329,"byte_end":28351,"line_start":795,"line_end":795,"column_start":1,"column_end":23}},{"value":"/     \"d_i64\": -12345,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":28352,"byte_end":28376,"line_start":796,"line_end":796,"column_start":1,"column_end":25}},{"value":"/     \"d_f64\": -12345.5,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":28377,"byte_end":28403,"line_start":797,"line_end":797,"column_start":1,"column_end":27}},{"value":"/     \"d_string\": \"12346\",","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":28404,"byte_end":28432,"line_start":798,"line_end":798,"column_start":1,"column_end":29}},{"value":"/ });","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":28433,"byte_end":28440,"line_start":799,"line_end":799,"column_start":1,"column_end":8}},{"value":"/ let expected = Durations {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":28441,"byte_end":28471,"line_start":800,"line_end":800,"column_start":1,"column_end":31}},{"value":"/     d_i64: Duration::seconds(-12345),","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":28472,"byte_end":28513,"line_start":801,"line_end":801,"column_start":1,"column_end":42}},{"value":"/     d_f64: Duration::seconds(-12346),","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":28514,"byte_end":28555,"line_start":802,"line_end":802,"column_start":1,"column_end":42}},{"value":"/     d_string: Duration::seconds(12346),","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":28556,"byte_end":28599,"line_start":803,"line_end":803,"column_start":1,"column_end":44}},{"value":"/ };","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":28600,"byte_end":28606,"line_start":804,"line_end":804,"column_start":1,"column_end":7}},{"value":"/ assert_eq!(expected, serde_json::from_value(json).unwrap());","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":28607,"byte_end":28671,"line_start":805,"line_end":805,"column_start":1,"column_end":65}},{"value":"/ # }","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":28672,"byte_end":28679,"line_start":806,"line_end":806,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":28680,"byte_end":28687,"line_start":807,"line_end":807,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":28688,"byte_end":28691,"line_start":808,"line_end":808,"column_start":1,"column_end":4}},{"value":"/ [`chrono::Duration`]: chrono_crate::Duration","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":28692,"byte_end":28740,"line_start":809,"line_end":809,"column_start":1,"column_end":49}},{"value":"/ [feature flag]: https://docs.rs/serde_with/1.6.4/serde_with/guide/feature_flags/index.html","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":28741,"byte_end":28835,"line_start":810,"line_end":810,"column_start":1,"column_end":95}}]},{"kind":"Struct","id":{"krate":0,"index":5827},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":33986,"byte_end":34009,"line_start":938,"line_end":938,"column_start":12,"column_end":35},"name":"DurationSecondsWithFrac","qualname":"::DurationSecondsWithFrac","value":"","parent":null,"children":[],"decl_id":null,"docs":" De/Serialize Durations as number of seconds.","sig":null,"attributes":[{"value":"/ De/Serialize Durations as number of seconds.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":29032,"byte_end":29080,"line_start":817,"line_end":817,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":29081,"byte_end":29084,"line_start":818,"line_end":818,"column_start":1,"column_end":4}},{"value":"/ De/serialize durations as number of seconds with subsecond precision.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":29085,"byte_end":29158,"line_start":819,"line_end":819,"column_start":1,"column_end":74}},{"value":"/ Subsecond precision is *only* supported for [`DurationSecondsWithFrac`], but not for [`DurationSeconds`].","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":29159,"byte_end":29268,"line_start":820,"line_end":820,"column_start":1,"column_end":110}},{"value":"/ You can configure the serialization format between integers, floats, and stringified numbers with the `FORMAT` specifier and configure the deserialization with the `STRICTNESS` specifier.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":29269,"byte_end":29460,"line_start":821,"line_end":821,"column_start":1,"column_end":192}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":29461,"byte_end":29464,"line_start":822,"line_end":822,"column_start":1,"column_end":4}},{"value":"/ The `STRICTNESS` specifier can either be [`formats::Strict`] or [`formats::Flexible`] and defaults to [`formats::Strict`].","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":29465,"byte_end":29591,"line_start":823,"line_end":823,"column_start":1,"column_end":127}},{"value":"/ [`formats::Strict`] means that deserialization only supports the type given in `FORMAT`, e.g., if `FORMAT` is `u64` deserialization from a `f64` will error.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":29592,"byte_end":29752,"line_start":824,"line_end":824,"column_start":1,"column_end":161}},{"value":"/ [`formats::Flexible`] means that deserialization will perform a best effort to extract the correct duration and allows deserialization from any type.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":29753,"byte_end":29906,"line_start":825,"line_end":825,"column_start":1,"column_end":154}},{"value":"/ For example, deserializing `DurationSeconds<f64, Flexible>` will discard any subsecond precision during deserialization from `f64` and will parse a `String` as an integer number.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":29907,"byte_end":30089,"line_start":826,"line_end":826,"column_start":1,"column_end":183}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":30090,"byte_end":30093,"line_start":827,"line_end":827,"column_start":1,"column_end":4}},{"value":"/ This type also supports [`chrono::Duration`] with the `chrono`-[feature flag].","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":30094,"byte_end":30176,"line_start":828,"line_end":828,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":30177,"byte_end":30180,"line_start":829,"line_end":829,"column_start":1,"column_end":4}},{"value":"/ | Duration Type         | Converter                 | Available `FORMAT`s    |","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":30181,"byte_end":30263,"line_start":830,"line_end":830,"column_start":1,"column_end":83}},{"value":"/ | --------------------- | ------------------------- | ---------------------- |","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":30264,"byte_end":30346,"line_start":831,"line_end":831,"column_start":1,"column_end":83}},{"value":"/ | `std::time::Duration` | `DurationSeconds`         | `u64`, `f64`, `String` |","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":30347,"byte_end":30429,"line_start":832,"line_end":832,"column_start":1,"column_end":83}},{"value":"/ | `std::time::Duration` | `DurationSecondsWithFrac` | `f64`, `String`        |","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":30430,"byte_end":30512,"line_start":833,"line_end":833,"column_start":1,"column_end":83}},{"value":"/ | `chrono::Duration`    | `DurationSeconds`         | `i64`, `f64`, `String` |","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":30513,"byte_end":30595,"line_start":834,"line_end":834,"column_start":1,"column_end":83}},{"value":"/ | `chrono::Duration`    | `DurationSecondsWithFrac` | `f64`, `String`        |","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":30596,"byte_end":30678,"line_start":835,"line_end":835,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":30679,"byte_end":30682,"line_start":836,"line_end":836,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":30683,"byte_end":30697,"line_start":837,"line_end":837,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":30698,"byte_end":30701,"line_start":838,"line_end":838,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":30702,"byte_end":30713,"line_start":839,"line_end":839,"column_start":1,"column_end":12}},{"value":"/ # #[cfg(feature = \"macros\")] {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":30714,"byte_end":30748,"line_start":840,"line_end":840,"column_start":1,"column_end":35}},{"value":"/ # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":30749,"byte_end":30798,"line_start":841,"line_end":841,"column_start":1,"column_end":50}},{"value":"/ # use serde_json::json;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":30799,"byte_end":30826,"line_start":842,"line_end":842,"column_start":1,"column_end":28}},{"value":"/ # use serde_with::{serde_as, DurationSecondsWithFrac};","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":30827,"byte_end":30885,"line_start":843,"line_end":843,"column_start":1,"column_end":59}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":30886,"byte_end":30914,"line_start":844,"line_end":844,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":30915,"byte_end":30918,"line_start":845,"line_end":845,"column_start":1,"column_end":4}},{"value":"/ #[serde_as]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":30919,"byte_end":30934,"line_start":846,"line_end":846,"column_start":1,"column_end":16}},{"value":"/ # #[derive(Debug, PartialEq)]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":30935,"byte_end":30968,"line_start":847,"line_end":847,"column_start":1,"column_end":34}},{"value":"/ #[derive(Deserialize, Serialize)]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":30969,"byte_end":31006,"line_start":848,"line_end":848,"column_start":1,"column_end":38}},{"value":"/ struct Durations {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":31007,"byte_end":31029,"line_start":849,"line_end":849,"column_start":1,"column_end":23}},{"value":"/     #[serde_as(as = \"DurationSecondsWithFrac<f64>\")]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":31030,"byte_end":31086,"line_start":850,"line_end":850,"column_start":1,"column_end":57}},{"value":"/     d_f64: Duration,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":31087,"byte_end":31111,"line_start":851,"line_end":851,"column_start":1,"column_end":25}},{"value":"/     #[serde_as(as = \"DurationSecondsWithFrac<String>\")]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":31112,"byte_end":31171,"line_start":852,"line_end":852,"column_start":1,"column_end":60}},{"value":"/     d_string: Duration,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":31172,"byte_end":31199,"line_start":853,"line_end":853,"column_start":1,"column_end":28}},{"value":"/ };","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":31200,"byte_end":31206,"line_start":854,"line_end":854,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":31207,"byte_end":31210,"line_start":855,"line_end":855,"column_start":1,"column_end":4}},{"value":"/ // Serialization","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":31211,"byte_end":31231,"line_start":856,"line_end":856,"column_start":1,"column_end":21}},{"value":"/ // See how the values get rounded, since subsecond precision is not allowed.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":31232,"byte_end":31312,"line_start":857,"line_end":857,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":31313,"byte_end":31316,"line_start":858,"line_end":858,"column_start":1,"column_end":4}},{"value":"/ let d = Durations {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":31317,"byte_end":31340,"line_start":859,"line_end":859,"column_start":1,"column_end":24}},{"value":"/     d_f64: Duration::new(12345, 500_000_000), // Create from seconds and nanoseconds","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":31341,"byte_end":31429,"line_start":860,"line_end":860,"column_start":1,"column_end":89}},{"value":"/     d_string: Duration::new(12345, 999_999_000),","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":31430,"byte_end":31482,"line_start":861,"line_end":861,"column_start":1,"column_end":53}},{"value":"/ };","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":31483,"byte_end":31489,"line_start":862,"line_end":862,"column_start":1,"column_end":7}},{"value":"/ // Observe the different datatypes","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":31490,"byte_end":31528,"line_start":863,"line_end":863,"column_start":1,"column_end":39}},{"value":"/ let expected = json!({","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":31529,"byte_end":31555,"line_start":864,"line_end":864,"column_start":1,"column_end":27}},{"value":"/     \"d_f64\": 12345.5,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":31556,"byte_end":31581,"line_start":865,"line_end":865,"column_start":1,"column_end":26}},{"value":"/     \"d_string\": \"12345.999999\",","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":31582,"byte_end":31617,"line_start":866,"line_end":866,"column_start":1,"column_end":36}},{"value":"/ });","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":31618,"byte_end":31625,"line_start":867,"line_end":867,"column_start":1,"column_end":8}},{"value":"/ assert_eq!(expected, serde_json::to_value(&d).unwrap());","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":31626,"byte_end":31686,"line_start":868,"line_end":868,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":31687,"byte_end":31690,"line_start":869,"line_end":869,"column_start":1,"column_end":4}},{"value":"/ // Deserialization works too","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":31691,"byte_end":31723,"line_start":870,"line_end":870,"column_start":1,"column_end":33}},{"value":"/ // Subsecond precision in numbers will be rounded away","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":31724,"byte_end":31782,"line_start":871,"line_end":871,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":31783,"byte_end":31786,"line_start":872,"line_end":872,"column_start":1,"column_end":4}},{"value":"/ let json = json!({","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":31787,"byte_end":31809,"line_start":873,"line_end":873,"column_start":1,"column_end":23}},{"value":"/     \"d_f64\": 12345.5,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":31810,"byte_end":31835,"line_start":874,"line_end":874,"column_start":1,"column_end":26}},{"value":"/     \"d_string\": \"12345.987654\",","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":31836,"byte_end":31871,"line_start":875,"line_end":875,"column_start":1,"column_end":36}},{"value":"/ });","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":31872,"byte_end":31879,"line_start":876,"line_end":876,"column_start":1,"column_end":8}},{"value":"/ let expected = Durations {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":31880,"byte_end":31910,"line_start":877,"line_end":877,"column_start":1,"column_end":31}},{"value":"/     d_f64: Duration::new(12345, 500_000_000), // Create from seconds and nanoseconds","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":31911,"byte_end":31999,"line_start":878,"line_end":878,"column_start":1,"column_end":89}},{"value":"/     d_string: Duration::new(12345, 987_654_000),","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":32000,"byte_end":32052,"line_start":879,"line_end":879,"column_start":1,"column_end":53}},{"value":"/ };","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":32053,"byte_end":32059,"line_start":880,"line_end":880,"column_start":1,"column_end":7}},{"value":"/ assert_eq!(expected, serde_json::from_value(json).unwrap());","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":32060,"byte_end":32124,"line_start":881,"line_end":881,"column_start":1,"column_end":65}},{"value":"/ # }","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":32125,"byte_end":32132,"line_start":882,"line_end":882,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":32133,"byte_end":32140,"line_start":883,"line_end":883,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":32141,"byte_end":32144,"line_start":884,"line_end":884,"column_start":1,"column_end":4}},{"value":"/ [`chrono::Duration`] is also supported when using the `chrono` feature.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":32145,"byte_end":32220,"line_start":885,"line_end":885,"column_start":1,"column_end":76}},{"value":"/ It is a signed duration, thus can be de/serialized as an `i64` instead of a `u64`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":32221,"byte_end":32307,"line_start":886,"line_end":886,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":32308,"byte_end":32311,"line_start":887,"line_end":887,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":32312,"byte_end":32323,"line_start":888,"line_end":888,"column_start":1,"column_end":12}},{"value":"/ # #[cfg(all(feature = \"macros\", feature = \"chrono\"))] {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":32324,"byte_end":32383,"line_start":889,"line_end":889,"column_start":1,"column_end":60}},{"value":"/ # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":32384,"byte_end":32433,"line_start":890,"line_end":890,"column_start":1,"column_end":50}},{"value":"/ # use serde_json::json;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":32434,"byte_end":32461,"line_start":891,"line_end":891,"column_start":1,"column_end":28}},{"value":"/ # use serde_with::{serde_as, DurationSecondsWithFrac};","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":32462,"byte_end":32520,"line_start":892,"line_end":892,"column_start":1,"column_end":59}},{"value":"/ # use chrono_crate::Duration;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":32521,"byte_end":32554,"line_start":893,"line_end":893,"column_start":1,"column_end":34}},{"value":"/ # /* Ugliness to make the docs look nicer since I want to hide the rename of the chrono crate","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":32555,"byte_end":32652,"line_start":894,"line_end":894,"column_start":1,"column_end":98}},{"value":"/ use chrono::Duration;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":32653,"byte_end":32678,"line_start":895,"line_end":895,"column_start":1,"column_end":26}},{"value":"/ # */","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":32679,"byte_end":32687,"line_start":896,"line_end":896,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":32688,"byte_end":32691,"line_start":897,"line_end":897,"column_start":1,"column_end":4}},{"value":"/ #[serde_as]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":32692,"byte_end":32707,"line_start":898,"line_end":898,"column_start":1,"column_end":16}},{"value":"/ # #[derive(Debug, PartialEq)]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":32708,"byte_end":32741,"line_start":899,"line_end":899,"column_start":1,"column_end":34}},{"value":"/ #[derive(Deserialize, Serialize)]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":32742,"byte_end":32779,"line_start":900,"line_end":900,"column_start":1,"column_end":38}},{"value":"/ struct Durations {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":32780,"byte_end":32802,"line_start":901,"line_end":901,"column_start":1,"column_end":23}},{"value":"/     #[serde_as(as = \"DurationSecondsWithFrac<f64>\")]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":32803,"byte_end":32859,"line_start":902,"line_end":902,"column_start":1,"column_end":57}},{"value":"/     d_f64: Duration,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":32860,"byte_end":32884,"line_start":903,"line_end":903,"column_start":1,"column_end":25}},{"value":"/     #[serde_as(as = \"DurationSecondsWithFrac<String>\")]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":32885,"byte_end":32944,"line_start":904,"line_end":904,"column_start":1,"column_end":60}},{"value":"/     d_string: Duration,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":32945,"byte_end":32972,"line_start":905,"line_end":905,"column_start":1,"column_end":28}},{"value":"/ };","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":32973,"byte_end":32979,"line_start":906,"line_end":906,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":32980,"byte_end":32983,"line_start":907,"line_end":907,"column_start":1,"column_end":4}},{"value":"/ // Serialization","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":32984,"byte_end":33004,"line_start":908,"line_end":908,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":33005,"byte_end":33008,"line_start":909,"line_end":909,"column_start":1,"column_end":4}},{"value":"/ let d = Durations {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":33009,"byte_end":33032,"line_start":910,"line_end":910,"column_start":1,"column_end":24}},{"value":"/     d_f64: Duration::seconds(-12345) + Duration::milliseconds(500),","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":33033,"byte_end":33104,"line_start":911,"line_end":911,"column_start":1,"column_end":72}},{"value":"/     d_string: Duration::seconds(12345) + Duration::nanoseconds(999_999_000),","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":33105,"byte_end":33185,"line_start":912,"line_end":912,"column_start":1,"column_end":81}},{"value":"/ };","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":33186,"byte_end":33192,"line_start":913,"line_end":913,"column_start":1,"column_end":7}},{"value":"/ // Observe the different datatypes","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":33193,"byte_end":33231,"line_start":914,"line_end":914,"column_start":1,"column_end":39}},{"value":"/ let expected = json!({","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":33232,"byte_end":33258,"line_start":915,"line_end":915,"column_start":1,"column_end":27}},{"value":"/     \"d_f64\": -12344.5,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":33259,"byte_end":33285,"line_start":916,"line_end":916,"column_start":1,"column_end":27}},{"value":"/     \"d_string\": \"12345.999999\",","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":33286,"byte_end":33321,"line_start":917,"line_end":917,"column_start":1,"column_end":36}},{"value":"/ });","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":33322,"byte_end":33329,"line_start":918,"line_end":918,"column_start":1,"column_end":8}},{"value":"/ assert_eq!(expected, serde_json::to_value(&d).unwrap());","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":33330,"byte_end":33390,"line_start":919,"line_end":919,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":33391,"byte_end":33394,"line_start":920,"line_end":920,"column_start":1,"column_end":4}},{"value":"/ // Deserialization works too","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":33395,"byte_end":33427,"line_start":921,"line_end":921,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":33428,"byte_end":33431,"line_start":922,"line_end":922,"column_start":1,"column_end":4}},{"value":"/ let json = json!({","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":33432,"byte_end":33454,"line_start":923,"line_end":923,"column_start":1,"column_end":23}},{"value":"/     \"d_f64\": -12344.5,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":33455,"byte_end":33481,"line_start":924,"line_end":924,"column_start":1,"column_end":27}},{"value":"/     \"d_string\": \"12345.987\",","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":33482,"byte_end":33514,"line_start":925,"line_end":925,"column_start":1,"column_end":33}},{"value":"/ });","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":33515,"byte_end":33522,"line_start":926,"line_end":926,"column_start":1,"column_end":8}},{"value":"/ let expected = Durations {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":33523,"byte_end":33553,"line_start":927,"line_end":927,"column_start":1,"column_end":31}},{"value":"/     d_f64: Duration::seconds(-12345) + Duration::milliseconds(500),","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":33554,"byte_end":33625,"line_start":928,"line_end":928,"column_start":1,"column_end":72}},{"value":"/     d_string: Duration::seconds(12345) + Duration::milliseconds(987),","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":33626,"byte_end":33699,"line_start":929,"line_end":929,"column_start":1,"column_end":74}},{"value":"/ };","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":33700,"byte_end":33706,"line_start":930,"line_end":930,"column_start":1,"column_end":7}},{"value":"/ assert_eq!(expected, serde_json::from_value(json).unwrap());","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":33707,"byte_end":33771,"line_start":931,"line_end":931,"column_start":1,"column_end":65}},{"value":"/ # }","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":33772,"byte_end":33779,"line_start":932,"line_end":932,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":33780,"byte_end":33787,"line_start":933,"line_end":933,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":33788,"byte_end":33791,"line_start":934,"line_end":934,"column_start":1,"column_end":4}},{"value":"/ [`chrono::Duration`]: chrono_crate::Duration","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":33792,"byte_end":33840,"line_start":935,"line_end":935,"column_start":1,"column_end":49}},{"value":"/ [feature flag]: https://docs.rs/serde_with/1.6.4/serde_with/guide/feature_flags/index.html","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":33841,"byte_end":33935,"line_start":936,"line_end":936,"column_start":1,"column_end":95}}]},{"kind":"Struct","id":{"krate":0,"index":5847},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":34413,"byte_end":34433,"line_start":947,"line_end":947,"column_start":12,"column_end":32},"name":"DurationMilliSeconds","qualname":"::DurationMilliSeconds","value":"","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to [`DurationSeconds`] with milli-seconds as base unit.","sig":null,"attributes":[{"value":"/ Equivalent to [`DurationSeconds`] with milli-seconds as base unit.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":34140,"byte_end":34210,"line_start":943,"line_end":943,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":34211,"byte_end":34214,"line_start":944,"line_end":944,"column_start":1,"column_end":4}},{"value":"/ This type is equivalent to [`DurationSeconds`] except that the each unit represents 1 milli-second instead of 1 second for [`DurationSeconds`].","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":34215,"byte_end":34362,"line_start":945,"line_end":945,"column_start":1,"column_end":148}}]},{"kind":"Struct","id":{"krate":0,"index":5867},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":34861,"byte_end":34889,"line_start":956,"line_end":956,"column_start":12,"column_end":40},"name":"DurationMilliSecondsWithFrac","qualname":"::DurationMilliSecondsWithFrac","value":"","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to [`DurationSecondsWithFrac`] with milli-seconds as base unit.","sig":null,"attributes":[{"value":"/ Equivalent to [`DurationSecondsWithFrac`] with milli-seconds as base unit.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":34564,"byte_end":34642,"line_start":952,"line_end":952,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":34643,"byte_end":34646,"line_start":953,"line_end":953,"column_start":1,"column_end":4}},{"value":"/ This type is equivalent to [`DurationSecondsWithFrac`] except that the each unit represents 1 milli-second instead of 1 second for [`DurationSecondsWithFrac`].","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":34647,"byte_end":34810,"line_start":954,"line_end":954,"column_start":1,"column_end":164}}]},{"kind":"Struct","id":{"krate":0,"index":5887},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":35293,"byte_end":35313,"line_start":965,"line_end":965,"column_start":12,"column_end":32},"name":"DurationMicroSeconds","qualname":"::DurationMicroSeconds","value":"","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to [`DurationSeconds`] with micro-seconds as base unit.","sig":null,"attributes":[{"value":"/ Equivalent to [`DurationSeconds`] with micro-seconds as base unit.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":35020,"byte_end":35090,"line_start":961,"line_end":961,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":35091,"byte_end":35094,"line_start":962,"line_end":962,"column_start":1,"column_end":4}},{"value":"/ This type is equivalent to [`DurationSeconds`] except that the each unit represents 1 micro-second instead of 1 second for [`DurationSeconds`].","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":35095,"byte_end":35242,"line_start":963,"line_end":963,"column_start":1,"column_end":148}}]},{"kind":"Struct","id":{"krate":0,"index":5907},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":35741,"byte_end":35769,"line_start":974,"line_end":974,"column_start":12,"column_end":40},"name":"DurationMicroSecondsWithFrac","qualname":"::DurationMicroSecondsWithFrac","value":"","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to [`DurationSecondsWithFrac`] with micro-seconds as base unit.","sig":null,"attributes":[{"value":"/ Equivalent to [`DurationSecondsWithFrac`] with micro-seconds as base unit.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":35444,"byte_end":35522,"line_start":970,"line_end":970,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":35523,"byte_end":35526,"line_start":971,"line_end":971,"column_start":1,"column_end":4}},{"value":"/ This type is equivalent to [`DurationSecondsWithFrac`] except that the each unit represents 1 micro-second instead of 1 second for [`DurationSecondsWithFrac`].","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":35527,"byte_end":35690,"line_start":972,"line_end":972,"column_start":1,"column_end":164}}]},{"kind":"Struct","id":{"krate":0,"index":5927},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":36171,"byte_end":36190,"line_start":983,"line_end":983,"column_start":12,"column_end":31},"name":"DurationNanoSeconds","qualname":"::DurationNanoSeconds","value":"","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to [`DurationSeconds`] with nano-seconds as base unit.","sig":null,"attributes":[{"value":"/ Equivalent to [`DurationSeconds`] with nano-seconds as base unit.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":35900,"byte_end":35969,"line_start":979,"line_end":979,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":35970,"byte_end":35973,"line_start":980,"line_end":980,"column_start":1,"column_end":4}},{"value":"/ This type is equivalent to [`DurationSeconds`] except that the each unit represents 1 nano-second instead of 1 second for [`DurationSeconds`].","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":35974,"byte_end":36120,"line_start":981,"line_end":981,"column_start":1,"column_end":147}}]},{"kind":"Struct","id":{"krate":0,"index":5947},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":36616,"byte_end":36643,"line_start":992,"line_end":992,"column_start":12,"column_end":39},"name":"DurationNanoSecondsWithFrac","qualname":"::DurationNanoSecondsWithFrac","value":"","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to [`DurationSecondsWithFrac`] with nano-seconds as base unit.","sig":null,"attributes":[{"value":"/ Equivalent to [`DurationSecondsWithFrac`] with nano-seconds as base unit.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":36321,"byte_end":36398,"line_start":988,"line_end":988,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":36399,"byte_end":36402,"line_start":989,"line_end":989,"column_start":1,"column_end":4}},{"value":"/ This type is equivalent to [`DurationSecondsWithFrac`] except that the each unit represents 1 nano-second instead of 1 second for [`DurationSecondsWithFrac`].","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":36403,"byte_end":36565,"line_start":990,"line_end":990,"column_start":1,"column_end":163}}]},{"kind":"Struct","id":{"krate":0,"index":5967},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":42713,"byte_end":42729,"line_start":1135,"line_end":1135,"column_start":12,"column_end":28},"name":"TimestampSeconds","qualname":"::TimestampSeconds","value":"","parent":null,"children":[],"decl_id":null,"docs":" De/Serialize timestamps as seconds since the UNIX epoch","sig":null,"attributes":[{"value":"/ De/Serialize timestamps as seconds since the UNIX epoch","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":36774,"byte_end":36833,"line_start":997,"line_end":997,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":36834,"byte_end":36837,"line_start":998,"line_end":998,"column_start":1,"column_end":4}},{"value":"/ De/serialize timestamps as seconds since the UNIX epoch.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":36838,"byte_end":36898,"line_start":999,"line_end":999,"column_start":1,"column_end":61}},{"value":"/ Subsecond precision is *only* supported for [`TimestampSecondsWithFrac`], but not for [`TimestampSeconds`].","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":36899,"byte_end":37010,"line_start":1000,"line_end":1000,"column_start":1,"column_end":112}},{"value":"/ You can configure the serialization format between integers, floats, and stringified numbers with the `FORMAT` specifier and configure the deserialization with the `STRICTNESS` specifier.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":37011,"byte_end":37202,"line_start":1001,"line_end":1001,"column_start":1,"column_end":192}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":37203,"byte_end":37206,"line_start":1002,"line_end":1002,"column_start":1,"column_end":4}},{"value":"/ The `STRICTNESS` specifier can either be [`formats::Strict`] or [`formats::Flexible`] and defaults to [`formats::Strict`].","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":37207,"byte_end":37333,"line_start":1003,"line_end":1003,"column_start":1,"column_end":127}},{"value":"/ [`formats::Strict`] means that deserialization only supports the type given in `FORMAT`, e.g., if `FORMAT` is `i64` deserialization from a `f64` will error.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":37334,"byte_end":37494,"line_start":1004,"line_end":1004,"column_start":1,"column_end":161}},{"value":"/ [`formats::Flexible`] means that deserialization will perform a best effort to extract the correct timestamp and allows deserialization from any type.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":37495,"byte_end":37649,"line_start":1005,"line_end":1005,"column_start":1,"column_end":155}},{"value":"/ For example, deserializing `TimestampSeconds<f64, Flexible>` will discard any subsecond precision during deserialization from `f64` and will parse a `String` as an integer number.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":37650,"byte_end":37833,"line_start":1006,"line_end":1006,"column_start":1,"column_end":184}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":37834,"byte_end":37837,"line_start":1007,"line_end":1007,"column_start":1,"column_end":4}},{"value":"/ This type also supports [`chrono::DateTime`][DateTime] with the `chrono`-[feature flag].","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":37838,"byte_end":37930,"line_start":1008,"line_end":1008,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":37931,"byte_end":37934,"line_start":1009,"line_end":1009,"column_start":1,"column_end":4}},{"value":"/ | Timestamp Type            | Converter                  | Available `FORMAT`s    |","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":37935,"byte_end":38022,"line_start":1010,"line_end":1010,"column_start":1,"column_end":88}},{"value":"/ | ------------------------- | -------------------------- | ---------------------- |","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":38023,"byte_end":38110,"line_start":1011,"line_end":1011,"column_start":1,"column_end":88}},{"value":"/ | `std::time::SystemTime`   | `TimestampSeconds`         | `i64`, `f64`, `String` |","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":38111,"byte_end":38198,"line_start":1012,"line_end":1012,"column_start":1,"column_end":88}},{"value":"/ | `std::time::SystemTime`   | `TimestampSecondsWithFrac` | `f64`, `String`        |","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":38199,"byte_end":38286,"line_start":1013,"line_end":1013,"column_start":1,"column_end":88}},{"value":"/ | `chrono::DateTime<Utc>`   | `TimestampSeconds`         | `i64`, `f64`, `String` |","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":38287,"byte_end":38374,"line_start":1014,"line_end":1014,"column_start":1,"column_end":88}},{"value":"/ | `chrono::DateTime<Utc>`   | `TimestampSecondsWithFrac` | `f64`, `String`        |","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":38375,"byte_end":38462,"line_start":1015,"line_end":1015,"column_start":1,"column_end":88}},{"value":"/ | `chrono::DateTime<Local>` | `TimestampSeconds`         | `i64`, `f64`, `String` |","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":38463,"byte_end":38550,"line_start":1016,"line_end":1016,"column_start":1,"column_end":88}},{"value":"/ | `chrono::DateTime<Local>` | `TimestampSecondsWithFrac` | `f64`, `String`        |","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":38551,"byte_end":38638,"line_start":1017,"line_end":1017,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":38639,"byte_end":38642,"line_start":1018,"line_end":1018,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":38643,"byte_end":38657,"line_start":1019,"line_end":1019,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":38658,"byte_end":38661,"line_start":1020,"line_end":1020,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":38662,"byte_end":38673,"line_start":1021,"line_end":1021,"column_start":1,"column_end":12}},{"value":"/ # #[cfg(feature = \"macros\")] {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":38674,"byte_end":38708,"line_start":1022,"line_end":1022,"column_start":1,"column_end":35}},{"value":"/ # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":38709,"byte_end":38758,"line_start":1023,"line_end":1023,"column_start":1,"column_end":50}},{"value":"/ # use serde_json::json;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":38759,"byte_end":38786,"line_start":1024,"line_end":1024,"column_start":1,"column_end":28}},{"value":"/ # use serde_with::{serde_as, TimestampSeconds};","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":38787,"byte_end":38838,"line_start":1025,"line_end":1025,"column_start":1,"column_end":52}},{"value":"/ use std::time::{Duration, SystemTime};","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":38839,"byte_end":38881,"line_start":1026,"line_end":1026,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":38882,"byte_end":38885,"line_start":1027,"line_end":1027,"column_start":1,"column_end":4}},{"value":"/ #[serde_as]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":38886,"byte_end":38901,"line_start":1028,"line_end":1028,"column_start":1,"column_end":16}},{"value":"/ # #[derive(Debug, PartialEq)]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":38902,"byte_end":38935,"line_start":1029,"line_end":1029,"column_start":1,"column_end":34}},{"value":"/ #[derive(Deserialize, Serialize)]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":38936,"byte_end":38973,"line_start":1030,"line_end":1030,"column_start":1,"column_end":38}},{"value":"/ struct Timestamps {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":38974,"byte_end":38997,"line_start":1031,"line_end":1031,"column_start":1,"column_end":24}},{"value":"/     #[serde_as(as = \"TimestampSeconds<i64>\")]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":38998,"byte_end":39047,"line_start":1032,"line_end":1032,"column_start":1,"column_end":50}},{"value":"/     st_i64: SystemTime,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":39048,"byte_end":39075,"line_start":1033,"line_end":1033,"column_start":1,"column_end":28}},{"value":"/     #[serde_as(as = \"TimestampSeconds<f64>\")]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":39076,"byte_end":39125,"line_start":1034,"line_end":1034,"column_start":1,"column_end":50}},{"value":"/     st_f64: SystemTime,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":39126,"byte_end":39153,"line_start":1035,"line_end":1035,"column_start":1,"column_end":28}},{"value":"/     #[serde_as(as = \"TimestampSeconds<String>\")]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":39154,"byte_end":39206,"line_start":1036,"line_end":1036,"column_start":1,"column_end":53}},{"value":"/     st_string: SystemTime,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":39207,"byte_end":39237,"line_start":1037,"line_end":1037,"column_start":1,"column_end":31}},{"value":"/ };","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":39238,"byte_end":39244,"line_start":1038,"line_end":1038,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":39245,"byte_end":39248,"line_start":1039,"line_end":1039,"column_start":1,"column_end":4}},{"value":"/ // Serialization","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":39249,"byte_end":39269,"line_start":1040,"line_end":1040,"column_start":1,"column_end":21}},{"value":"/ // See how the values get rounded, since subsecond precision is not allowed.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":39270,"byte_end":39350,"line_start":1041,"line_end":1041,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":39351,"byte_end":39354,"line_start":1042,"line_end":1042,"column_start":1,"column_end":4}},{"value":"/ let ts = Timestamps {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":39355,"byte_end":39380,"line_start":1043,"line_end":1043,"column_start":1,"column_end":26}},{"value":"/     st_i64: SystemTime::UNIX_EPOCH.checked_add(Duration::new(12345, 0)).unwrap(),","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":39381,"byte_end":39466,"line_start":1044,"line_end":1044,"column_start":1,"column_end":86}},{"value":"/     st_f64: SystemTime::UNIX_EPOCH.checked_add(Duration::new(12345, 500_000_000)).unwrap(),","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":39467,"byte_end":39562,"line_start":1045,"line_end":1045,"column_start":1,"column_end":96}},{"value":"/     st_string: SystemTime::UNIX_EPOCH.checked_add(Duration::new(12345, 999_999_999)).unwrap(),","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":39563,"byte_end":39661,"line_start":1046,"line_end":1046,"column_start":1,"column_end":99}},{"value":"/ };","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":39662,"byte_end":39668,"line_start":1047,"line_end":1047,"column_start":1,"column_end":7}},{"value":"/ // Observe the different datatypes","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":39669,"byte_end":39707,"line_start":1048,"line_end":1048,"column_start":1,"column_end":39}},{"value":"/ let expected = json!({","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":39708,"byte_end":39734,"line_start":1049,"line_end":1049,"column_start":1,"column_end":27}},{"value":"/     \"st_i64\": 12345,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":39735,"byte_end":39759,"line_start":1050,"line_end":1050,"column_start":1,"column_end":25}},{"value":"/     \"st_f64\": 12346.0,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":39760,"byte_end":39786,"line_start":1051,"line_end":1051,"column_start":1,"column_end":27}},{"value":"/     \"st_string\": \"12346\",","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":39787,"byte_end":39816,"line_start":1052,"line_end":1052,"column_start":1,"column_end":30}},{"value":"/ });","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":39817,"byte_end":39824,"line_start":1053,"line_end":1053,"column_start":1,"column_end":8}},{"value":"/ assert_eq!(expected, serde_json::to_value(&ts).unwrap());","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":39825,"byte_end":39886,"line_start":1054,"line_end":1054,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":39887,"byte_end":39890,"line_start":1055,"line_end":1055,"column_start":1,"column_end":4}},{"value":"/ // Deserialization works too","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":39891,"byte_end":39923,"line_start":1056,"line_end":1056,"column_start":1,"column_end":33}},{"value":"/ // Subsecond precision in numbers will be rounded away","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":39924,"byte_end":39982,"line_start":1057,"line_end":1057,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":39983,"byte_end":39986,"line_start":1058,"line_end":1058,"column_start":1,"column_end":4}},{"value":"/ let json = json!({","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":39987,"byte_end":40009,"line_start":1059,"line_end":1059,"column_start":1,"column_end":23}},{"value":"/     \"st_i64\": 12345,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":40010,"byte_end":40034,"line_start":1060,"line_end":1060,"column_start":1,"column_end":25}},{"value":"/     \"st_f64\": 12345.5,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":40035,"byte_end":40061,"line_start":1061,"line_end":1061,"column_start":1,"column_end":27}},{"value":"/     \"st_string\": \"12346\",","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":40062,"byte_end":40091,"line_start":1062,"line_end":1062,"column_start":1,"column_end":30}},{"value":"/ });","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":40092,"byte_end":40099,"line_start":1063,"line_end":1063,"column_start":1,"column_end":8}},{"value":"/ let expected  = Timestamps {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":40100,"byte_end":40132,"line_start":1064,"line_end":1064,"column_start":1,"column_end":33}},{"value":"/     st_i64: SystemTime::UNIX_EPOCH.checked_add(Duration::new(12345, 0)).unwrap(),","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":40133,"byte_end":40218,"line_start":1065,"line_end":1065,"column_start":1,"column_end":86}},{"value":"/     st_f64: SystemTime::UNIX_EPOCH.checked_add(Duration::new(12346, 0)).unwrap(),","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":40219,"byte_end":40304,"line_start":1066,"line_end":1066,"column_start":1,"column_end":86}},{"value":"/     st_string: SystemTime::UNIX_EPOCH.checked_add(Duration::new(12346, 0)).unwrap(),","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":40305,"byte_end":40393,"line_start":1067,"line_end":1067,"column_start":1,"column_end":89}},{"value":"/ };","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":40394,"byte_end":40400,"line_start":1068,"line_end":1068,"column_start":1,"column_end":7}},{"value":"/ assert_eq!(expected, serde_json::from_value(json).unwrap());","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":40401,"byte_end":40465,"line_start":1069,"line_end":1069,"column_start":1,"column_end":65}},{"value":"/ # }","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":40466,"byte_end":40473,"line_start":1070,"line_end":1070,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":40474,"byte_end":40481,"line_start":1071,"line_end":1071,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":40482,"byte_end":40485,"line_start":1072,"line_end":1072,"column_start":1,"column_end":4}},{"value":"/ [`chrono::DateTime<Utc>`][DateTime] and [`chrono::DateTime<Local>`][DateTime] are also supported when using the `chrono` feature.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":40486,"byte_end":40619,"line_start":1073,"line_end":1073,"column_start":1,"column_end":134}},{"value":"/ Like [`SystemTime`], it is a signed timestamp, thus can be de/serialized as an `i64`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":40620,"byte_end":40709,"line_start":1074,"line_end":1074,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":40710,"byte_end":40713,"line_start":1075,"line_end":1075,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":40714,"byte_end":40725,"line_start":1076,"line_end":1076,"column_start":1,"column_end":12}},{"value":"/ # #[cfg(all(feature = \"macros\", feature = \"chrono\"))] {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":40726,"byte_end":40785,"line_start":1077,"line_end":1077,"column_start":1,"column_end":60}},{"value":"/ # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":40786,"byte_end":40835,"line_start":1078,"line_end":1078,"column_start":1,"column_end":50}},{"value":"/ # use serde_json::json;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":40836,"byte_end":40863,"line_start":1079,"line_end":1079,"column_start":1,"column_end":28}},{"value":"/ # use serde_with::{serde_as, TimestampSeconds};","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":40864,"byte_end":40915,"line_start":1080,"line_end":1080,"column_start":1,"column_end":52}},{"value":"/ # use chrono_crate::{DateTime, Local, TimeZone, Utc};","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":40916,"byte_end":40973,"line_start":1081,"line_end":1081,"column_start":1,"column_end":58}},{"value":"/ # /* Ugliness to make the docs look nicer since I want to hide the rename of the chrono crate","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":40974,"byte_end":41071,"line_start":1082,"line_end":1082,"column_start":1,"column_end":98}},{"value":"/ use chrono::{DateTime, Local, TimeZone, Utc};","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":41072,"byte_end":41121,"line_start":1083,"line_end":1083,"column_start":1,"column_end":50}},{"value":"/ # */","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":41122,"byte_end":41130,"line_start":1084,"line_end":1084,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":41131,"byte_end":41134,"line_start":1085,"line_end":1085,"column_start":1,"column_end":4}},{"value":"/ #[serde_as]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":41135,"byte_end":41150,"line_start":1086,"line_end":1086,"column_start":1,"column_end":16}},{"value":"/ # #[derive(Debug, PartialEq)]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":41151,"byte_end":41184,"line_start":1087,"line_end":1087,"column_start":1,"column_end":34}},{"value":"/ #[derive(Deserialize, Serialize)]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":41185,"byte_end":41222,"line_start":1088,"line_end":1088,"column_start":1,"column_end":38}},{"value":"/ struct Timestamps {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":41223,"byte_end":41246,"line_start":1089,"line_end":1089,"column_start":1,"column_end":24}},{"value":"/     #[serde_as(as = \"TimestampSeconds<i64>\")]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":41247,"byte_end":41296,"line_start":1090,"line_end":1090,"column_start":1,"column_end":50}},{"value":"/     dt_i64: DateTime<Utc>,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":41297,"byte_end":41327,"line_start":1091,"line_end":1091,"column_start":1,"column_end":31}},{"value":"/     #[serde_as(as = \"TimestampSeconds<f64>\")]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":41328,"byte_end":41377,"line_start":1092,"line_end":1092,"column_start":1,"column_end":50}},{"value":"/     dt_f64: DateTime<Local>,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":41378,"byte_end":41410,"line_start":1093,"line_end":1093,"column_start":1,"column_end":33}},{"value":"/     #[serde_as(as = \"TimestampSeconds<String>\")]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":41411,"byte_end":41463,"line_start":1094,"line_end":1094,"column_start":1,"column_end":53}},{"value":"/     dt_string: DateTime<Utc>,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":41464,"byte_end":41497,"line_start":1095,"line_end":1095,"column_start":1,"column_end":34}},{"value":"/ };","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":41498,"byte_end":41504,"line_start":1096,"line_end":1096,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":41505,"byte_end":41508,"line_start":1097,"line_end":1097,"column_start":1,"column_end":4}},{"value":"/ // Serialization","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":41509,"byte_end":41529,"line_start":1098,"line_end":1098,"column_start":1,"column_end":21}},{"value":"/ // See how the values get rounded, since subsecond precision is not allowed.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":41530,"byte_end":41610,"line_start":1099,"line_end":1099,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":41611,"byte_end":41614,"line_start":1100,"line_end":1100,"column_start":1,"column_end":4}},{"value":"/ let ts = Timestamps {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":41615,"byte_end":41640,"line_start":1101,"line_end":1101,"column_start":1,"column_end":26}},{"value":"/     dt_i64: Utc.timestamp(-12345, 0),","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":41641,"byte_end":41682,"line_start":1102,"line_end":1102,"column_start":1,"column_end":42}},{"value":"/     dt_f64: Local.timestamp(-12345, 500_000_000),","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":41683,"byte_end":41736,"line_start":1103,"line_end":1103,"column_start":1,"column_end":54}},{"value":"/     dt_string: Utc.timestamp(12345, 999_999_999),","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":41737,"byte_end":41790,"line_start":1104,"line_end":1104,"column_start":1,"column_end":54}},{"value":"/ };","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":41791,"byte_end":41797,"line_start":1105,"line_end":1105,"column_start":1,"column_end":7}},{"value":"/ // Observe the different datatypes","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":41798,"byte_end":41836,"line_start":1106,"line_end":1106,"column_start":1,"column_end":39}},{"value":"/ let expected = json!({","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":41837,"byte_end":41863,"line_start":1107,"line_end":1107,"column_start":1,"column_end":27}},{"value":"/     \"dt_i64\": -12345,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":41864,"byte_end":41889,"line_start":1108,"line_end":1108,"column_start":1,"column_end":26}},{"value":"/     \"dt_f64\": -12345.0,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":41890,"byte_end":41917,"line_start":1109,"line_end":1109,"column_start":1,"column_end":28}},{"value":"/     \"dt_string\": \"12346\",","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":41918,"byte_end":41947,"line_start":1110,"line_end":1110,"column_start":1,"column_end":30}},{"value":"/ });","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":41948,"byte_end":41955,"line_start":1111,"line_end":1111,"column_start":1,"column_end":8}},{"value":"/ assert_eq!(expected, serde_json::to_value(&ts).unwrap());","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":41956,"byte_end":42017,"line_start":1112,"line_end":1112,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":42018,"byte_end":42021,"line_start":1113,"line_end":1113,"column_start":1,"column_end":4}},{"value":"/ // Deserialization works too","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":42022,"byte_end":42054,"line_start":1114,"line_end":1114,"column_start":1,"column_end":33}},{"value":"/ // Subsecond precision in numbers will be rounded away","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":42055,"byte_end":42113,"line_start":1115,"line_end":1115,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":42114,"byte_end":42117,"line_start":1116,"line_end":1116,"column_start":1,"column_end":4}},{"value":"/ let json = json!({","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":42118,"byte_end":42140,"line_start":1117,"line_end":1117,"column_start":1,"column_end":23}},{"value":"/     \"dt_i64\": -12345,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":42141,"byte_end":42166,"line_start":1118,"line_end":1118,"column_start":1,"column_end":26}},{"value":"/     \"dt_f64\": -12345.5,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":42167,"byte_end":42194,"line_start":1119,"line_end":1119,"column_start":1,"column_end":28}},{"value":"/     \"dt_string\": \"12346\",","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":42195,"byte_end":42224,"line_start":1120,"line_end":1120,"column_start":1,"column_end":30}},{"value":"/ });","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":42225,"byte_end":42232,"line_start":1121,"line_end":1121,"column_start":1,"column_end":8}},{"value":"/ let expected = Timestamps {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":42233,"byte_end":42264,"line_start":1122,"line_end":1122,"column_start":1,"column_end":32}},{"value":"/     dt_i64: Utc.timestamp(-12345, 0),","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":42265,"byte_end":42306,"line_start":1123,"line_end":1123,"column_start":1,"column_end":42}},{"value":"/     dt_f64: Local.timestamp(-12346, 0),","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":42307,"byte_end":42350,"line_start":1124,"line_end":1124,"column_start":1,"column_end":44}},{"value":"/     dt_string: Utc.timestamp(12346, 0),","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":42351,"byte_end":42394,"line_start":1125,"line_end":1125,"column_start":1,"column_end":44}},{"value":"/ };","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":42395,"byte_end":42401,"line_start":1126,"line_end":1126,"column_start":1,"column_end":7}},{"value":"/ assert_eq!(expected, serde_json::from_value(json).unwrap());","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":42402,"byte_end":42466,"line_start":1127,"line_end":1127,"column_start":1,"column_end":65}},{"value":"/ # }","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":42467,"byte_end":42474,"line_start":1128,"line_end":1128,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":42475,"byte_end":42482,"line_start":1129,"line_end":1129,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":42483,"byte_end":42486,"line_start":1130,"line_end":1130,"column_start":1,"column_end":4}},{"value":"/ [`SystemTime`]: std::time::SystemTime","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":42487,"byte_end":42528,"line_start":1131,"line_end":1131,"column_start":1,"column_end":42}},{"value":"/ [DateTime]: chrono_crate::DateTime","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":42529,"byte_end":42567,"line_start":1132,"line_end":1132,"column_start":1,"column_end":39}},{"value":"/ [feature flag]: https://docs.rs/serde_with/1.6.4/serde_with/guide/feature_flags/index.html","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":42568,"byte_end":42662,"line_start":1133,"line_end":1133,"column_start":1,"column_end":95}}]},{"kind":"Struct","id":{"krate":0,"index":5987},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":48254,"byte_end":48278,"line_start":1264,"line_end":1264,"column_start":12,"column_end":36},"name":"TimestampSecondsWithFrac","qualname":"::TimestampSecondsWithFrac","value":"","parent":null,"children":[],"decl_id":null,"docs":" De/Serialize timestamps as seconds since the UNIX epoch","sig":null,"attributes":[{"value":"/ De/Serialize timestamps as seconds since the UNIX epoch","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":42860,"byte_end":42919,"line_start":1140,"line_end":1140,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":42920,"byte_end":42923,"line_start":1141,"line_end":1141,"column_start":1,"column_end":4}},{"value":"/ De/serialize timestamps as seconds since the UNIX epoch.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":42924,"byte_end":42984,"line_start":1142,"line_end":1142,"column_start":1,"column_end":61}},{"value":"/ Subsecond precision is *only* supported for [`TimestampSecondsWithFrac`], but not for [`TimestampSeconds`].","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":42985,"byte_end":43096,"line_start":1143,"line_end":1143,"column_start":1,"column_end":112}},{"value":"/ You can configure the serialization format between integers, floats, and stringified numbers with the `FORMAT` specifier and configure the deserialization with the `STRICTNESS` specifier.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":43097,"byte_end":43288,"line_start":1144,"line_end":1144,"column_start":1,"column_end":192}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":43289,"byte_end":43292,"line_start":1145,"line_end":1145,"column_start":1,"column_end":4}},{"value":"/ The `STRICTNESS` specifier can either be [`formats::Strict`] or [`formats::Flexible`] and defaults to [`formats::Strict`].","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":43293,"byte_end":43419,"line_start":1146,"line_end":1146,"column_start":1,"column_end":127}},{"value":"/ [`formats::Strict`] means that deserialization only supports the type given in `FORMAT`, e.g., if `FORMAT` is `i64` deserialization from a `f64` will error.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":43420,"byte_end":43580,"line_start":1147,"line_end":1147,"column_start":1,"column_end":161}},{"value":"/ [`formats::Flexible`] means that deserialization will perform a best effort to extract the correct timestamp and allows deserialization from any type.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":43581,"byte_end":43735,"line_start":1148,"line_end":1148,"column_start":1,"column_end":155}},{"value":"/ For example, deserializing `TimestampSeconds<f64, Flexible>` will discard any subsecond precision during deserialization from `f64` and will parse a `String` as an integer number.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":43736,"byte_end":43919,"line_start":1149,"line_end":1149,"column_start":1,"column_end":184}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":43920,"byte_end":43923,"line_start":1150,"line_end":1150,"column_start":1,"column_end":4}},{"value":"/ This type also supports [`chrono::DateTime`][DateTime] with the `chrono`-[feature flag].","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":43924,"byte_end":44016,"line_start":1151,"line_end":1151,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":44017,"byte_end":44020,"line_start":1152,"line_end":1152,"column_start":1,"column_end":4}},{"value":"/ | Timestamp Type            | Converter                  | Available `FORMAT`s    |","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":44021,"byte_end":44108,"line_start":1153,"line_end":1153,"column_start":1,"column_end":88}},{"value":"/ | ------------------------- | -------------------------- | ---------------------- |","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":44109,"byte_end":44196,"line_start":1154,"line_end":1154,"column_start":1,"column_end":88}},{"value":"/ | `std::time::SystemTime`   | `TimestampSeconds`         | `i64`, `f64`, `String` |","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":44197,"byte_end":44284,"line_start":1155,"line_end":1155,"column_start":1,"column_end":88}},{"value":"/ | `std::time::SystemTime`   | `TimestampSecondsWithFrac` | `f64`, `String`        |","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":44285,"byte_end":44372,"line_start":1156,"line_end":1156,"column_start":1,"column_end":88}},{"value":"/ | `chrono::DateTime<Utc>`   | `TimestampSeconds`         | `i64`, `f64`, `String` |","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":44373,"byte_end":44460,"line_start":1157,"line_end":1157,"column_start":1,"column_end":88}},{"value":"/ | `chrono::DateTime<Utc>`   | `TimestampSecondsWithFrac` | `f64`, `String`        |","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":44461,"byte_end":44548,"line_start":1158,"line_end":1158,"column_start":1,"column_end":88}},{"value":"/ | `chrono::DateTime<Local>` | `TimestampSeconds`         | `i64`, `f64`, `String` |","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":44549,"byte_end":44636,"line_start":1159,"line_end":1159,"column_start":1,"column_end":88}},{"value":"/ | `chrono::DateTime<Local>` | `TimestampSecondsWithFrac` | `f64`, `String`        |","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":44637,"byte_end":44724,"line_start":1160,"line_end":1160,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":44725,"byte_end":44728,"line_start":1161,"line_end":1161,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":44729,"byte_end":44743,"line_start":1162,"line_end":1162,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":44744,"byte_end":44747,"line_start":1163,"line_end":1163,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":44748,"byte_end":44759,"line_start":1164,"line_end":1164,"column_start":1,"column_end":12}},{"value":"/ # #[cfg(feature = \"macros\")] {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":44760,"byte_end":44794,"line_start":1165,"line_end":1165,"column_start":1,"column_end":35}},{"value":"/ # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":44795,"byte_end":44844,"line_start":1166,"line_end":1166,"column_start":1,"column_end":50}},{"value":"/ # use serde_json::json;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":44845,"byte_end":44872,"line_start":1167,"line_end":1167,"column_start":1,"column_end":28}},{"value":"/ # use serde_with::{serde_as, TimestampSecondsWithFrac};","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":44873,"byte_end":44932,"line_start":1168,"line_end":1168,"column_start":1,"column_end":60}},{"value":"/ use std::time::{Duration, SystemTime};","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":44933,"byte_end":44975,"line_start":1169,"line_end":1169,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":44976,"byte_end":44979,"line_start":1170,"line_end":1170,"column_start":1,"column_end":4}},{"value":"/ #[serde_as]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":44980,"byte_end":44995,"line_start":1171,"line_end":1171,"column_start":1,"column_end":16}},{"value":"/ # #[derive(Debug, PartialEq)]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":44996,"byte_end":45029,"line_start":1172,"line_end":1172,"column_start":1,"column_end":34}},{"value":"/ #[derive(Deserialize, Serialize)]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":45030,"byte_end":45067,"line_start":1173,"line_end":1173,"column_start":1,"column_end":38}},{"value":"/ struct Timestamps {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":45068,"byte_end":45091,"line_start":1174,"line_end":1174,"column_start":1,"column_end":24}},{"value":"/     #[serde_as(as = \"TimestampSecondsWithFrac<f64>\")]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":45092,"byte_end":45149,"line_start":1175,"line_end":1175,"column_start":1,"column_end":58}},{"value":"/     st_f64: SystemTime,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":45150,"byte_end":45177,"line_start":1176,"line_end":1176,"column_start":1,"column_end":28}},{"value":"/     #[serde_as(as = \"TimestampSecondsWithFrac<String>\")]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":45178,"byte_end":45238,"line_start":1177,"line_end":1177,"column_start":1,"column_end":61}},{"value":"/     st_string: SystemTime,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":45239,"byte_end":45269,"line_start":1178,"line_end":1178,"column_start":1,"column_end":31}},{"value":"/ };","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":45270,"byte_end":45276,"line_start":1179,"line_end":1179,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":45277,"byte_end":45280,"line_start":1180,"line_end":1180,"column_start":1,"column_end":4}},{"value":"/ // Serialization","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":45281,"byte_end":45301,"line_start":1181,"line_end":1181,"column_start":1,"column_end":21}},{"value":"/ // See how the values get rounded, since subsecond precision is not allowed.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":45302,"byte_end":45382,"line_start":1182,"line_end":1182,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":45383,"byte_end":45386,"line_start":1183,"line_end":1183,"column_start":1,"column_end":4}},{"value":"/ let ts = Timestamps {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":45387,"byte_end":45412,"line_start":1184,"line_end":1184,"column_start":1,"column_end":26}},{"value":"/     st_f64: SystemTime::UNIX_EPOCH.checked_add(Duration::new(12345, 500_000_000)).unwrap(),","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":45413,"byte_end":45508,"line_start":1185,"line_end":1185,"column_start":1,"column_end":96}},{"value":"/     st_string: SystemTime::UNIX_EPOCH.checked_add(Duration::new(12345, 999_999_000)).unwrap(),","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":45509,"byte_end":45607,"line_start":1186,"line_end":1186,"column_start":1,"column_end":99}},{"value":"/ };","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":45608,"byte_end":45614,"line_start":1187,"line_end":1187,"column_start":1,"column_end":7}},{"value":"/ // Observe the different datatypes","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":45615,"byte_end":45653,"line_start":1188,"line_end":1188,"column_start":1,"column_end":39}},{"value":"/ let expected = json!({","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":45654,"byte_end":45680,"line_start":1189,"line_end":1189,"column_start":1,"column_end":27}},{"value":"/     \"st_f64\": 12345.5,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":45681,"byte_end":45707,"line_start":1190,"line_end":1190,"column_start":1,"column_end":27}},{"value":"/     \"st_string\": \"12345.999999\",","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":45708,"byte_end":45744,"line_start":1191,"line_end":1191,"column_start":1,"column_end":37}},{"value":"/ });","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":45745,"byte_end":45752,"line_start":1192,"line_end":1192,"column_start":1,"column_end":8}},{"value":"/ assert_eq!(expected, serde_json::to_value(&ts).unwrap());","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":45753,"byte_end":45814,"line_start":1193,"line_end":1193,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":45815,"byte_end":45818,"line_start":1194,"line_end":1194,"column_start":1,"column_end":4}},{"value":"/ // Deserialization works too","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":45819,"byte_end":45851,"line_start":1195,"line_end":1195,"column_start":1,"column_end":33}},{"value":"/ // Subsecond precision in numbers will be rounded away","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":45852,"byte_end":45910,"line_start":1196,"line_end":1196,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":45911,"byte_end":45914,"line_start":1197,"line_end":1197,"column_start":1,"column_end":4}},{"value":"/ let json = json!({","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":45915,"byte_end":45937,"line_start":1198,"line_end":1198,"column_start":1,"column_end":23}},{"value":"/     \"st_f64\": 12345.5,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":45938,"byte_end":45964,"line_start":1199,"line_end":1199,"column_start":1,"column_end":27}},{"value":"/     \"st_string\": \"12345.987654\",","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":45965,"byte_end":46001,"line_start":1200,"line_end":1200,"column_start":1,"column_end":37}},{"value":"/ });","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":46002,"byte_end":46009,"line_start":1201,"line_end":1201,"column_start":1,"column_end":8}},{"value":"/ let expected = Timestamps {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":46010,"byte_end":46041,"line_start":1202,"line_end":1202,"column_start":1,"column_end":32}},{"value":"/     st_f64: SystemTime::UNIX_EPOCH.checked_add(Duration::new(12345, 500_000_000)).unwrap(),","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":46042,"byte_end":46137,"line_start":1203,"line_end":1203,"column_start":1,"column_end":96}},{"value":"/     st_string: SystemTime::UNIX_EPOCH.checked_add(Duration::new(12345, 987_654_000)).unwrap(),","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":46138,"byte_end":46236,"line_start":1204,"line_end":1204,"column_start":1,"column_end":99}},{"value":"/ };","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":46237,"byte_end":46243,"line_start":1205,"line_end":1205,"column_start":1,"column_end":7}},{"value":"/ assert_eq!(expected, serde_json::from_value(json).unwrap());","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":46244,"byte_end":46308,"line_start":1206,"line_end":1206,"column_start":1,"column_end":65}},{"value":"/ # }","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":46309,"byte_end":46316,"line_start":1207,"line_end":1207,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":46317,"byte_end":46324,"line_start":1208,"line_end":1208,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":46325,"byte_end":46328,"line_start":1209,"line_end":1209,"column_start":1,"column_end":4}},{"value":"/ [`chrono::DateTime<Utc>`][DateTime] and [`chrono::DateTime<Local>`][DateTime] are also supported when using the `chrono` feature.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":46329,"byte_end":46462,"line_start":1210,"line_end":1210,"column_start":1,"column_end":134}},{"value":"/ Like [`SystemTime`], it is a signed timestamp, thus can be de/serialized as an `i64`.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":46463,"byte_end":46552,"line_start":1211,"line_end":1211,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":46553,"byte_end":46556,"line_start":1212,"line_end":1212,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":46557,"byte_end":46568,"line_start":1213,"line_end":1213,"column_start":1,"column_end":12}},{"value":"/ # #[cfg(all(feature = \"macros\", feature = \"chrono\"))] {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":46569,"byte_end":46628,"line_start":1214,"line_end":1214,"column_start":1,"column_end":60}},{"value":"/ # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":46629,"byte_end":46678,"line_start":1215,"line_end":1215,"column_start":1,"column_end":50}},{"value":"/ # use serde_json::json;","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":46679,"byte_end":46706,"line_start":1216,"line_end":1216,"column_start":1,"column_end":28}},{"value":"/ # use serde_with::{serde_as, TimestampSecondsWithFrac};","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":46707,"byte_end":46766,"line_start":1217,"line_end":1217,"column_start":1,"column_end":60}},{"value":"/ # use chrono_crate::{DateTime, Local, TimeZone, Utc};","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":46767,"byte_end":46824,"line_start":1218,"line_end":1218,"column_start":1,"column_end":58}},{"value":"/ # /* Ugliness to make the docs look nicer since I want to hide the rename of the chrono crate","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":46825,"byte_end":46922,"line_start":1219,"line_end":1219,"column_start":1,"column_end":98}},{"value":"/ use chrono::{DateTime, Local, TimeZone, Utc};","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":46923,"byte_end":46972,"line_start":1220,"line_end":1220,"column_start":1,"column_end":50}},{"value":"/ # */","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":46973,"byte_end":46981,"line_start":1221,"line_end":1221,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":46982,"byte_end":46985,"line_start":1222,"line_end":1222,"column_start":1,"column_end":4}},{"value":"/ #[serde_as]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":46986,"byte_end":47001,"line_start":1223,"line_end":1223,"column_start":1,"column_end":16}},{"value":"/ # #[derive(Debug, PartialEq)]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":47002,"byte_end":47035,"line_start":1224,"line_end":1224,"column_start":1,"column_end":34}},{"value":"/ #[derive(Deserialize, Serialize)]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":47036,"byte_end":47073,"line_start":1225,"line_end":1225,"column_start":1,"column_end":38}},{"value":"/ struct Timestamps {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":47074,"byte_end":47097,"line_start":1226,"line_end":1226,"column_start":1,"column_end":24}},{"value":"/     #[serde_as(as = \"TimestampSecondsWithFrac<f64>\")]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":47098,"byte_end":47155,"line_start":1227,"line_end":1227,"column_start":1,"column_end":58}},{"value":"/     dt_f64: DateTime<Utc>,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":47156,"byte_end":47186,"line_start":1228,"line_end":1228,"column_start":1,"column_end":31}},{"value":"/     #[serde_as(as = \"TimestampSecondsWithFrac<String>\")]","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":47187,"byte_end":47247,"line_start":1229,"line_end":1229,"column_start":1,"column_end":61}},{"value":"/     dt_string: DateTime<Local>,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":47248,"byte_end":47283,"line_start":1230,"line_end":1230,"column_start":1,"column_end":36}},{"value":"/ };","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":47284,"byte_end":47290,"line_start":1231,"line_end":1231,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":47291,"byte_end":47294,"line_start":1232,"line_end":1232,"column_start":1,"column_end":4}},{"value":"/ // Serialization","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":47295,"byte_end":47315,"line_start":1233,"line_end":1233,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":47316,"byte_end":47319,"line_start":1234,"line_end":1234,"column_start":1,"column_end":4}},{"value":"/ let ts = Timestamps {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":47320,"byte_end":47345,"line_start":1235,"line_end":1235,"column_start":1,"column_end":26}},{"value":"/     dt_f64: Utc.timestamp(-12345, 500_000_000),","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":47346,"byte_end":47397,"line_start":1236,"line_end":1236,"column_start":1,"column_end":52}},{"value":"/     dt_string: Local.timestamp(12345, 999_999_000),","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":47398,"byte_end":47453,"line_start":1237,"line_end":1237,"column_start":1,"column_end":56}},{"value":"/ };","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":47454,"byte_end":47460,"line_start":1238,"line_end":1238,"column_start":1,"column_end":7}},{"value":"/ // Observe the different datatypes","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":47461,"byte_end":47499,"line_start":1239,"line_end":1239,"column_start":1,"column_end":39}},{"value":"/ let expected = json!({","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":47500,"byte_end":47526,"line_start":1240,"line_end":1240,"column_start":1,"column_end":27}},{"value":"/     \"dt_f64\": -12344.5,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":47527,"byte_end":47554,"line_start":1241,"line_end":1241,"column_start":1,"column_end":28}},{"value":"/     \"dt_string\": \"12345.999999\",","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":47555,"byte_end":47591,"line_start":1242,"line_end":1242,"column_start":1,"column_end":37}},{"value":"/ });","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":47592,"byte_end":47599,"line_start":1243,"line_end":1243,"column_start":1,"column_end":8}},{"value":"/ assert_eq!(expected, serde_json::to_value(&ts).unwrap());","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":47600,"byte_end":47661,"line_start":1244,"line_end":1244,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":47662,"byte_end":47665,"line_start":1245,"line_end":1245,"column_start":1,"column_end":4}},{"value":"/ // Deserialization works too","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":47666,"byte_end":47698,"line_start":1246,"line_end":1246,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":47699,"byte_end":47702,"line_start":1247,"line_end":1247,"column_start":1,"column_end":4}},{"value":"/ let json = json!({","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":47703,"byte_end":47725,"line_start":1248,"line_end":1248,"column_start":1,"column_end":23}},{"value":"/     \"dt_f64\": -12344.5,","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":47726,"byte_end":47753,"line_start":1249,"line_end":1249,"column_start":1,"column_end":28}},{"value":"/     \"dt_string\": \"12345.987\",","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":47754,"byte_end":47787,"line_start":1250,"line_end":1250,"column_start":1,"column_end":34}},{"value":"/ });","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":47788,"byte_end":47795,"line_start":1251,"line_end":1251,"column_start":1,"column_end":8}},{"value":"/ let expected = Timestamps {","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":47796,"byte_end":47827,"line_start":1252,"line_end":1252,"column_start":1,"column_end":32}},{"value":"/     dt_f64: Utc.timestamp(-12345, 500_000_000),","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":47828,"byte_end":47879,"line_start":1253,"line_end":1253,"column_start":1,"column_end":52}},{"value":"/     dt_string: Local.timestamp(12345, 987_000_000),","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":47880,"byte_end":47935,"line_start":1254,"line_end":1254,"column_start":1,"column_end":56}},{"value":"/ };","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":47936,"byte_end":47942,"line_start":1255,"line_end":1255,"column_start":1,"column_end":7}},{"value":"/ assert_eq!(expected, serde_json::from_value(json).unwrap());","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":47943,"byte_end":48007,"line_start":1256,"line_end":1256,"column_start":1,"column_end":65}},{"value":"/ # }","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":48008,"byte_end":48015,"line_start":1257,"line_end":1257,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":48016,"byte_end":48023,"line_start":1258,"line_end":1258,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":48024,"byte_end":48027,"line_start":1259,"line_end":1259,"column_start":1,"column_end":4}},{"value":"/ [`SystemTime`]: std::time::SystemTime","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":48028,"byte_end":48069,"line_start":1260,"line_end":1260,"column_start":1,"column_end":42}},{"value":"/ [DateTime]: chrono_crate::DateTime","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":48070,"byte_end":48108,"line_start":1261,"line_end":1261,"column_start":1,"column_end":39}},{"value":"/ [feature flag]: https://docs.rs/serde_with/1.6.4/serde_with/guide/feature_flags/index.html","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":48109,"byte_end":48203,"line_start":1262,"line_end":1262,"column_start":1,"column_end":95}}]},{"kind":"Struct","id":{"krate":0,"index":6007},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":48685,"byte_end":48706,"line_start":1273,"line_end":1273,"column_start":12,"column_end":33},"name":"TimestampMilliSeconds","qualname":"::TimestampMilliSeconds","value":"","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to [`TimestampSeconds`] with milli-seconds as base unit.","sig":null,"attributes":[{"value":"/ Equivalent to [`TimestampSeconds`] with milli-seconds as base unit.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":48409,"byte_end":48480,"line_start":1269,"line_end":1269,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":48481,"byte_end":48484,"line_start":1270,"line_end":1270,"column_start":1,"column_end":4}},{"value":"/ This type is equivalent to [`TimestampSeconds`] except that the each unit represents 1 milli-second instead of 1 second for [`TimestampSeconds`].","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":48485,"byte_end":48634,"line_start":1271,"line_end":1271,"column_start":1,"column_end":150}}]},{"kind":"Struct","id":{"krate":0,"index":6027},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":49137,"byte_end":49166,"line_start":1282,"line_end":1282,"column_start":12,"column_end":41},"name":"TimestampMilliSecondsWithFrac","qualname":"::TimestampMilliSecondsWithFrac","value":"","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to [`TimestampSecondsWithFrac`] with milli-seconds as base unit.","sig":null,"attributes":[{"value":"/ Equivalent to [`TimestampSecondsWithFrac`] with milli-seconds as base unit.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":48837,"byte_end":48916,"line_start":1278,"line_end":1278,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":48917,"byte_end":48920,"line_start":1279,"line_end":1279,"column_start":1,"column_end":4}},{"value":"/ This type is equivalent to [`TimestampSecondsWithFrac`] except that the each unit represents 1 milli-second instead of 1 second for [`TimestampSecondsWithFrac`].","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":48921,"byte_end":49086,"line_start":1280,"line_end":1280,"column_start":1,"column_end":166}}]},{"kind":"Struct","id":{"krate":0,"index":6047},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":49573,"byte_end":49594,"line_start":1291,"line_end":1291,"column_start":12,"column_end":33},"name":"TimestampMicroSeconds","qualname":"::TimestampMicroSeconds","value":"","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to [`TimestampSeconds`] with micro-seconds as base unit.","sig":null,"attributes":[{"value":"/ Equivalent to [`TimestampSeconds`] with micro-seconds as base unit.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":49297,"byte_end":49368,"line_start":1287,"line_end":1287,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":49369,"byte_end":49372,"line_start":1288,"line_end":1288,"column_start":1,"column_end":4}},{"value":"/ This type is equivalent to [`TimestampSeconds`] except that the each unit represents 1 micro-second instead of 1 second for [`TimestampSeconds`].","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":49373,"byte_end":49522,"line_start":1289,"line_end":1289,"column_start":1,"column_end":150}}]},{"kind":"Struct","id":{"krate":0,"index":6067},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":50025,"byte_end":50054,"line_start":1300,"line_end":1300,"column_start":12,"column_end":41},"name":"TimestampMicroSecondsWithFrac","qualname":"::TimestampMicroSecondsWithFrac","value":"","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to [`TimestampSecondsWithFrac`] with micro-seconds as base unit.","sig":null,"attributes":[{"value":"/ Equivalent to [`TimestampSecondsWithFrac`] with micro-seconds as base unit.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":49725,"byte_end":49804,"line_start":1296,"line_end":1296,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":49805,"byte_end":49808,"line_start":1297,"line_end":1297,"column_start":1,"column_end":4}},{"value":"/ This type is equivalent to [`TimestampSecondsWithFrac`] except that the each unit represents 1 micro-second instead of 1 second for [`TimestampSecondsWithFrac`].","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":49809,"byte_end":49974,"line_start":1298,"line_end":1298,"column_start":1,"column_end":166}}]},{"kind":"Struct","id":{"krate":0,"index":6087},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":50459,"byte_end":50479,"line_start":1309,"line_end":1309,"column_start":12,"column_end":32},"name":"TimestampNanoSeconds","qualname":"::TimestampNanoSeconds","value":"","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to [`TimestampSeconds`] with nano-seconds as base unit.","sig":null,"attributes":[{"value":"/ Equivalent to [`TimestampSeconds`] with nano-seconds as base unit.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":50185,"byte_end":50255,"line_start":1305,"line_end":1305,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":50256,"byte_end":50259,"line_start":1306,"line_end":1306,"column_start":1,"column_end":4}},{"value":"/ This type is equivalent to [`TimestampSeconds`] except that the each unit represents 1 nano-second instead of 1 second for [`TimestampSeconds`].","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":50260,"byte_end":50408,"line_start":1307,"line_end":1307,"column_start":1,"column_end":149}}]},{"kind":"Struct","id":{"krate":0,"index":6107},"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":50908,"byte_end":50936,"line_start":1318,"line_end":1318,"column_start":12,"column_end":40},"name":"TimestampNanoSecondsWithFrac","qualname":"::TimestampNanoSecondsWithFrac","value":"","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to [`TimestampSecondsWithFrac`] with nano-seconds as base unit.","sig":null,"attributes":[{"value":"/ Equivalent to [`TimestampSecondsWithFrac`] with nano-seconds as base unit.","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":50610,"byte_end":50688,"line_start":1314,"line_end":1314,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":50689,"byte_end":50692,"line_start":1315,"line_end":1315,"column_start":1,"column_end":4}},{"value":"/ This type is equivalent to [`TimestampSecondsWithFrac`] except that the each unit represents 1 nano-second instead of 1 second for [`TimestampSecondsWithFrac`].","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":50693,"byte_end":50857,"line_start":1316,"line_end":1316,"column_start":1,"column_end":165}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/impls.rs","byte_start":56795,"byte_end":56798,"line_start":19,"line_end":19,"column_start":48,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":41}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/impls.rs","byte_start":57127,"byte_end":57133,"line_start":33,"line_end":33,"column_start":51,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":47}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/impls.rs","byte_start":57393,"byte_end":57406,"line_start":43,"line_end":43,"column_start":42,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":62},{"krate":0,"index":64}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/impls.rs","byte_start":63778,"byte_end":63792,"line_start":243,"line_end":243,"column_start":40,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":73}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/impls.rs","byte_start":70987,"byte_end":70991,"line_start":403,"line_end":403,"column_start":58,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":80}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/impls.rs","byte_start":73290,"byte_end":73307,"line_start":468,"line_end":468,"column_start":52,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":87}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/impls.rs","byte_start":73570,"byte_end":73591,"line_start":477,"line_end":477,"column_start":41,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":99}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/impls.rs","byte_start":79056,"byte_end":79070,"line_start":629,"line_end":629,"column_start":45,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":108}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/impls.rs","byte_start":80129,"byte_end":80142,"line_start":662,"line_end":662,"column_start":43,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/impls.rs","byte_start":80388,"byte_end":80407,"line_start":671,"line_end":671,"column_start":54,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":119}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/impls.rs","byte_start":83594,"byte_end":83607,"line_start":779,"line_end":779,"column_start":43,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":126}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/mod.rs","byte_start":55848,"byte_end":55865,"line_start":120,"line_end":120,"column_start":17,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":138}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/mod.rs","byte_start":56018,"byte_end":56035,"line_start":127,"line_end":127,"column_start":38,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":143}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/duplicate_key_impls/error_on_duplicate.rs","byte_start":84790,"byte_end":84797,"line_start":20,"line_end":20,"column_start":46,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":169},{"krate":0,"index":170}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/duplicate_key_impls/error_on_duplicate.rs","byte_start":85232,"byte_end":85240,"line_start":39,"line_end":39,"column_start":43,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":173},{"krate":0,"index":174}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/duplicate_key_impls/error_on_duplicate.rs","byte_start":85499,"byte_end":85506,"line_start":54,"line_end":54,"column_start":52,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":179},{"krate":0,"index":180}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/duplicate_key_impls/error_on_duplicate.rs","byte_start":85973,"byte_end":85981,"line_start":73,"line_end":73,"column_start":49,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":184},{"krate":0,"index":185}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/duplicate_key_impls/first_value_wins.rs","byte_start":86871,"byte_end":86878,"line_start":22,"line_end":22,"column_start":48,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":208},{"krate":0,"index":209}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/duplicate_key_impls/first_value_wins.rs","byte_start":87410,"byte_end":87418,"line_start":43,"line_end":43,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":212},{"krate":0,"index":213}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/duplicate_key_impls/first_value_wins.rs","byte_start":87754,"byte_end":87761,"line_start":59,"line_end":59,"column_start":54,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":218},{"krate":0,"index":219}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/duplicate_key_impls/first_value_wins.rs","byte_start":88460,"byte_end":88468,"line_start":86,"line_end":86,"column_start":51,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":224},{"krate":0,"index":225}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/duplicate_key_impls/last_value_wins.rs","byte_start":89238,"byte_end":89245,"line_start":13,"line_end":13,"column_start":47,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":242},{"krate":0,"index":243}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/duplicate_key_impls/last_value_wins.rs","byte_start":89724,"byte_end":89732,"line_start":33,"line_end":33,"column_start":44,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":246},{"krate":0,"index":247}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/formats.rs","byte_start":95106,"byte_end":95112,"line_start":79,"line_end":79,"column_start":21,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/formats.rs","byte_start":95262,"byte_end":95270,"line_start":84,"line_end":84,"column_start":21,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":97991,"byte_end":97997,"line_start":89,"line_end":89,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":309},{"krate":0,"index":310},{"krate":0,"index":311}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":101684,"byte_end":101690,"line_start":209,"line_end":209,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":347},{"krate":0,"index":348},{"krate":0,"index":349}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":105283,"byte_end":105302,"line_start":320,"line_end":320,"column_start":11,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":358},{"krate":0,"index":362}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":113598,"byte_end":113608,"line_start":571,"line_end":571,"column_start":42,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":402},{"krate":0,"index":403},{"krate":0,"index":404}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":116850,"byte_end":116860,"line_start":675,"line_end":675,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":430},{"krate":0,"index":431},{"krate":0,"index":432}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":119178,"byte_end":119188,"line_start":744,"line_end":744,"column_start":42,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":454},{"krate":0,"index":455},{"krate":0,"index":456}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":121458,"byte_end":121468,"line_start":813,"line_end":813,"column_start":42,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":478},{"krate":0,"index":479},{"krate":0,"index":480}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":124541,"byte_end":124551,"line_start":916,"line_end":916,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":506},{"krate":0,"index":507},{"krate":0,"index":508}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":127808,"byte_end":127829,"line_start":1027,"line_end":1027,"column_start":39,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":526},{"krate":0,"index":527},{"krate":0,"index":528},{"krate":0,"index":530},{"krate":0,"index":532}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":132866,"byte_end":132880,"line_start":1196,"line_end":1196,"column_start":42,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":563},{"krate":0,"index":564},{"krate":0,"index":565}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":136284,"byte_end":136299,"line_start":1307,"line_end":1307,"column_start":38,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":587},{"krate":0,"index":588},{"krate":0,"index":589}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":141312,"byte_end":141322,"line_start":1461,"line_end":1461,"column_start":41,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":618},{"krate":0,"index":619},{"krate":0,"index":620}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":141924,"byte_end":141931,"line_start":1484,"line_end":1484,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":635},{"krate":0,"index":636},{"krate":0,"index":637}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":144677,"byte_end":144697,"line_start":1589,"line_end":1589,"column_start":32,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":647},{"krate":0,"index":648},{"krate":0,"index":649},{"krate":0,"index":651},{"krate":0,"index":653},{"krate":0,"index":655},{"krate":0,"index":657}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/impls.rs","byte_start":159942,"byte_end":159945,"line_start":26,"line_end":26,"column_start":36,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":715}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/impls.rs","byte_start":160215,"byte_end":160221,"line_start":38,"line_end":38,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":720}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/impls.rs","byte_start":162453,"byte_end":162467,"line_start":104,"line_end":104,"column_start":28,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":730}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/impls.rs","byte_start":166109,"byte_end":166113,"line_start":209,"line_end":209,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":736}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/impls.rs","byte_start":167203,"byte_end":167220,"line_start":245,"line_end":245,"column_start":50,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":741}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/impls.rs","byte_start":169095,"byte_end":169109,"line_start":303,"line_end":303,"column_start":33,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":748}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/impls.rs","byte_start":169349,"byte_end":169362,"line_start":315,"line_end":315,"column_start":31,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":751}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/impls.rs","byte_start":169574,"byte_end":169593,"line_start":324,"line_end":324,"column_start":42,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":758}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/impls.rs","byte_start":172940,"byte_end":172953,"line_start":431,"line_end":431,"column_start":31,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":764}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/mod.rs","byte_start":158586,"byte_end":158601,"line_start":117,"line_end":117,"column_start":16,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":775}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/mod.rs","byte_start":158853,"byte_end":158868,"line_start":131,"line_end":131,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":780}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/mod.rs","byte_start":159136,"byte_end":159151,"line_start":145,"line_end":145,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":786}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/utils/duration.rs","byte_start":177418,"byte_end":177422,"line_start":25,"line_end":25,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":823},{"krate":0,"index":824},{"krate":0,"index":825}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/utils/duration.rs","byte_start":177994,"byte_end":178008,"line_start":53,"line_end":53,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":828},{"krate":0,"index":829},{"krate":0,"index":833}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/utils/duration.rs","byte_start":179125,"byte_end":179139,"line_start":90,"line_end":90,"column_start":26,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":837}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/utils/duration.rs","byte_start":179303,"byte_end":179317,"line_start":99,"line_end":99,"column_start":28,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":839}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/utils/duration.rs","byte_start":179728,"byte_end":179742,"line_start":114,"line_end":114,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":841},{"krate":0,"index":842}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/utils/duration.rs","byte_start":179909,"byte_end":179923,"line_start":123,"line_end":123,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":844},{"krate":0,"index":845}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/utils/duration.rs","byte_start":180111,"byte_end":180126,"line_start":132,"line_end":132,"column_start":50,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":848}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/utils/duration.rs","byte_start":180855,"byte_end":180870,"line_start":160,"line_end":160,"column_start":50,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":852}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/utils/duration.rs","byte_start":181453,"byte_end":181468,"line_start":182,"line_end":182,"column_start":50,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":856}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/utils/duration.rs","byte_start":182053,"byte_end":182068,"line_start":204,"line_end":204,"column_start":50,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":860}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/utils/duration.rs","byte_start":182666,"byte_end":182689,"line_start":226,"line_end":226,"column_start":50,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":864}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/utils/duration.rs","byte_start":183064,"byte_end":183087,"line_start":241,"line_end":241,"column_start":50,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":868}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/utils/duration.rs","byte_start":185112,"byte_end":185135,"line_start":306,"line_end":306,"column_start":28,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":875},{"krate":0,"index":876},{"krate":0,"index":877},{"krate":0,"index":879},{"krate":0,"index":881},{"krate":0,"index":883}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/utils/duration.rs","byte_start":186541,"byte_end":186556,"line_start":352,"line_end":352,"column_start":50,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":887}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/utils/duration.rs","byte_start":186855,"byte_end":186870,"line_start":361,"line_end":361,"column_start":50,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":892}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/utils/duration.rs","byte_start":187356,"byte_end":187371,"line_start":377,"line_end":377,"column_start":50,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":897}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/utils/duration.rs","byte_start":187705,"byte_end":187720,"line_start":387,"line_end":387,"column_start":50,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":901}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/utils/duration.rs","byte_start":187946,"byte_end":187976,"line_start":394,"line_end":394,"column_start":36,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":907},{"krate":0,"index":908},{"krate":0,"index":909}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/utils/duration.rs","byte_start":188805,"byte_end":188820,"line_start":419,"line_end":419,"column_start":58,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":914}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/utils/duration.rs","byte_start":189111,"byte_end":189134,"line_start":431,"line_end":431,"column_start":50,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":918}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/utils/duration.rs","byte_start":189460,"byte_end":189483,"line_start":441,"line_end":441,"column_start":50,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":922}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/utils/duration.rs","byte_start":190252,"byte_end":190275,"line_start":461,"line_end":461,"column_start":58,"column_end":81},"value":"","parent":null,"children":[{"krate":0,"index":927}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Inherent","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/utils.rs","byte_start":173943,"byte_end":173950,"line_start":24,"line_end":24,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":955}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/utils.rs","byte_start":174190,"byte_end":174197,"line_start":36,"line_end":36,"column_start":43,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":963},{"krate":0,"index":964},{"krate":0,"index":965}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Inherent","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/utils.rs","byte_start":174884,"byte_end":174891,"line_start":62,"line_end":62,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":982}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/utils.rs","byte_start":175131,"byte_end":175138,"line_start":74,"line_end":74,"column_start":43,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":990},{"krate":0,"index":991},{"krate":0,"index":992}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/with_prefix.rs","byte_start":197380,"byte_end":197390,"line_start":146,"line_end":146,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1024}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/with_prefix.rs","byte_start":197691,"byte_end":197701,"line_start":161,"line_end":161,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1029},{"krate":0,"index":1030},{"krate":0,"index":1031},{"krate":0,"index":1032},{"krate":0,"index":1033},{"krate":0,"index":1034},{"krate":0,"index":1035},{"krate":0,"index":1036},{"krate":0,"index":1037},{"krate":0,"index":1038},{"krate":0,"index":1039},{"krate":0,"index":1040},{"krate":0,"index":1041},{"krate":0,"index":1042},{"krate":0,"index":1043},{"krate":0,"index":1044},{"krate":0,"index":1045},{"krate":0,"index":1046},{"krate":0,"index":1047},{"krate":0,"index":1048},{"krate":0,"index":1049},{"krate":0,"index":1050},{"krate":0,"index":1051},{"krate":0,"index":1052},{"krate":0,"index":1053},{"krate":0,"index":1055},{"krate":0,"index":1056},{"krate":0,"index":1057},{"krate":0,"index":1058},{"krate":0,"index":1060},{"krate":0,"index":1062},{"krate":0,"index":1063},{"krate":0,"index":1064},{"krate":0,"index":1065},{"krate":0,"index":1066},{"krate":0,"index":1067},{"krate":0,"index":1068}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/with_prefix.rs","byte_start":203215,"byte_end":203225,"line_start":339,"line_end":339,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1072},{"krate":0,"index":1073},{"krate":0,"index":1074},{"krate":0,"index":1076},{"krate":0,"index":1078},{"krate":0,"index":1081}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/with_prefix.rs","byte_start":204201,"byte_end":204211,"line_start":382,"line_end":382,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1085},{"krate":0,"index":1086},{"krate":0,"index":1087},{"krate":0,"index":1089}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/with_prefix.rs","byte_start":204801,"byte_end":204811,"line_start":404,"line_end":404,"column_start":43,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1094},{"krate":0,"index":1095}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/with_prefix.rs","byte_start":205183,"byte_end":205193,"line_start":421,"line_end":421,"column_start":40,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1101},{"krate":0,"index":1102},{"krate":0,"index":1104},{"krate":0,"index":1106},{"krate":0,"index":5566},{"krate":0,"index":5568},{"krate":0,"index":5570},{"krate":0,"index":5572},{"krate":0,"index":5574},{"krate":0,"index":5576},{"krate":0,"index":5578},{"krate":0,"index":5580},{"krate":0,"index":5582},{"krate":0,"index":5584},{"krate":0,"index":5586},{"krate":0,"index":5588},{"krate":0,"index":5590},{"krate":0,"index":5592},{"krate":0,"index":5594},{"krate":0,"index":5596},{"krate":0,"index":5598},{"krate":0,"index":5600},{"krate":0,"index":5602},{"krate":0,"index":5604},{"krate":0,"index":5606},{"krate":0,"index":5608},{"krate":0,"index":5610},{"krate":0,"index":5612},{"krate":0,"index":5614},{"krate":0,"index":5616},{"krate":0,"index":5618},{"krate":0,"index":5620}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/with_prefix.rs","byte_start":206336,"byte_end":206346,"line_start":465,"line_end":465,"column_start":35,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1112},{"krate":0,"index":1113},{"krate":0,"index":1114}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/with_prefix.rs","byte_start":206809,"byte_end":206819,"line_start":486,"line_end":486,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1120},{"krate":0,"index":1121},{"krate":0,"index":1123}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/with_prefix.rs","byte_start":207821,"byte_end":207837,"line_start":523,"line_end":523,"column_start":35,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1135},{"krate":0,"index":1136},{"krate":0,"index":1137},{"krate":0,"index":1139}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/with_prefix.rs","byte_start":208731,"byte_end":208747,"line_start":558,"line_end":558,"column_start":40,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1145},{"krate":0,"index":1146},{"krate":0,"index":5622},{"krate":0,"index":5624},{"krate":0,"index":5626},{"krate":0,"index":5628},{"krate":0,"index":5630},{"krate":0,"index":5632},{"krate":0,"index":5634},{"krate":0,"index":5636},{"krate":0,"index":5638},{"krate":0,"index":5640},{"krate":0,"index":5642},{"krate":0,"index":5644},{"krate":0,"index":5646},{"krate":0,"index":5648},{"krate":0,"index":5650},{"krate":0,"index":5652},{"krate":0,"index":5654},{"krate":0,"index":5656},{"krate":0,"index":5658},{"krate":0,"index":5660},{"krate":0,"index":5662},{"krate":0,"index":5664},{"krate":0,"index":5666},{"krate":0,"index":5668},{"krate":0,"index":5670},{"krate":0,"index":5672},{"krate":0,"index":5674},{"krate":0,"index":5676},{"krate":0,"index":5678},{"krate":0,"index":5680}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/with_prefix.rs","byte_start":209259,"byte_end":209275,"line_start":578,"line_end":578,"column_start":37,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1152},{"krate":0,"index":1153},{"krate":0,"index":1155}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":10276,"byte_end":10290,"line_start":286,"line_end":286,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1171}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":10535,"byte_end":10549,"line_start":297,"line_end":297,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1173}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Inherent","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":12794,"byte_end":12796,"line_start":347,"line_end":347,"column_start":17,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1176},{"krate":0,"index":1179}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":7989,"byte_end":7991,"line_start":215,"line_end":215,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":4}},{"kind":"Mod","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":8045,"byte_end":8052,"line_start":218,"line_end":218,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":258}},{"kind":"Mod","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":8138,"byte_end":8142,"line_start":223,"line_end":223,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":265}},{"kind":"Mod","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":8152,"byte_end":8155,"line_start":224,"line_end":224,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":682}},{"kind":"Mod","span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":8191,"byte_end":8202,"line_start":227,"line_end":227,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":996}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/impls.rs","byte_start":56795,"byte_end":56798,"line_start":19,"line_end":19,"column_start":48,"column_end":51},"kind":{"Impl":{"id":0}},"from":{"krate":5,"index":105},"to":{"krate":0,"index":129}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/impls.rs","byte_start":57127,"byte_end":57133,"line_start":33,"line_end":33,"column_start":51,"column_end":57},"kind":{"Impl":{"id":1}},"from":{"krate":2,"index":34651},"to":{"krate":0,"index":129}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/impls.rs","byte_start":57393,"byte_end":57406,"line_start":43,"line_end":43,"column_start":42,"column_end":55},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":49},"to":{"krate":16,"index":1275}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/impls.rs","byte_start":63778,"byte_end":63792,"line_start":243,"line_end":243,"column_start":40,"column_end":54},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":5750},"to":{"krate":0,"index":129}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/impls.rs","byte_start":70987,"byte_end":70991,"line_start":403,"line_end":403,"column_start":58,"column_end":62},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":5741},"to":{"krate":0,"index":129}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/impls.rs","byte_start":73290,"byte_end":73307,"line_start":468,"line_end":468,"column_start":52,"column_end":69},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":5759},"to":{"krate":0,"index":129}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/impls.rs","byte_start":73570,"byte_end":73591,"line_start":477,"line_end":477,"column_start":41,"column_end":62},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":89},"to":{"krate":16,"index":1275}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/impls.rs","byte_start":79056,"byte_end":79070,"line_start":629,"line_end":629,"column_start":45,"column_end":59},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":5768},"to":{"krate":0,"index":129}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/impls.rs","byte_start":80129,"byte_end":80142,"line_start":662,"line_end":662,"column_start":43,"column_end":56},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":5798},"to":{"krate":0,"index":129}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/impls.rs","byte_start":80388,"byte_end":80407,"line_start":671,"line_end":671,"column_start":54,"column_end":73},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":3732},"to":{"krate":0,"index":129}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/impls.rs","byte_start":83594,"byte_end":83607,"line_start":779,"line_end":779,"column_start":43,"column_end":56},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":5783},"to":{"krate":0,"index":129}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/mod.rs","byte_start":55478,"byte_end":55483,"line_start":106,"line_end":106,"column_start":34,"column_end":39},"kind":"SuperTrait","from":{"krate":2,"index":2086},"to":{"krate":0,"index":129}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/mod.rs","byte_start":55848,"byte_end":55865,"line_start":120,"line_end":120,"column_start":17,"column_end":34},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":3671},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/de/mod.rs","byte_start":56018,"byte_end":56035,"line_start":127,"line_end":127,"column_start":38,"column_end":55},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":3671},"to":{"krate":16,"index":1191}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/duplicate_key_impls/error_on_duplicate.rs","byte_start":84790,"byte_end":84797,"line_start":20,"line_end":20,"column_start":46,"column_end":53},"kind":{"Impl":{"id":14}},"from":{"krate":1,"index":1281},"to":{"krate":0,"index":157}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/duplicate_key_impls/error_on_duplicate.rs","byte_start":85232,"byte_end":85240,"line_start":39,"line_end":39,"column_start":43,"column_end":51},"kind":{"Impl":{"id":15}},"from":{"krate":5,"index":5706},"to":{"krate":0,"index":157}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/duplicate_key_impls/error_on_duplicate.rs","byte_start":85499,"byte_end":85506,"line_start":54,"line_end":54,"column_start":52,"column_end":59},"kind":{"Impl":{"id":16}},"from":{"krate":1,"index":617},"to":{"krate":0,"index":161}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/duplicate_key_impls/error_on_duplicate.rs","byte_start":85973,"byte_end":85981,"line_start":73,"line_end":73,"column_start":49,"column_end":57},"kind":{"Impl":{"id":17}},"from":{"krate":5,"index":933},"to":{"krate":0,"index":161}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/duplicate_key_impls/first_value_wins.rs","byte_start":86871,"byte_end":86878,"line_start":22,"line_end":22,"column_start":48,"column_end":55},"kind":{"Impl":{"id":18}},"from":{"krate":1,"index":1281},"to":{"krate":0,"index":196}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/duplicate_key_impls/first_value_wins.rs","byte_start":87410,"byte_end":87418,"line_start":43,"line_end":43,"column_start":45,"column_end":53},"kind":{"Impl":{"id":19}},"from":{"krate":5,"index":5706},"to":{"krate":0,"index":196}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/duplicate_key_impls/first_value_wins.rs","byte_start":87754,"byte_end":87761,"line_start":59,"line_end":59,"column_start":54,"column_end":61},"kind":{"Impl":{"id":20}},"from":{"krate":1,"index":617},"to":{"krate":0,"index":200}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/duplicate_key_impls/first_value_wins.rs","byte_start":88460,"byte_end":88468,"line_start":86,"line_end":86,"column_start":51,"column_end":59},"kind":{"Impl":{"id":21}},"from":{"krate":5,"index":933},"to":{"krate":0,"index":200}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/duplicate_key_impls/last_value_wins.rs","byte_start":89238,"byte_end":89245,"line_start":13,"line_end":13,"column_start":47,"column_end":54},"kind":{"Impl":{"id":22}},"from":{"krate":1,"index":1281},"to":{"krate":0,"index":235}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/duplicate_key_impls/last_value_wins.rs","byte_start":89724,"byte_end":89732,"line_start":33,"line_end":33,"column_start":44,"column_end":52},"kind":{"Impl":{"id":23}},"from":{"krate":5,"index":5706},"to":{"krate":0,"index":235}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/formats.rs","byte_start":95106,"byte_end":95112,"line_start":79,"line_end":79,"column_start":21,"column_end":27},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":3714},"to":{"krate":0,"index":262}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/formats.rs","byte_start":95262,"byte_end":95270,"line_start":84,"line_end":84,"column_start":21,"column_end":29},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":3723},"to":{"krate":0,"index":262}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":97991,"byte_end":97997,"line_start":89,"line_end":89,"column_start":39,"column_end":45},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":302},"to":{"krate":16,"index":1275}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":101684,"byte_end":101690,"line_start":209,"line_end":209,"column_start":39,"column_end":45},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":340},"to":{"krate":16,"index":1275}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":105283,"byte_end":105302,"line_start":320,"line_end":320,"column_start":11,"column_end":30},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":3732},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":113598,"byte_end":113608,"line_start":571,"line_end":571,"column_start":42,"column_end":52},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":393},"to":{"krate":16,"index":1275}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":116850,"byte_end":116860,"line_start":675,"line_end":675,"column_start":45,"column_end":55},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":418},"to":{"krate":16,"index":1275}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":119178,"byte_end":119188,"line_start":744,"line_end":744,"column_start":42,"column_end":52},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":445},"to":{"krate":16,"index":1275}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":121458,"byte_end":121468,"line_start":813,"line_end":813,"column_start":42,"column_end":52},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":469},"to":{"krate":16,"index":1275}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":124541,"byte_end":124551,"line_start":916,"line_end":916,"column_start":45,"column_end":55},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":494},"to":{"krate":16,"index":1275}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":127808,"byte_end":127829,"line_start":1027,"line_end":1027,"column_start":39,"column_end":60},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":519},"to":{"krate":16,"index":1275}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":132866,"byte_end":132880,"line_start":1196,"line_end":1196,"column_start":42,"column_end":56},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":552},"to":{"krate":16,"index":1275}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":136284,"byte_end":136299,"line_start":1307,"line_end":1307,"column_start":38,"column_end":53},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":578},"to":{"krate":16,"index":1275}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":141312,"byte_end":141322,"line_start":1461,"line_end":1461,"column_start":41,"column_end":51},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":607},"to":{"krate":16,"index":1275}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":141924,"byte_end":141931,"line_start":1484,"line_end":1484,"column_start":37,"column_end":44},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":622},"to":{"krate":2,"index":5625}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/rust.rs","byte_start":144677,"byte_end":144697,"line_start":1589,"line_end":1589,"column_start":32,"column_end":52},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":643},"to":{"krate":16,"index":1275}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/impls.rs","byte_start":159942,"byte_end":159945,"line_start":26,"line_end":26,"column_start":36,"column_end":39},"kind":{"Impl":{"id":55}},"from":{"krate":5,"index":105},"to":{"krate":0,"index":767}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/impls.rs","byte_start":160215,"byte_end":160221,"line_start":38,"line_end":38,"column_start":39,"column_end":45},"kind":{"Impl":{"id":56}},"from":{"krate":2,"index":34651},"to":{"krate":0,"index":767}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/impls.rs","byte_start":162453,"byte_end":162467,"line_start":104,"line_end":104,"column_start":28,"column_end":42},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":5750},"to":{"krate":0,"index":767}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/impls.rs","byte_start":166109,"byte_end":166113,"line_start":209,"line_end":209,"column_start":28,"column_end":32},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":5741},"to":{"krate":0,"index":767}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/impls.rs","byte_start":167203,"byte_end":167220,"line_start":245,"line_end":245,"column_start":50,"column_end":67},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":5759},"to":{"krate":0,"index":767}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/impls.rs","byte_start":169095,"byte_end":169109,"line_start":303,"line_end":303,"column_start":33,"column_end":47},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":5768},"to":{"krate":0,"index":767}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/impls.rs","byte_start":169349,"byte_end":169362,"line_start":315,"line_end":315,"column_start":31,"column_end":44},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":5798},"to":{"krate":0,"index":767}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/impls.rs","byte_start":169574,"byte_end":169593,"line_start":324,"line_end":324,"column_start":42,"column_end":61},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":3732},"to":{"krate":0,"index":767}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/impls.rs","byte_start":172940,"byte_end":172953,"line_start":431,"line_end":431,"column_start":31,"column_end":44},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":5783},"to":{"krate":0,"index":767}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/mod.rs","byte_start":158586,"byte_end":158601,"line_start":117,"line_end":117,"column_start":16,"column_end":31},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":5450},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/mod.rs","byte_start":158853,"byte_end":158868,"line_start":131,"line_end":131,"column_start":30,"column_end":45},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":5450},"to":{"krate":16,"index":1636}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/ser/mod.rs","byte_start":159136,"byte_end":159151,"line_start":145,"line_end":145,"column_start":32,"column_end":47},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":5450},"to":{"krate":2,"index":1997}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/utils/duration.rs","byte_start":177418,"byte_end":177422,"line_start":25,"line_end":25,"column_start":6,"column_end":10},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":5461},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/utils/duration.rs","byte_start":177994,"byte_end":178008,"line_start":53,"line_end":53,"column_start":6,"column_end":20},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":5477},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/utils/duration.rs","byte_start":179125,"byte_end":179139,"line_start":90,"line_end":90,"column_start":26,"column_end":40},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":5477},"to":{"krate":2,"index":1997}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/utils/duration.rs","byte_start":179303,"byte_end":179317,"line_start":99,"line_end":99,"column_start":28,"column_end":42},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":5477},"to":{"krate":2,"index":1997}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/utils/duration.rs","byte_start":179728,"byte_end":179742,"line_start":114,"line_end":114,"column_start":29,"column_end":43},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":5477},"to":{"krate":2,"index":2156}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/utils/duration.rs","byte_start":179909,"byte_end":179923,"line_start":123,"line_end":123,"column_start":29,"column_end":43},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":5477},"to":{"krate":2,"index":2161}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/utils/duration.rs","byte_start":180111,"byte_end":180126,"line_start":132,"line_end":132,"column_start":50,"column_end":65},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":5807},"to":{"krate":0,"index":767}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/utils/duration.rs","byte_start":180855,"byte_end":180870,"line_start":160,"line_end":160,"column_start":50,"column_end":65},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":5807},"to":{"krate":0,"index":767}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/utils/duration.rs","byte_start":181453,"byte_end":181468,"line_start":182,"line_end":182,"column_start":50,"column_end":65},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":5807},"to":{"krate":0,"index":767}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/utils/duration.rs","byte_start":182053,"byte_end":182068,"line_start":204,"line_end":204,"column_start":50,"column_end":65},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":5807},"to":{"krate":0,"index":767}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/utils/duration.rs","byte_start":182666,"byte_end":182689,"line_start":226,"line_end":226,"column_start":50,"column_end":73},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":5827},"to":{"krate":0,"index":767}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/utils/duration.rs","byte_start":183064,"byte_end":183087,"line_start":241,"line_end":241,"column_start":50,"column_end":73},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":5827},"to":{"krate":0,"index":767}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/utils/duration.rs","byte_start":185112,"byte_end":185135,"line_start":306,"line_end":306,"column_start":28,"column_end":51},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":871},"to":{"krate":16,"index":1275}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/utils/duration.rs","byte_start":186541,"byte_end":186556,"line_start":352,"line_end":352,"column_start":50,"column_end":65},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":5807},"to":{"krate":0,"index":129}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/utils/duration.rs","byte_start":186855,"byte_end":186870,"line_start":361,"line_end":361,"column_start":50,"column_end":65},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":5807},"to":{"krate":0,"index":129}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/utils/duration.rs","byte_start":187356,"byte_end":187371,"line_start":377,"line_end":377,"column_start":50,"column_end":65},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":5807},"to":{"krate":0,"index":129}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/utils/duration.rs","byte_start":187705,"byte_end":187720,"line_start":387,"line_end":387,"column_start":50,"column_end":65},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":5807},"to":{"krate":0,"index":129}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/utils/duration.rs","byte_start":187946,"byte_end":187976,"line_start":394,"line_end":394,"column_start":36,"column_end":66},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":903},"to":{"krate":16,"index":1275}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/utils/duration.rs","byte_start":188805,"byte_end":188820,"line_start":419,"line_end":419,"column_start":58,"column_end":73},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":5807},"to":{"krate":0,"index":129}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/utils/duration.rs","byte_start":189111,"byte_end":189134,"line_start":431,"line_end":431,"column_start":50,"column_end":73},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":5827},"to":{"krate":0,"index":129}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/utils/duration.rs","byte_start":189460,"byte_end":189483,"line_start":441,"line_end":441,"column_start":50,"column_end":73},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":5827},"to":{"krate":0,"index":129}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/utils/duration.rs","byte_start":190252,"byte_end":190275,"line_start":461,"line_end":461,"column_start":58,"column_end":81},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":5827},"to":{"krate":0,"index":129}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/utils.rs","byte_start":173943,"byte_end":173950,"line_start":24,"line_end":24,"column_start":30,"column_end":37},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":939},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/utils.rs","byte_start":174190,"byte_end":174197,"line_start":36,"line_end":36,"column_start":43,"column_end":50},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":939},"to":{"krate":2,"index":5625}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/utils.rs","byte_start":174884,"byte_end":174891,"line_start":62,"line_end":62,"column_start":30,"column_end":37},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":966},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/utils.rs","byte_start":175131,"byte_end":175138,"line_start":74,"line_end":74,"column_start":43,"column_end":50},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":966},"to":{"krate":2,"index":5625}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/with_prefix.rs","byte_start":197380,"byte_end":197390,"line_start":146,"line_end":146,"column_start":27,"column_end":37},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1016},"to":{"krate":16,"index":1636}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/with_prefix.rs","byte_start":197691,"byte_end":197701,"line_start":161,"line_end":161,"column_start":28,"column_end":38},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1016},"to":{"krate":16,"index":1639}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/with_prefix.rs","byte_start":203215,"byte_end":203225,"line_start":339,"line_end":339,"column_start":30,"column_end":40},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1016},"to":{"krate":16,"index":1714}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/with_prefix.rs","byte_start":204201,"byte_end":204211,"line_start":382,"line_end":382,"column_start":33,"column_end":43},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1016},"to":{"krate":16,"index":1725}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/with_prefix.rs","byte_start":204801,"byte_end":204811,"line_start":404,"line_end":404,"column_start":43,"column_end":53},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1016},"to":{"krate":16,"index":1202}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/with_prefix.rs","byte_start":205183,"byte_end":205193,"line_start":421,"line_end":421,"column_start":40,"column_end":50},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1016},"to":{"krate":16,"index":1213}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/with_prefix.rs","byte_start":206336,"byte_end":206346,"line_start":465,"line_end":465,"column_start":35,"column_end":45},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1016},"to":{"krate":16,"index":1275}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/with_prefix.rs","byte_start":206809,"byte_end":206819,"line_start":486,"line_end":486,"column_start":37,"column_end":47},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":1016},"to":{"krate":16,"index":1349}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/with_prefix.rs","byte_start":207821,"byte_end":207837,"line_start":523,"line_end":523,"column_start":35,"column_end":51},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1125},"to":{"krate":16,"index":1275}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/with_prefix.rs","byte_start":208731,"byte_end":208747,"line_start":558,"line_end":558,"column_start":40,"column_end":56},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":1125},"to":{"krate":16,"index":1213}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/with_prefix.rs","byte_start":209259,"byte_end":209275,"line_start":578,"line_end":578,"column_start":37,"column_end":53},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":1125},"to":{"krate":16,"index":1349}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":10276,"byte_end":10290,"line_start":286,"line_end":286,"column_start":20,"column_end":34},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":5682},"to":{"krate":0,"index":1168}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":10535,"byte_end":10549,"line_start":297,"line_end":297,"column_start":20,"column_end":34},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":5704},"to":{"krate":0,"index":1168}},{"span":{"file_name":"/Users/wbn/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_with-1.6.4/src/lib.rs","byte_start":12794,"byte_end":12796,"line_start":347,"line_end":347,"column_start":17,"column_end":19},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":5726},"to":{"krate":4294967295,"index":4294967295}}]}